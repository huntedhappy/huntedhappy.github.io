<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>devops - Tag - Dokyung&#39;s DevOoOps</title>
        <link>https://huntedhappy.github.io/ko/tags/devops/</link>
        <description>devops - Tag - Dokyung&#39;s DevOoOps</description>
        <generator>Hugo -- gohugo.io</generator><language>ko</language><managingEditor>huntedhappy@gmail.com (Dokyung)</managingEditor>
            <webMaster>huntedhappy@gmail.com (Dokyung)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 07 Jan 2023 19:00:14 &#43;0900</lastBuildDate><atom:link href="https://huntedhappy.github.io/ko/tags/devops/" rel="self" type="application/rss+xml" /><item>
    <title>The Documentation Harbor</title>
    <link>https://huntedhappy.github.io/ko/harbor/</link>
    <pubDate>Sat, 07 Jan 2023 19:00:14 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://huntedhappy.github.io/ko/harbor/</guid>
    <description><![CDATA[<h2 id="harbor에-vm-disk가-부족-하게-되면-사이즈를-늘려보자">Harbor에 VM Disk가 부족 하게 되면 사이즈를 늘려보자</h2>
<h2 id="1-harbor-vm-disk-증설">1. Harbor VM DISK 증설</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">df -h
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">fdisk -l
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 아래와 같이 에러가 나온다면</span>
</span></span><span class="line"><span class="cl">&gt;&gt; GPT PMBR size mismatch 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## parted로 fix를 해보자</span>
</span></span><span class="line"><span class="cl">parted /dev/sda
</span></span><span class="line"><span class="cl">p &gt; f
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><figcaption>
            <h4>Disk 상태 확인</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Disk 증설</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Disk 증설 후</h4>
        </figcaption>
</figure>
</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1">## 그리고 온라인 상태에서 디스크가 보이지 않은 경우는 아래와 같이 하자.</span>
</span></span><span class="line"><span class="cl">ls /sys/class/scsi_host
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> line in <span class="k">$(</span>ls /sys/class/scsi_host<span class="k">)</span>
</span></span><span class="line"><span class="cl"><span class="k">do</span>
</span></span><span class="line"><span class="cl"> <span class="nb">echo</span> <span class="s2">&#34;- - -&#34;</span> &gt; /sys/class/scsi_host/<span class="nv">$line</span>/scan
</span></span><span class="line"><span class="cl"><span class="k">done</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">ls -lat /dev/sd*
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><figcaption>
            <h4>Disk 증설 후 SCAN</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>디스크 증설 확인#1</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>디스크 증설 확인#2</h4>
        </figcaption>
</figure>
</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">pvs
</span></span><span class="line"><span class="cl">lvs
</span></span><span class="line"><span class="cl">pvcreate /dev/sdb
</span></span><span class="line"><span class="cl">vgextend ubuntu-vg /dev/sdb
</span></span><span class="line"><span class="cl">lvextend /dev/mapper/ubuntu--vg-ubuntu--lv /dev/sdb
</span></span><span class="line"><span class="cl">resize2fs -p /dev/mapper/ubuntu--vg-ubuntu--lv
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><figcaption>
            <h4>Disk 확인 및 증설#1</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Disk 확인 및 증설#2</h4>
        </figcaption>
</figure>
</p>
<h2 id="2-tanzu에-pacakge로-설치-한-harbor-사이즈-증설">2. TANZU에 Pacakge로 설치 한 Harbor 사이즈 증설</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl -n tanzu-system-registry get pvc --selector<span class="o">=</span><span class="nv">component</span><span class="o">=</span>registry --show-labels
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 아래 storage 용량을 설정한다.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">cat <span class="s">&lt;&lt; EOF &gt; harbor-registry-pvc.yaml
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: PersistentVolumeClaim
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  finalizers:
</span></span></span><span class="line"><span class="cl"><span class="s">  - kubernetes.io/pvc-protection
</span></span></span><span class="line"><span class="cl"><span class="s">  labels:
</span></span></span><span class="line"><span class="cl"><span class="s">    app: harbor
</span></span></span><span class="line"><span class="cl"><span class="s">    component: registry
</span></span></span><span class="line"><span class="cl"><span class="s">    kapp.k14s.io/app: &#34;1610567506920108209&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">    kapp.k14s.io/association: v1.034269eb21810ed9131cc41a27c729d4
</span></span></span><span class="line"><span class="cl"><span class="s">  name: harbor-registry-200gb
</span></span></span><span class="line"><span class="cl"><span class="s">  namespace: tanzu-system-registry
</span></span></span><span class="line"><span class="cl"><span class="s">spec:
</span></span></span><span class="line"><span class="cl"><span class="s">  accessModes:
</span></span></span><span class="line"><span class="cl"><span class="s">  - ReadWriteOnce
</span></span></span><span class="line"><span class="cl"><span class="s">  resources:
</span></span></span><span class="line"><span class="cl"><span class="s">    requests:
</span></span></span><span class="line"><span class="cl"><span class="s">      storage: 200Gi
</span></span></span><span class="line"><span class="cl"><span class="s">  storageClassName: default
</span></span></span><span class="line"><span class="cl"><span class="s">  volumeMode: Filesystem
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 그리고 pvc 생성 후 pod를 삭제 하기 위해 0으로 변경</span>
</span></span><span class="line"><span class="cl">kubectl -n tanzu-system-registry apply -f harbor-registry-pvc.yaml
</span></span><span class="line"><span class="cl">kubectl -n tanzu-system-registry scale deployment harbor-registry --replicas<span class="o">=</span><span class="m">0</span>
</span></span><span class="line"><span class="cl">watch -n <span class="m">5</span> kubectl get pod -n tanzu-system-registry
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1">## volumemount 및 volumes을 설정 해준다.</span>
</span></span><span class="line"><span class="cl">kubectl -n tanzu-system-registry edit deployment harbor-registry
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 아래 항목을 찾는다.</span>
</span></span><span class="line"><span class="cl">      volumeMounts:
</span></span><span class="line"><span class="cl">        - mountPath: /storage
</span></span><span class="line"><span class="cl">          name: registry-data
</span></span><span class="line"><span class="cl">        - mountPath: /etc/registry/passwd
</span></span><span class="line"><span class="cl">          name: registry-htpasswd
</span></span><span class="line"><span class="cl">          subPath: passwd
</span></span><span class="line"><span class="cl">        - mountPath: /etc/registry/config.yml
</span></span><span class="line"><span class="cl">          name: registry-config
</span></span><span class="line"><span class="cl">          subPath: config.yml
</span></span><span class="line"><span class="cl">        - mountPath: /etc/harbor/ssl/registry
</span></span><span class="line"><span class="cl">          name: registry-internal-certs
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 마지막줄에 아래 내용을 추가 한다.</span>
</span></span><span class="line"><span class="cl">        - mountPath: /storage2
</span></span><span class="line"><span class="cl">          name: registry-data2
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 아래 항목을 찾는다.</span>
</span></span><span class="line"><span class="cl">    volumes:
</span></span><span class="line"><span class="cl">      - name: registry-htpasswd
</span></span><span class="line"><span class="cl">        secret:
</span></span><span class="line"><span class="cl">          defaultMode: <span class="m">420</span>
</span></span><span class="line"><span class="cl">          items:
</span></span><span class="line"><span class="cl">          - key: REGISTRY_HTPASSWD
</span></span><span class="line"><span class="cl">            path: passwd
</span></span><span class="line"><span class="cl">          secretName: harbor-registry-htpasswd
</span></span><span class="line"><span class="cl">      - configMap:
</span></span><span class="line"><span class="cl">          defaultMode: <span class="m">420</span>
</span></span><span class="line"><span class="cl">          name: harbor-registry-ver-6
</span></span><span class="line"><span class="cl">        name: registry-config
</span></span><span class="line"><span class="cl">      - name: registry-internal-certs
</span></span><span class="line"><span class="cl">        secret:
</span></span><span class="line"><span class="cl">          defaultMode: <span class="m">420</span>
</span></span><span class="line"><span class="cl">          secretName: harbor-registry-internal-tls
</span></span><span class="line"><span class="cl"><span class="c1">## 마지막줄에 아래 내용을 추가 한다.</span>
</span></span><span class="line"><span class="cl">      - name: registry-data2
</span></span><span class="line"><span class="cl">        persistentVolumeClaim:
</span></span><span class="line"><span class="cl">          claimName: harbor-registry-200gb
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## pod를 생성 한다.</span>
</span></span><span class="line"><span class="cl">kubectl -n tanzu-system-registry scale deployments.apps harbor-registry --replicas<span class="o">=</span><span class="m">1</span>
</span></span><span class="line"><span class="cl">watch -n <span class="m">5</span> kubectl get pod -n tanzu-system-registry
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## pod에 접속 하여 storage repository를 확인 한 후 신규로 연결된 storage2에 Copy.</span>
</span></span><span class="line"><span class="cl">kubectl -n tanzu-system-registry get po --selector<span class="o">=</span><span class="nv">component</span><span class="o">=</span>registry
</span></span><span class="line"><span class="cl"><span class="nv">registry</span><span class="o">=</span><span class="k">$(</span>kubectl -n tanzu-system-registry get po --selector<span class="o">=</span><span class="nv">component</span><span class="o">=</span>registry <span class="p">|</span> awk <span class="s1">&#39;{print $1}&#39;</span> <span class="p">|</span> grep  harbor<span class="k">)</span>
</span></span><span class="line"><span class="cl">kubectl -n tanzu-system-registry <span class="nb">exec</span> -ti <span class="nv">$registry</span> -- /bin/bash
</span></span><span class="line"><span class="cl">df -h /storage
</span></span><span class="line"><span class="cl">ls storage/docker/registry/v2/repositories/library/
</span></span><span class="line"><span class="cl">cp -rfp /storage/* /storage2/
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## pod 삭제</span>
</span></span><span class="line"><span class="cl">kubectl -n tanzu-system-registry scale deployment harbor-registry --replicas<span class="o">=</span><span class="m">0</span>
</span></span><span class="line"><span class="cl">watch -n <span class="m">5</span> kubectl get pod -n tanzu-system-registry
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 위에 설정한 volumemount 및 volumes 삭제</span>
</span></span><span class="line"><span class="cl">kubectl -n tanzu-system-registry edit deployment harbor-registry
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 새로 생성 한 pvc 확인</span>
</span></span><span class="line"><span class="cl"><span class="nv">newpvc</span><span class="o">=</span><span class="k">$(</span>kubectl get pv <span class="p">|</span>grep 200gb <span class="p">|</span> awk <span class="s1">&#39;{print $1}&#39;</span><span class="k">)</span>
</span></span><span class="line"><span class="cl">kubectl patch pv <span class="nv">$newpvc</span> -p <span class="s1">&#39;{&#34;spec&#34;:{&#34;persistentVolumeReclaimPolicy&#34;:&#34;Retain&#34;}}&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">kubectl get pv <span class="p">|</span> grep harbor-registry
</span></span><span class="line"><span class="cl">kubectl -n tanzu-system-registry delete pvc --selector<span class="o">=</span><span class="nv">component</span><span class="o">=</span>registry
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## pv에서 아래 내용 삭제</span>
</span></span><span class="line"><span class="cl"><span class="nv">newpv</span><span class="o">=</span><span class="k">$(</span>kubectl get pv <span class="p">|</span> grep 200gb <span class="p">|</span> awk <span class="s1">&#39;{print $1}&#39;</span><span class="k">)</span>
</span></span><span class="line"><span class="cl">kubectl edit pv <span class="nv">$newpv</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 아래 항목을 찾은 후 claimRef 내용을 삭제 해준다.</span>
</span></span><span class="line"><span class="cl">  claimRef:
</span></span><span class="line"><span class="cl">    apiVersion: v1
</span></span><span class="line"><span class="cl">    kind: PersistentVolumeClaim
</span></span><span class="line"><span class="cl">    name: harbor-registry-100gb
</span></span><span class="line"><span class="cl">    namespace: tanzu-system-registry
</span></span><span class="line"><span class="cl">    resourceVersion: <span class="s2">&#34;5894668&#34;</span>
</span></span><span class="line"><span class="cl">    uid: 326b24df-dd6f-4679-af84-6530013aed22
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="pvc-생성">pvc 생성</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">cat <span class="s">&lt;&lt; EOF &gt; harbor-registry-200gb.yaml
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: PersistentVolumeClaim
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  finalizers:
</span></span></span><span class="line"><span class="cl"><span class="s">  - kubernetes.io/pvc-protection
</span></span></span><span class="line"><span class="cl"><span class="s">  labels:
</span></span></span><span class="line"><span class="cl"><span class="s">    app: harbor
</span></span></span><span class="line"><span class="cl"><span class="s">    component: registry
</span></span></span><span class="line"><span class="cl"><span class="s">    kapp.k14s.io/app: &#34;1610567506920108209&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">    kapp.k14s.io/association: v1.034269eb21810ed9131cc41a27c729d4
</span></span></span><span class="line"><span class="cl"><span class="s">  name: harbor-registry
</span></span></span><span class="line"><span class="cl"><span class="s">  namespace: tanzu-system-registry
</span></span></span><span class="line"><span class="cl"><span class="s">spec:
</span></span></span><span class="line"><span class="cl"><span class="s">  accessModes:
</span></span></span><span class="line"><span class="cl"><span class="s">  - ReadWriteOnce
</span></span></span><span class="line"><span class="cl"><span class="s">  resources:
</span></span></span><span class="line"><span class="cl"><span class="s">    requests:
</span></span></span><span class="line"><span class="cl"><span class="s">      storage: 200Gi
</span></span></span><span class="line"><span class="cl"><span class="s">  storageClassName: default
</span></span></span><span class="line"><span class="cl"><span class="s">  volumeName: $newpvc
</span></span></span><span class="line"><span class="cl"><span class="s">  volumeMode: Filesystem
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## pvc 생성</span>
</span></span><span class="line"><span class="cl">kubectl apply -f harbor-registry-200gb.yaml -n tanzu-system-registry
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## pod 생성</span>
</span></span><span class="line"><span class="cl">kubectl -n tanzu-system-registry scale deployment harbor-registry --replicas<span class="o">=</span><span class="m">1</span>
</span></span><span class="line"><span class="cl">watch -n <span class="m">5</span> kubectl get pod -n tanzu-system-registry
</span></span><span class="line"><span class="cl"><span class="c1">## Delete로 변경</span>
</span></span><span class="line"><span class="cl">kubectl patch pv <span class="nv">$newpvc</span> -p <span class="s1">&#39;{&#34;spec&#34;:{&#34;persistentVolumeReclaimPolicy&#34;:&#34;Delete&#34;}}&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 확인</span>
</span></span><span class="line"><span class="cl"><span class="nv">registry</span><span class="o">=</span><span class="k">$(</span>kubectl -n tanzu-system-registry get po --selector<span class="o">=</span><span class="nv">component</span><span class="o">=</span>registry <span class="p">|</span> awk <span class="s1">&#39;{print $1}&#39;</span> <span class="p">|</span> grep  harbor<span class="k">)</span>
</span></span><span class="line"><span class="cl">kubectl -n tanzu-system-registry <span class="nb">exec</span> -ti <span class="nv">$registry</span> -- /bin/bash
</span></span><span class="line"><span class="cl">df -h /storage
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><figcaption>
            <h4>증설 전</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>증설 후 확인</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Docker Image 확인</h4>
        </figcaption>
</figure>
</p>
]]></description>
</item><item>
    <title>The Documentation Tanzu Community Edition with TAP</title>
    <link>https://huntedhappy.github.io/ko/tce/</link>
    <pubDate>Tue, 06 Dec 2022 20:51:50 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://huntedhappy.github.io/ko/tce/</guid>
    <description><![CDATA[<h2 id="1-tanzu-community-edition">1. TANZU Community Edition?</h2>
<p>Tanzu Community Edition은 무료로 사용 가능한 VMware에서 제공하는 Kubernetes 플랫폼으로 손쉽게 클러스터를 구성 할 수 있는 솔루션이다. 
유료 서비스인 TKG 플랫폼의 모든 기능을 사용 할 수 있지만, 몇가지 제약적인 부분이 있을 수 있다. 가령 하나의 클러스터만 배포를 할 수 있는 단점이 있을 수 있으며 별도로 솔루션의 대한 이슈 및 설치의 대해서 지원을 받지 못한다.</p>
<p>하지만 TKG 솔루션의 대해서 사전에 테스트 환경을 구축 함으로 Kubernetes 플랫폼의 손쉬운 배포 와 VMware에서 제공하는 오픈소스 에코 시스템을 통해 확장의 대해서도 손쉽게 구현을 할 수 있을 것이다.</p>
<p>아래에 제공하는 오픈소스를 효율적으로 구성을 할 수 있다.
<figure><figcaption>
            <h4>Eco System</h4>
        </figcaption>
</figure>
</p>
<h2 id="2-tanzu-community-edition-구성">2. TANZU Community Edition 구성</h2>
<p><a href="https://docs.docker.com/desktop/install/windows-install/" target="_blank" rel="noopener noreffer"><i class="fas fa-link"></i> Docker 설치 링크</a>
<a href="https://kind.sigs.k8s.io/" target="_blank" rel="noopener noreffer"><i class="fas fa-link"></i> KIND 설치 링크</a></p>
<p>KIND는 Kubernetes 클러스터는 싱글 노드에서 구축을 할 수 있으며, 비슷한 솔루션으로는 MINIKUBE, K3S등이 있다.
구성환경은 윈도우 10, i7-4770 CPU 16GB 이며 아래는 gitops를 사용하지 않았으며, 마찬가지로 gitops로 구성하여 git에 소스를 머지 할 수도 있지만 여기서는 해당 기능의 대해서는 넣지 않았다.</p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>KIND Install<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># MAC OS</span>
</span></span><span class="line"><span class="cl"><span class="c1"># for Intel Macs</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> <span class="k">$(</span>uname -m<span class="k">)</span> <span class="o">=</span> x86_64 <span class="o">]&amp;&amp;</span> curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.17.0/kind-darwin-amd64
</span></span><span class="line"><span class="cl"><span class="c1"># for M1 / ARM Macs</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> <span class="k">$(</span>uname -m<span class="k">)</span> <span class="o">=</span> arm64 <span class="o">]</span> <span class="o">&amp;&amp;</span> curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.17.0/kind-darwin-arm64
</span></span><span class="line"><span class="cl">chmod +x ./kind
</span></span><span class="line"><span class="cl">mv ./kind /some-dir-in-your-PATH/kind
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># WINDOWS</span>
</span></span><span class="line"><span class="cl"><span class="n">curl</span><span class="p">.</span><span class="n">exe</span> <span class="n">-Lo</span> <span class="nb">kind-windows</span><span class="n">-amd64</span><span class="p">.</span><span class="n">exe</span> <span class="n">https</span><span class="err">:</span><span class="p">//</span><span class="n">kind</span><span class="p">.</span><span class="n">sigs</span><span class="p">.</span><span class="n">k8s</span><span class="p">.</span><span class="n">io</span><span class="p">/</span><span class="n">dl</span><span class="p">/</span><span class="n">v0</span><span class="p">.</span><span class="n">17</span><span class="p">.</span><span class="n">0</span><span class="p">/</span><span class="nb">kind-windows</span><span class="n">-amd64</span>
</span></span><span class="line"><span class="cl"><span class="nb">Move-Item</span> <span class="p">.\</span><span class="nb">kind-windows</span><span class="n">-amd64</span><span class="p">.</span><span class="n">exe</span> <span class="n">c:</span><span class="p">\</span><span class="nb">some-dir</span><span class="n">-in-your-PATH</span><span class="p">\</span><span class="n">kind</span><span class="p">.</span><span class="n">exe</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># Linux</span>
</span></span><span class="line"><span class="cl">curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.17.0/kind-linux-amd64
</span></span><span class="line"><span class="cl">chmod +x ./kind
</span></span><span class="line"><span class="cl">sudo mv ./kind /usr/local/bin/kind
</span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>KIND Cluster 생성<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>kind-expose-port.yaml 파일 생성 후 아래 내용 추가</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">Cluster</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">kind.x-k8s.io/v1alpha4</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">nodes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"> </span>- <span class="nt">role</span><span class="p">:</span><span class="w"> </span><span class="l">control-plane</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="nt">extraPortMappings</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span>- <span class="nt">containerPort</span><span class="p">:</span><span class="w"> </span><span class="m">31443</span><span class="w"> </span><span class="c"># expose port 31443 of the node to port 80 on the host for use later by Contour ingress (envoy)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">     </span><span class="nt">hostPort</span><span class="p">:</span><span class="w"> </span><span class="m">443</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span>- <span class="nt">containerPort</span><span class="p">:</span><span class="w"> </span><span class="m">31080</span><span class="w"> </span><span class="c"># expose port 31080 of the node to port 80 on the host for use later by Contour ingress (envoy)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">     </span><span class="nt">hostPort</span><span class="p">:</span><span class="w"> </span><span class="m">80</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># 실행</span>
</span></span><span class="line"><span class="cl"><span class="n">kind</span> <span class="n">create</span> <span class="n">cluster</span> <span class="p">-</span><span class="n">-config</span> <span class="nb">kind-expose</span><span class="n">-port</span><span class="p">.</span><span class="n">yaml</span> <span class="p">-</span><span class="n">-image</span> <span class="n">kindest</span><span class="p">/</span><span class="n">node</span><span class="err">:</span><span class="n">v1</span><span class="p">.</span><span class="n">23</span><span class="p">.</span><span class="n">12</span>
</span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<figure><figcaption>
            <h4>Kind Cluster 확인</h4>
        </figcaption>
</figure>

<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>Pivnet 다운로드 <i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">curl</span><span class="p">.</span><span class="n">exe</span> <span class="n">-Lo</span> <span class="nb">pivnet-windows</span><span class="n">-amd64</span><span class="p">-</span><span class="n">3</span><span class="p">.</span><span class="n">0</span><span class="p">.</span><span class="n">1</span><span class="p">.</span><span class="n">exe</span> <span class="n">https</span><span class="err">:</span><span class="p">//</span><span class="n">github</span><span class="p">.</span><span class="n">com</span><span class="p">/</span><span class="nb">pivotal-cf</span><span class="p">/</span><span class="nb">pivnet-cli</span><span class="p">/</span><span class="n">releases</span><span class="p">/</span><span class="n">download</span><span class="p">/</span><span class="n">v3</span><span class="p">.</span><span class="n">0</span><span class="p">.</span><span class="n">1</span><span class="p">/</span><span class="nb">pivnet-windows</span><span class="n">-amd64</span><span class="p">-</span><span class="n">3</span><span class="p">.</span><span class="n">0</span><span class="p">.</span><span class="n">1</span>
</span></span><span class="line"><span class="cl"><span class="nb">Move-Item</span> <span class="p">.\</span><span class="nb">pivnet-windows</span><span class="n">-amd64</span><span class="p">-</span><span class="n">3</span><span class="p">.</span><span class="n">0</span><span class="p">.</span><span class="n">1</span><span class="p">.</span><span class="n">exe</span> <span class="n">c:</span><span class="p">\</span><span class="n">tmc</span><span class="p">\</span><span class="n">pivnet</span><span class="p">.</span><span class="n">exe</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">pivnet</span> <span class="n">login</span> <span class="p">-</span><span class="n">-api-token</span><span class="p">=&lt;</span><span class="n">API</span> <span class="n">Token</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">## TANZU NET에서 EULA Accept 필요</span>
</span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>Tanzu CLI Install<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># tanzu application framework download</span>
</span></span><span class="line"><span class="cl">pivnet dlpf -p tanzu-application-platform -r 1.3.2 -g *framework*
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># Linux</span>
</span></span><span class="line"><span class="cl">tar xvf tanzu-framework-*-amd64-*.tar
</span></span><span class="line"><span class="cl">install cli/core/v0.25.0/tanzu-core-*_amd64 /usr/local/bin/tanzu
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">TANZU_CLI_NO_INIT</span><span class="o">=</span><span class="nb">true</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># Windows</span>
</span></span><span class="line"><span class="cl"><span class="nb">Expand-Archive</span> <span class="n">-Force</span> <span class="nb">tanzu-framework</span><span class="p">-*</span><span class="n">-amd64</span><span class="p">-*.</span><span class="n">zip</span> <span class="n">c:</span><span class="p">\</span><span class="n">tmc</span>
</span></span><span class="line"><span class="cl"><span class="nb">Copy-Item</span> <span class="n">C:</span><span class="p">\</span><span class="n">tmc</span><span class="p">\</span><span class="n">cli</span><span class="p">\</span><span class="n">core</span><span class="p">\</span><span class="n">v0</span><span class="p">.</span><span class="n">25</span><span class="p">.</span><span class="n">0</span><span class="p">/</span><span class="nb">tanzu-core</span><span class="p">-*</span><span class="n">_amd64</span><span class="p">*</span> <span class="n">c:</span><span class="p">\</span><span class="n">tmc</span><span class="p">\</span><span class="n">tanzu</span><span class="p">.</span><span class="n">exe</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Version 확인</span>
</span></span><span class="line"><span class="cl"><span class="n">tanzu</span> <span class="n">version</span>
</span></span><span class="line"><span class="cl"><span class="p">-----------------</span>
</span></span><span class="line"><span class="cl"><span class="n">version</span><span class="err">:</span> <span class="n">v0</span><span class="p">.</span><span class="n">25</span><span class="p">.</span><span class="n">0</span>
</span></span><span class="line"><span class="cl"><span class="n">buildDate</span><span class="err">:</span> <span class="n">2022</span><span class="p">-</span><span class="n">08</span><span class="p">-</span><span class="n">25</span>
</span></span><span class="line"><span class="cl"><span class="n">sha</span><span class="err">:</span> <span class="n">6288c751-dirty</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Plugin 설치</span>
</span></span><span class="line"><span class="cl"><span class="n">tanzu</span> <span class="n">plugin</span> <span class="n">install</span> <span class="p">-</span><span class="n">-local</span> <span class="n">c:</span><span class="p">\</span><span class="n">tmc</span><span class="p">\</span><span class="nb">cli </span><span class="n">all</span>
</span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>Cluster Essentials Install<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># tanzu-cluster-essentials download</span>
</span></span><span class="line"><span class="cl">pivnet dlpf -p tanzu-cluster-essentials -r 1.3.0 -g *essentials*
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">tar</span> <span class="n">xzvf</span> <span class="nb">tanzu-cluster</span><span class="n">-essentials-windows-amd64</span><span class="p">-</span><span class="n">1</span><span class="p">.</span><span class="n">3</span><span class="p">.</span><span class="n">0</span><span class="p">.</span><span class="n">tgz</span> <span class="n">-C</span> <span class="n">c:</span><span class="p">\</span><span class="n">tmc</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Env:TANZUNET_USERNAME</span><span class="p">=</span><span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Env:TANZUNET_PASSWORD</span><span class="p">=</span><span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Env:INSTALL_BUNDLE</span><span class="p">=</span><span class="s1">&#39;registry.tanzu.vmware.com/tanzu-cluster-essentials/cluster-essentials-bundle:1.3.0&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Env:INSTALL_REGISTRY_HOSTNAME</span><span class="p">=</span><span class="s1">&#39;registry.tanzu.vmware.com&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Env:INSTALL_REGISTRY_USERNAME</span><span class="p">=</span><span class="nv">$Env:TANZUNET_USERNAME</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Env:INSTALL_REGISTRY_PASSWORD</span><span class="p">=</span><span class="nv">$Env:TANZUNET_PASSWORD</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">c:</span><span class="p">\</span><span class="n">tmc</span><span class="p">\</span><span class="n">install</span><span class="p">.</span><span class="n">bat</span> <span class="n">-y</span>
</span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<p>만약 원하는 OS만 받고 싶으면 해당 하는 파일이름을 -g {설치하고자 하는 OS 선택}
<figure><figcaption>
            <h4>TKGM Downloads</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>essentials Downloads</h4>
        </figcaption>
</figure>
</p>
<p>구성된 KIND cluster에 TAP iterate를 설치하여 source를 테스트 하고 빠르게 build를 함으로 개발의 민첩성을 제공 할 수 있다.
별도의 클러스터를 구성해서 사용 할 수 있지만, 이렇게 TCE를 구성함으로 인해서 노트북에서도 생성 후 테스트를 할 수 있다.</p>
<figure><figcaption>
            <h4>iterate에 포함된 opensource</h4>
        </figcaption>
</figure>

<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>Tanzu Application Install<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl create ns tap-install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">kubectl create secret docker-registry tap-registry --docker-server<span class="o">=</span>registry.tanzu.vmware.com --docker-username<span class="o">=</span><span class="nv">$Env</span>:TANZUNET_USERNAME --docker-password<span class="o">=</span><span class="nv">$Env</span>:TANZUNET_PASSWORD -n tap-install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">tanzu package repository add tanzu-tap-repository --url registry.tanzu.vmware.com/tanzu-application-platform/tap-packages:1.3.2 -n tap-install --wait<span class="o">=</span><span class="nb">false</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># plugin 확인</span>
</span></span><span class="line"><span class="cl">tanzu package available list --namespace tap-install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># GIT 환경변수 등록</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Env</span>:GITHUB_USERNAME<span class="o">=</span>github-name
</span></span><span class="line"><span class="cl"><span class="nv">$Env</span>:GITHUB_TOKEN<span class="o">=</span>api-token
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># tap-values.yaml</span>
</span></span><span class="line"><span class="cl">shared:
</span></span><span class="line"><span class="cl">  ingress_domain: huntedhappy.kro.kr
</span></span><span class="line"><span class="cl">  image_registry:
</span></span><span class="line"><span class="cl">    project_path: ghcr.io/<span class="nv">$Env</span>:GITHUB_USERNAME
</span></span><span class="line"><span class="cl">    username: <span class="nv">$Env</span>:GITHUB_USERNAME
</span></span><span class="line"><span class="cl">    password: <span class="nv">$Env</span>:GITHUB_TOKEN
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">ceip_policy_disclosed: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">profile: iterate
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">supply_chain: basic
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">contour:
</span></span><span class="line"><span class="cl">  contour:
</span></span><span class="line"><span class="cl">    replicas: <span class="m">1</span>
</span></span><span class="line"><span class="cl">  envoy:
</span></span><span class="line"><span class="cl">    service:
</span></span><span class="line"><span class="cl">      type: NodePort
</span></span><span class="line"><span class="cl">      nodePorts:
</span></span><span class="line"><span class="cl">        http: <span class="m">31080</span>
</span></span><span class="line"><span class="cl">        https: <span class="m">31443</span>
</span></span><span class="line"><span class="cl">    hostPorts:
</span></span><span class="line"><span class="cl">      enable: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">cnrs:
</span></span><span class="line"><span class="cl">  domain_template: <span class="s2">&#34;{{.Name}}.{{.Domain}}&#34;</span>
</span></span><span class="line"><span class="cl">  provider: <span class="nb">local</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">excluded_packages:
</span></span><span class="line"><span class="cl">- policy.apps.tanzu.vmware.com
</span></span><span class="line"><span class="cl">- image-policy-webhook.signing.apps.tanzu.vmware.com
</span></span><span class="line"><span class="cl">- eventing.tanzu.vmware.com
</span></span><span class="line"><span class="cl">- sso.apps.tanzu.vmware.com
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># TAP 설치</span>
</span></span><span class="line"><span class="cl">tanzu package install tap -p tap.tanzu.vmware.com -v 1.3.2 -f tap-values.yaml -n tap-install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Namespace 생성</span>
</span></span><span class="line"><span class="cl">kubectl get app -n tap-install
</span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>Workload 실행 파일 생성<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># git-repository-credentials 생성</span>
</span></span><span class="line"><span class="cl">kubectl create secret docker-registry git-repository-credentials --docker-server ghcr.io --docker-username <span class="nv">$Env</span>:GITHUB_USERNAME --password <span class="nv">$Env</span>:GITHUB_TOKEN -n tap-install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># rbac.yaml 생성</span>
</span></span><span class="line"><span class="cl">apiVersion: v1
</span></span><span class="line"><span class="cl">kind: ServiceAccount
</span></span><span class="line"><span class="cl">metadata:
</span></span><span class="line"><span class="cl">  name: default
</span></span><span class="line"><span class="cl">secrets:
</span></span><span class="line"><span class="cl">- name: git-registry-credentials
</span></span><span class="line"><span class="cl">imagePullSecrets:
</span></span><span class="line"><span class="cl">- name: git-registry-credentials
</span></span><span class="line"><span class="cl">- name: tap-registry
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">apiVersion: rbac.authorization.k8s.io/v1
</span></span><span class="line"><span class="cl">kind: RoleBinding
</span></span><span class="line"><span class="cl">metadata:
</span></span><span class="line"><span class="cl">  name: default-permit-deliverable
</span></span><span class="line"><span class="cl">roleRef:
</span></span><span class="line"><span class="cl">  apiGroup: rbac.authorization.k8s.io
</span></span><span class="line"><span class="cl">  kind: ClusterRole
</span></span><span class="line"><span class="cl">  name: deliverable
</span></span><span class="line"><span class="cl">subjects:
</span></span><span class="line"><span class="cl">  - kind: ServiceAccount
</span></span><span class="line"><span class="cl">    name: default
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">apiVersion: rbac.authorization.k8s.io/v1
</span></span><span class="line"><span class="cl">kind: RoleBinding
</span></span><span class="line"><span class="cl">metadata:
</span></span><span class="line"><span class="cl">  name: default-permit-workload
</span></span><span class="line"><span class="cl">roleRef:
</span></span><span class="line"><span class="cl">  apiGroup: rbac.authorization.k8s.io
</span></span><span class="line"><span class="cl">  kind: ClusterRole
</span></span><span class="line"><span class="cl">  name: workload
</span></span><span class="line"><span class="cl">subjects:
</span></span><span class="line"><span class="cl">- kind: ServiceAccount
</span></span><span class="line"><span class="cl">  name: default
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># rbac 실행</span>
</span></span><span class="line"><span class="cl">kubectl apply -f rbac.yaml -n tap-install
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 새 파일 생성</span>
</span></span><span class="line"><span class="cl">tanzu-java-web-app.yaml
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 아래 내용 추가</span>
</span></span><span class="line"><span class="cl">apiVersion: carto.run/v1alpha1
</span></span><span class="line"><span class="cl">kind: Workload
</span></span><span class="line"><span class="cl">metadata:
</span></span><span class="line"><span class="cl">  labels:
</span></span><span class="line"><span class="cl">    apps.tanzu.vmware.com/workload-type: web
</span></span><span class="line"><span class="cl">spec:
</span></span><span class="line"><span class="cl">  params:
</span></span><span class="line"><span class="cl">  - name: annotations
</span></span><span class="line"><span class="cl">    value:
</span></span><span class="line"><span class="cl">      autoscaling.knative.dev/minScale: <span class="s2">&#34;1&#34;</span>
</span></span><span class="line"><span class="cl">  source:
</span></span><span class="line"><span class="cl">    git:
</span></span><span class="line"><span class="cl">      ref:
</span></span><span class="line"><span class="cl">        branch: main
</span></span><span class="line"><span class="cl">      url: https://github.com/sample-accelerators/tanzu-java-web-app
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># workload 실행</span>
</span></span><span class="line"><span class="cl">kubectl apply -f tanzu-java-web-app.yaml -n tap-install
</span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>Workload 확인<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">tanzu app workload get tanzu-java-web-app -n tap-install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">kubectl get pod, httpproxy -n tap-install
</span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<p><figure><figcaption>
            <h4>Workload 확인</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Workload 확인</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Result</h4>
        </figcaption>
</figure>
</p>
]]></description>
</item><item>
    <title>The Documentation Tanzu &amp; Keycloak</title>
    <link>https://huntedhappy.github.io/ko/tanzu-keycloak/</link>
    <pubDate>Fri, 15 Jul 2022 17:49:37 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://huntedhappy.github.io/ko/tanzu-keycloak/</guid>
    <description><![CDATA[<h2 id="1-tanzu와-keycloak-연동">1. TANZU와 KEYCLOAK 연동</h2>
<p>TANZU는 기본적으로 LDAPS 또는 OIDC와 연동이 가능합니다. 그 중에 무료 서비스인 KEYCLOAK을 활용하여 TANZU와 KEYCLOAK 연동</p>
<h2 id="2-keycloak-구성">2. KEYCLOAK 구성</h2>
<p><a href="https://www.keycloak.org/downloads" target="_blank" rel="noopener noreffer"><i class="fas fa-link"></i> KEYCLOAK DOWNLOAD LINK</a></p>
<figure><figcaption>
            <h4>keycloak download</h4>
        </figcaption>
</figure>

<p>KEYCLOAK 설치
인증서는 사설 인증서로 생성</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1">## 압축 해제</span>
</span></span><span class="line"><span class="cl">tar zxvf keycloak-18.0.2.tar.gz
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> keycloak-18.0.2
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">KEYCLOAK_ADMIN</span><span class="o">=</span>admin
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">KEYCLOAK_ADMIN_PASSWORD</span><span class="o">=</span><span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">bin/kc.sh start-dev --https-certificate-file <span class="o">{</span>인증서<span class="o">}</span> --https-certificate-key-file <span class="o">{</span>인증서 KEY<span class="o">}</span> --https-port <span class="m">8443</span> --hostname <span class="o">{</span>hostname<span class="o">}</span> <span class="p">&amp;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>reaml 생성
<figure><figcaption>
            <h4>realm 생성</h4>
        </figcaption>
</figure>
</p>
<p>필요한 Client Scopes
<figure><figcaption>
            <h4>Client Scopes</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Client Scopes</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Client Scopes</h4>
        </figcaption>
</figure>
</p>
<p>Clients 생성
<figure><figcaption>
            <h4>Clients 생성</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Clients 생성</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Clients 생성</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Clients 생성</h4>
        </figcaption>
</figure>
</p>
<figure><figcaption>
            <h4>Role</h4>
        </figcaption>
</figure>

<p>생성한 Client Scopes를 Default Client Scopes에 이동
<figure><figcaption>
            <h4>Scopes 선택</h4>
        </figcaption>
</figure>
</p>
<p><figure><figcaption>
            <h4>Groups 설정</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Groups 설정</h4>
        </figcaption>
</figure>
</p>
<p>Roles
<figure><figcaption>
            <h4>Roles 설정</h4>
        </figcaption>
</figure>
</p>
<p>Groups
<figure><figcaption>
            <h4>Groups 설정</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Groups 설정</h4>
        </figcaption>
</figure>
</p>
<p>Users
<figure><figcaption>
            <h4>Users 생성</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Users 생성</h4>
        </figcaption>
</figure>
</p>
<p>User Password 설정
<figure><figcaption>
            <h4>User Password 설정</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>User Password 설정</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Group에 할당</h4>
        </figcaption>
</figure>
</p>
<h2 id="3-tanzu-구성">3. TANZU 구성</h2>
<p>사설 인증서로 구성을 했기 때문에 당연히 worker Node에도 신뢰된 인증서로 들어가 있어야 하며, 처음 구성시 CA를 넣는 부분이 없기 때문에 배포가 완료 후 CA를 넣어야 함</p>
<p>OIDC 추출</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## management cluster 변경</span>
</span></span><span class="line"><span class="cl"><span class="nv">cluster</span><span class="o">=</span>tkgm02
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="nv">$IDENTITY_MANAGEMENT_TYPE</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">_TKG_CLUSTER_FORCE_ROLE</span><span class="o">=</span><span class="s2">&#34;management&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">FILTER_BY_ADDON_TYPE</span><span class="o">=</span><span class="s2">&#34;authentication/pinniped&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">tanzu cluster create <span class="nv">$cluster</span> --dry-run -f tkgm01.yaml &gt; <span class="nv">$cluster</span>-example-secret.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><p>위와 같이 하면 아래와 같은 파일을 확인 할 수 있다.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">apiVersion: v1
</span></span><span class="line"><span class="cl">kind: Secret
</span></span><span class="line"><span class="cl">metadata:
</span></span><span class="line"><span class="cl">  annotations:
</span></span><span class="line"><span class="cl">    tkg.tanzu.vmware.com/addon-type: authentication/pinniped
</span></span><span class="line"><span class="cl">  labels:
</span></span><span class="line"><span class="cl">    clusterctl.cluster.x-k8s.io/move: <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    tkg.tanzu.vmware.com/addon-name: pinniped
</span></span><span class="line"><span class="cl">    tkg.tanzu.vmware.com/cluster-name: tkgm02
</span></span><span class="line"><span class="cl">  name: cjenm-tkgm02-pinniped-addon
</span></span><span class="line"><span class="cl">  namespace: tkg-system
</span></span><span class="line"><span class="cl">stringData:
</span></span><span class="line"><span class="cl">  values.yaml: <span class="p">|</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#@data/values</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#@overlay/match-child-defaults missing_ok=True</span>
</span></span><span class="line"><span class="cl">    ---
</span></span><span class="line"><span class="cl">    infrastructure_provider: vsphere
</span></span><span class="line"><span class="cl">    tkg_cluster_role: management
</span></span><span class="line"><span class="cl">    custom_cluster_issuer: <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    custom_tls_secret: <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    http_proxy: <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    https_proxy: <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    no_proxy: <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    identity_management_type: oidc
</span></span><span class="line"><span class="cl">    pinniped:
</span></span><span class="line"><span class="cl">      cert_duration: 2160h
</span></span><span class="line"><span class="cl">      cert_renew_before: 360h
</span></span><span class="line"><span class="cl">      supervisor_svc_endpoint: https://0.0.0.0:31234
</span></span><span class="line"><span class="cl">      supervisor_ca_bundle_data: ca_bundle_data_of_supervisor_svc
</span></span><span class="line"><span class="cl">      supervisor_svc_external_ip: 0.0.0.0
</span></span><span class="line"><span class="cl">      supervisor_svc_external_dns: null
</span></span><span class="line"><span class="cl">      upstream_oidc_client_id: <span class="o">{</span>CLIENT ID<span class="o">}</span>
</span></span><span class="line"><span class="cl">      upstream_oidc_client_secret: <span class="o">{</span>CLIENT SECRET<span class="o">}</span>
</span></span><span class="line"><span class="cl">      upstream_oidc_issuer_url: https://<span class="o">{</span>KEYCLAOK FQDN<span class="o">}</span>:8443/realms/access
</span></span><span class="line"><span class="cl">      upstream_oidc_tls_ca_data: <span class="o">{</span>base64로 CA인증서<span class="o">}</span>
</span></span><span class="line"><span class="cl">      upstream_oidc_additional_scopes:
</span></span><span class="line"><span class="cl">      - openid
</span></span><span class="line"><span class="cl">      - profile
</span></span><span class="line"><span class="cl">      - email
</span></span><span class="line"><span class="cl">      - groups
</span></span><span class="line"><span class="cl">      - offline_access
</span></span><span class="line"><span class="cl">      upstream_oidc_claims:
</span></span><span class="line"><span class="cl">        username: email
</span></span><span class="line"><span class="cl">        groups: groups
</span></span><span class="line"><span class="cl">      supervisor:
</span></span><span class="line"><span class="cl">        service:
</span></span><span class="line"><span class="cl">          name: pinniped-supervisor
</span></span><span class="line"><span class="cl">          type: LoadBalancer
</span></span><span class="line"><span class="cl">type: tkg.tanzu.vmware.com/addon
</span></span></code></pre></td></tr></table>
</div>
</div><p>실행</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl apply -f <span class="nv">$cluster</span>-example-secret.yaml -n tkg-system
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="4">
<li>완료 후 테스트</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">tanzu mc kubeconfig get --export-file<span class="o">=</span>tanzu-cli-tkgm02
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">kubectl get pod -A --kubeconfig tanzu-cli-tkgm02
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>요청</h4>
        </figcaption>
</figure>

<p>생성한 계정으로 로그인
<figure><figcaption>
            <h4>LOGIN</h4>
        </figcaption>
</figure>
</p>
<p>TOKEN을 얻을 수 있다.
<figure><figcaption>
            <h4>TOKEN 얻기</h4>
        </figcaption>
</figure>
</p>
<p>TOKEN을 붙여 넣으면 아래와 같이 요청이 되는 것을 확인 할 수 있다.
<figure><figcaption>
            <h4>kubectl 요청</h4>
        </figcaption>
</figure>
</p>
<p>만약 권한이 없다면 아래 처럼 권한이 없다고 나온다.
<figure><figcaption>
            <h4>kubectl 요청</h4>
        </figcaption>
</figure>
</p>
]]></description>
</item><item>
    <title>The Documentation Tanzu &amp; OTKA</title>
    <link>https://huntedhappy.github.io/ko/tanzu-okta/</link>
    <pubDate>Fri, 15 Jul 2022 17:17:42 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://huntedhappy.github.io/ko/tanzu-okta/</guid>
    <description><![CDATA[<h2 id="1-tanzu와-okta-연동">1. TANZU와 OKTA 연동</h2>
<p>TANZU는 기본적으로 LDAPS 또는 OIDC와 연동이 가능합니다. 그 중에 OKTA 서비스를 활용하여 TANZU와 OKTA를 연동 하겠습니다.
OKTA는 기본적으로 30일간 무료로 사용이 가능합니다.</p>
<h2 id="2-okta-구성">2. OKTA 구성</h2>
<p>OKTA접속 후 관리자로 변경</p>
<figure><figcaption>
            <h4>관리자로 변경</h4>
        </figcaption>
</figure>

<p>Application 추가</p>
<p><figure><figcaption>
            <h4>Apps 추가</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Apps 추가</h4>
        </figcaption>
</figure>
</p>
<p>redirect URIs는 kubectl get svc를 통해 확인
<figure><figcaption>
            <h4>Apps 추가</h4>
        </figcaption>
</figure>
</p>
<figure><figcaption>
            <h4>Redirect URIs 확인</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Sign On 수정</h4>
        </figcaption>
</figure>

<p>Group을 생성은 Optional
<figure><figcaption>
            <h4>Groups 생성 및 Assignment</h4>
        </figcaption>
</figure>
</p>
<figure><figcaption>
            <h4>APP Assign</h4>
        </figcaption>
</figure>

<p><figure><figcaption>
            <h4>APP Assign</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>APP Assign</h4>
        </figcaption>
</figure>
</p>
<h2 id="3-tanzu-구성">3. TANZU 구성</h2>
<p>OIDC_IDENTITY_PROVIDER_CLIENT_SECRET를 base64로 변경 필요</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">echo</span> -n <span class="s1">&#39;{CLIENT SECRETS}&#39;</span> <span class="p">|</span> base64
</span></span></code></pre></td></tr></table>
</div>
</div><p>TANZU MGMT 에서 OIDC 부분을 찾은 후 파일 수정</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">IDENTITY_MANAGEMENT_TYPE: <span class="s2">&#34;oidc&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#! Settings for IDENTITY_MANAGEMENT_TYPE: &#34;oidc&#34;</span>
</span></span><span class="line"><span class="cl">CERT_DURATION: 2160h
</span></span><span class="line"><span class="cl">CERT_RENEW_BEFORE: 360h
</span></span><span class="line"><span class="cl">IDENTITY_MANAGEMENT_TYPE: oidc
</span></span><span class="line"><span class="cl">OIDC_IDENTITY_PROVIDER_CLIENT_ID: 0oa2i<span class="o">[</span>...<span class="o">]</span>NKst4x7
</span></span><span class="line"><span class="cl">OIDC_IDENTITY_PROVIDER_CLIENT_SECRET: &lt;encoded:LVVnMFNsZFIy<span class="o">[</span>...<span class="o">]</span><span class="nv">TMTV3WUdPZDJ2Xw</span><span class="o">==</span>&gt;
</span></span><span class="line"><span class="cl">OIDC_IDENTITY_PROVIDER_GROUPS_CLAIM: groups
</span></span><span class="line"><span class="cl">OIDC_IDENTITY_PROVIDER_ISSUER_URL: https://dev-<span class="o">[</span>...<span class="o">]</span>.okta.com
</span></span><span class="line"><span class="cl">OIDC_IDENTITY_PROVIDER_SCOPES: openid,profile,email,groups,offline_access
</span></span><span class="line"><span class="cl">OIDC_IDENTITY_PROVIDER_USERNAME_CLAIM: email
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="4-sa-생성-후-test">4. SA 생성 후 TEST</h2>
<p>SA 생성</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl create clusterrolebinding id-mgmt-test-user --clusterrole cluster-admin --user <span class="o">{</span>mail address<span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>TEST</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">tanzu mc kubeconfig get --export-file<span class="o">=</span>tanzu-cli-tkgm02
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">kubectl get pod -A --kubeconfig tanzu-cli-tkgm02
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><figcaption>
            <h4>TEST</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>TEST</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>TEST</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>TEST</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>TEST</h4>
        </figcaption>
</figure>
</p>
]]></description>
</item><item>
    <title>The Documentation TAP</title>
    <link>https://huntedhappy.github.io/ko/tanzu-application-platform/</link>
    <pubDate>Wed, 09 Mar 2022 11:09:57 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://huntedhappy.github.io/ko/tanzu-application-platform/</guid>
    <description><![CDATA[<h2 id="1-vmware-tap">1. VMware TAP?</h2>
<p>VMware Tanzu 애플리케이션 플랫폼은 개발자와 운영자가 Kubernetes 플랫폼에서 앱을 보다 쉽게 구축, 배포 및 관리할 수 있도록 도와주는 패키지된 구성 요소 집합입니다.</p>
<p>Tanzu 애플리케이션 플랫폼은 Kubernetes 기반 앱 개발의 내부 루프와 외부 루프 모두에서 워크플로를 단순화합니다.</p>
<ul>
<li>
<p>내부 루프: 내부 루프는 개발자가 앱을 코딩하고 테스트하는 로컬 개발 환경을 설명합니다. 내부 루프에서 발생하는 활동에는 코드 작성, 버전 제어 시스템에 커밋, 개발 또는 스테이징 환경에 배포, 테스트 및 추가 코드 변경이 포함됩니다.</p>
</li>
<li>
<p>외부 루프: 외부 루프는 앱을 프로덕션에 배포하고 시간이 지남에 따라 유지 관리하는 단계를 설명합니다. 예를 들어, 클라우드 네이티브 플랫폼에서 외부 루프에는 컨테이너 이미지 빌드, 컨테이너 보안 추가, 지속적 통합(CI) 및 지속적 전달(CD) 파이프라인 구성과 같은 활동이 포함됩니다.</p>
</li>
</ul>
<p>VMware Tanzu 애플리케이션 플랫폼은 보안 및 확장을 지원하는 모든 Kubernetes에서 코드를 실행할 수 있도록 사전 포장된 프로덕션 경로를 개발 팀에 제공합니다. 팀이 조직의 기본 설정에 따라 사용자 지정할 수 있도록 모듈화된 애플리케이션 인식 플랫폼입니다.</p>
<h3 id="주의-사항">주의 사항</h3>
<p>현재 버그가 있는것으로 보임 Private Harbor 구성시 사설 인증서 문제가 발생 하기 때문에 외부 Registry 활용 필요,
Github 연동시 Integration으로 설정</p>
<h3 id="사전-설치">사전 설치</h3>
<ul>
<li>DOCKER</li>
<li>GCR (Google Container Registry)</li>
<li>GitHub</li>
<li>DNS Records</li>
</ul>
<h3 id="resource-requirements">Resource requirements</h3>
<p>To deploy all Tanzu Application Platform packages, your cluster must have at least:</p>
<ul>
<li>8 CPUs for i9 (or equivalent) available to Tanzu Application Platform components</li>
<li>12 CPUs for i7 (or equivalent) available to Tanzu Application Platform components</li>
<li>8 GB of RAM across all nodes available to Tanzu Application Platform</li>
<li>12 GB of RAM is available to build and deploy applications, including Minikube. VMware recommends 16 GB of RAM for an optimal experience.</li>
<li>70 GB of disk space available per node
For the full profile, or use of Security Chain Security Tools - Store, your cluster must have a configured default StorageClass.</li>
</ul>
<h2 id="2-tap-101">2. TAP 1.0.1</h2>
<h3 id="tools-and-cli-requirements">Tools and CLI requirements</h3>
<p>Installation requires:</p>
<ul>
<li>The Kubernetes CLI, kubectl, v1.20, v1.21 or v1.22, installed and authenticated with administrator rights for your target cluster. See Install Tools in the Kubernetes documentation.</li>
</ul>
<h3 id="21-tap">2.1. TAP</h3>
<h4 id="211-tanzu-network-등록">2.1.1 Tanzu Network 등록</h4>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>Tanzu Network ID/PW<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">INSTALL_REGISTRY_USERNAME</span><span class="o">=</span>        <span class="c1">#### Tanzu Network ID</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">INSTALL_REGISTRY_PASSWORD</span><span class="o">=</span>        <span class="c1">#### Tanzu Network PW</span>
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">INSTALL_REGISTRY_HOSTNAME</span><span class="o">=</span>registry.tanzu.vmware.com
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">TAP_VERSION</span><span class="o">=</span>1.0.1
</span></span></code></pre></td></tr></table>
</div>
</div><p>namespace 생성</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl create ns tap-install
</span></span></code></pre></td></tr></table>
</div>
</div><p>tanzu registry 추가</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">tanzu secret registry add tap-registry <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --username <span class="si">${</span><span class="nv">INSTALL_REGISTRY_USERNAME</span><span class="si">}</span> --password <span class="si">${</span><span class="nv">INSTALL_REGISTRY_PASSWORD</span><span class="si">}</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --server <span class="si">${</span><span class="nv">INSTALL_REGISTRY_HOSTNAME</span><span class="si">}</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --export-to-all-namespaces --yes --namespace tap-install
</span></span></code></pre></td></tr></table>
</div>
</div><p>tanzu repository 추가</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">tanzu package repository add tanzu-tap-repository <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --url registry.tanzu.vmware.com/tanzu-application-platform/tap-packages:<span class="nv">$TAP_VERSION</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --namespace tap-install
</span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<p><figure><figcaption>
            <h4>EULA 허용</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>EULA 허용</h4>
        </figcaption>
</figure>
</p>
<h3 id="22-tanzu-tap-설치-리스트-확인">2.2. Tanzu TAP 설치 리스트 확인</h3>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>Registry / Repository 확인<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">tanzu secret registry list -n tap-install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">tanzu package repository list -n tap-install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">tanzu package repository get tanzu-tap-repository --namespace tap-install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">tanzu package available list --namespace tap-install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">tanzu package available list tap.tanzu.vmware.com --namespace tap-install
</span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<p><figure><figcaption>
            <h4>Registry 리스트 확인</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Repository 리스트 확인</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Package 리스트 확인</h4>
        </figcaption>
</figure>
</p>
<h3 id="23-tanzu-tap-설치">2.3. Tanzu TAP 설치</h3>
<p>Private Harbor의 경우 사설 인증서가 문제가 있으므로 외부에서 제공하는 Registry 사용하는 필요.</p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>TAP 설치<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>GCR에서 키값을 json으로 다운로드 받은 후 service_account_key[변수] 저장</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">tanzu secret registry add registry-credentials --server gcr.io --username _json_key --password <span class="s2">&#34;</span><span class="k">$(</span>cat main-xxxx-xxx-xxxx.json<span class="k">)</span><span class="s2">&#34;</span> --namespace tap-install
</span></span><span class="line"><span class="cl"><span class="nv">service_account_key</span><span class="o">=</span><span class="s2">&#34;</span><span class="k">$(</span>cat main-xxxx-xxx-xxxx.json<span class="k">)</span><span class="s2">&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>실행 파일 설정</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">cat <span class="s">&lt;&lt;EOF &gt; gcr-tap-values.yaml
</span></span></span><span class="line"><span class="cl"><span class="s">profile: full
</span></span></span><span class="line"><span class="cl"><span class="s">ceip_policy_disclosed: true # The value must be true for installation to succeed
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">buildservice:
</span></span></span><span class="line"><span class="cl"><span class="s">  kp_default_repository: &#34;gcr.io/{Registry ID}/build-service&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  kp_default_repository_username: _json_key
</span></span></span><span class="line"><span class="cl"><span class="s">  kp_default_repository_password: &#39;$(echo $service_account_key)&#39;
</span></span></span><span class="line"><span class="cl"><span class="s">  tanzunet_username: &#34;&#34;                             ## Tanzu Network ID
</span></span></span><span class="line"><span class="cl"><span class="s">  tanzunet_password: &#34;&#34;                             ## Tanzu Network Password
</span></span></span><span class="line"><span class="cl"><span class="s">  descriptor_name: &#34;tap-1.0.0-full&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  enable_automatic_dependency_updates: true
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">supply_chain: basic
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">cnrs:
</span></span></span><span class="line"><span class="cl"><span class="s">  domain_name: tkg.io
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">accelerator:
</span></span></span><span class="line"><span class="cl"><span class="s">  server:
</span></span></span><span class="line"><span class="cl"><span class="s">    service_type: &#34;ClusterIP&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">ootb_supply_chain_basic:
</span></span></span><span class="line"><span class="cl"><span class="s">  registry:
</span></span></span><span class="line"><span class="cl"><span class="s">    server: &#34;gcr.io&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">    repository: &#34;{Registry ID}/supply_chain&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  gitops:
</span></span></span><span class="line"><span class="cl"><span class="s">    #repository_prefix: git@github.com:vmware-tanzu/
</span></span></span><span class="line"><span class="cl"><span class="s">    #branch: main
</span></span></span><span class="line"><span class="cl"><span class="s">    #user_name: supplychain
</span></span></span><span class="line"><span class="cl"><span class="s">    #user_email: supplychain
</span></span></span><span class="line"><span class="cl"><span class="s">    #commit_message: supplychain@cluster.local
</span></span></span><span class="line"><span class="cl"><span class="s">    #ssh_secret: git-ssh  
</span></span></span><span class="line"><span class="cl"><span class="s">    ssh_secret: &#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  cluster_builder: default
</span></span></span><span class="line"><span class="cl"><span class="s">  service_account: default
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">learningcenter:
</span></span></span><span class="line"><span class="cl"><span class="s">  ingressDomain: &#34;tkg.io&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  ingressClass: contour
</span></span></span><span class="line"><span class="cl"><span class="s">  ingressSecret:
</span></span></span><span class="line"><span class="cl"><span class="s">    secretName: workshops.example.com-tls
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">contour:
</span></span></span><span class="line"><span class="cl"><span class="s">  envoy:
</span></span></span><span class="line"><span class="cl"><span class="s">    service:
</span></span></span><span class="line"><span class="cl"><span class="s">      type: LoadBalancer
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">tap_gui:
</span></span></span><span class="line"><span class="cl"><span class="s">  service_type: ClusterIP
</span></span></span><span class="line"><span class="cl"><span class="s">  ingressEnabled: &#34;true&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  ingressDomain: &#34;tkg.io&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  app_config:
</span></span></span><span class="line"><span class="cl"><span class="s">    app:
</span></span></span><span class="line"><span class="cl"><span class="s">      baseUrl: http://tap-gui.tkg.io
</span></span></span><span class="line"><span class="cl"><span class="s">      support:
</span></span></span><span class="line"><span class="cl"><span class="s">        url: https://tanzu.vmware.com/support
</span></span></span><span class="line"><span class="cl"><span class="s">        items:
</span></span></span><span class="line"><span class="cl"><span class="s">          - title: Contact Support
</span></span></span><span class="line"><span class="cl"><span class="s">            icon: email
</span></span></span><span class="line"><span class="cl"><span class="s">            links:
</span></span></span><span class="line"><span class="cl"><span class="s">              - url: https://tanzu.vmware.com/support
</span></span></span><span class="line"><span class="cl"><span class="s">                title: Tanzu Support Page
</span></span></span><span class="line"><span class="cl"><span class="s">          - title: Documentation
</span></span></span><span class="line"><span class="cl"><span class="s">            icon: docs
</span></span></span><span class="line"><span class="cl"><span class="s">            links:
</span></span></span><span class="line"><span class="cl"><span class="s">              - url: https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/index.html
</span></span></span><span class="line"><span class="cl"><span class="s">                title: Tanzu Application Platform Documentation
</span></span></span><span class="line"><span class="cl"><span class="s">    integrations:
</span></span></span><span class="line"><span class="cl"><span class="s">      github: # Other integrations available see NOTE below
</span></span></span><span class="line"><span class="cl"><span class="s">        - host: github.com
</span></span></span><span class="line"><span class="cl"><span class="s">          token: &#34;{GIT TOKEN}&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">    catalog:
</span></span></span><span class="line"><span class="cl"><span class="s">      locations:
</span></span></span><span class="line"><span class="cl"><span class="s">        - type: url
</span></span></span><span class="line"><span class="cl"><span class="s">          target: https://github.com/huntedhappy/tanzu-java-web-app/catalog-info.yaml
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">    backend:
</span></span></span><span class="line"><span class="cl"><span class="s">      baseUrl: http://tap-gui.tkg.io
</span></span></span><span class="line"><span class="cl"><span class="s">      cors:
</span></span></span><span class="line"><span class="cl"><span class="s">        origin: http://tap-gui.tkg.io
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">#    ##Existing values file above (OIDC)
</span></span></span><span class="line"><span class="cl"><span class="s">#    auth:
</span></span></span><span class="line"><span class="cl"><span class="s">#      allowGuestAccess: true
</span></span></span><span class="line"><span class="cl"><span class="s">#      environment: development
</span></span></span><span class="line"><span class="cl"><span class="s">#      loginPage:
</span></span></span><span class="line"><span class="cl"><span class="s">#        github:
</span></span></span><span class="line"><span class="cl"><span class="s">#          title: Github Login
</span></span></span><span class="line"><span class="cl"><span class="s">#          message: Enter with your GitHub account
</span></span></span><span class="line"><span class="cl"><span class="s">#      providers:
</span></span></span><span class="line"><span class="cl"><span class="s">#        github:
</span></span></span><span class="line"><span class="cl"><span class="s">#          development:
</span></span></span><span class="line"><span class="cl"><span class="s">#            clientId: 
</span></span></span><span class="line"><span class="cl"><span class="s">#            clientSecret: 
</span></span></span><span class="line"><span class="cl"><span class="s">#            ## uncomment if using GitHub Enterprise
</span></span></span><span class="line"><span class="cl"><span class="s">#            # enterpriseInstanceUrl:
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">metadata_store:
</span></span></span><span class="line"><span class="cl"><span class="s">  app_service_type: LoadBalancer # (optional) Defaults to LoadBalancer. Change to NodePort for distributions that don&#39;t support LoadBalancer
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">grype:
</span></span></span><span class="line"><span class="cl"><span class="s">  namespace: &#34;tap-install&#34; # (optional) Defaults to default namespace.
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>TAP 설치</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">tanzu package install tap -p tap.tanzu.vmware.com -v <span class="nv">$TAP_VERSION</span> --values-file gcr-tap-values.yml -n tap-install
</span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<figure><figcaption>
            <h4>TAP 설치 완료</h4>
        </figcaption>
</figure>

<h3 id="24-tanzu-tap-rbac-설정">2.4. Tanzu TAP RBAC 설정</h3>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>RBAC 설정<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nv">dockerconfigjson</span><span class="o">=</span><span class="s2">&#34;</span><span class="k">$(</span>kubectl get secret tbs-builder-secret-gen-placeholder-secret -n tap-install -o <span class="nv">jsonpath</span><span class="o">={</span>.data.<span class="se">\\</span>.dockerconfigjson<span class="o">}</span><span class="k">)</span><span class="s2">&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">cat <span class="s">&lt;&lt;EOF | tee rbac.yaml
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: Secret
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: tap-registry
</span></span></span><span class="line"><span class="cl"><span class="s">  annotations:
</span></span></span><span class="line"><span class="cl"><span class="s">    secretgen.carvel.dev/image-pull-secret: &#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">type: kubernetes.io/dockerconfigjson
</span></span></span><span class="line"><span class="cl"><span class="s">data:
</span></span></span><span class="line"><span class="cl"><span class="s">  .dockerconfigjson: $(echo $dockerconfigjson)
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: ServiceAccount
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: default
</span></span></span><span class="line"><span class="cl"><span class="s">secrets:
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: registry-credentials
</span></span></span><span class="line"><span class="cl"><span class="s">imagePullSecrets:
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: registry-credentials
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: tap-registry
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: rbac.authorization.k8s.io/v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: Role
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: default
</span></span></span><span class="line"><span class="cl"><span class="s">rules:
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [source.toolkit.fluxcd.io]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [gitrepositories]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;*&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [source.apps.tanzu.vmware.com]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [imagerepositories]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;*&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [carto.run]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [deliverables, runnables]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;*&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [kpack.io]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [images]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;*&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [conventions.apps.tanzu.vmware.com]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [podintents]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;*&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [&#34;&#34;]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [&#39;configmaps&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;*&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [&#34;&#34;]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [&#39;pods&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;list&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [tekton.dev]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [taskruns, pipelineruns]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;*&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [tekton.dev]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [pipelines]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;list&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [kappctrl.k14s.io]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [apps]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;*&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [serving.knative.dev]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [&#39;services&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;*&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [servicebinding.io]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [&#39;servicebindings&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;*&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [services.apps.tanzu.vmware.com]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [&#39;resourceclaims&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;*&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [scanning.apps.tanzu.vmware.com]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [&#39;imagescans&#39;, &#39;sourcescans&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;*&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: rbac.authorization.k8s.io/v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: RoleBinding
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: default
</span></span></span><span class="line"><span class="cl"><span class="s">roleRef:
</span></span></span><span class="line"><span class="cl"><span class="s">  apiGroup: rbac.authorization.k8s.io
</span></span></span><span class="line"><span class="cl"><span class="s">  kind: Role
</span></span></span><span class="line"><span class="cl"><span class="s">  name: default
</span></span></span><span class="line"><span class="cl"><span class="s">subjects:
</span></span></span><span class="line"><span class="cl"><span class="s">  - kind: ServiceAccount
</span></span></span><span class="line"><span class="cl"><span class="s">    name: default
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<h3 id="25-workload-실행">2.5. workload 실행</h3>
<p>INGRESS IP 확인</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl get svc -n tap-install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">kubectl get httpproxy -A
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><figcaption>
            <h4>ingress 및 DNS 확인</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>gui 접속 후 Tanzu Java Web App 실행</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>gui 접속 후 Tanzu Java Web App 실행</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>gui 접속 후 Tanzu Java Web App 실행</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>gui 접속 후 Tanzu Java Web App 다운로드</h4>
        </figcaption>
</figure>
</p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>GIT PUSH<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>미리 GIT에 프로젝트 생성 후 다운로드 받은 ZIP파일 PUSH</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">unzip tanzu-java-web-app.zip
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">git init
</span></span><span class="line"><span class="cl">git remote add origin git@github.com:huntedhappy/tanzu-java-web-app
</span></span><span class="line"><span class="cl">git add .
</span></span><span class="line"><span class="cl">git commit -m <span class="s1">&#39;first&#39;</span>
</span></span><span class="line"><span class="cl">git push origin main
</span></span></code></pre></td></tr></table>
</div>
</div><p>apps workload 실행</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">tanzu apps workload create tanzu-java-web-app <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span> --git-repo https://github.com/huntedhappy/tanzu-java-web-app <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span> --git-branch main <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span> --type web <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span> --label apps.tanzu.vmware.com/has-tests<span class="o">=</span><span class="nb">true</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span> --yes <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span> -n tap-install
</span></span></code></pre></td></tr></table>
</div>
</div><p>배포 상태 확인</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">tanzu apps cluster-supply-chain list
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">tanzu apps workload tail tanzu-java-web-app --since 10m --timestamp -n tap-install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">kubectl get workload,gitrepository,pipelinerun,images.kpack,podintent,app,services.serving -n tap-install
</span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<h2 id="3-tap-110">3. TAP 1.1.0</h2>
<p>Repository를 설정한다. 여기서는 GCR을 사용하기 때문에 GCR의 정보를 입력</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">INSTALL_REGISTRY_HOSTNAME</span><span class="o">=</span>gcr.io
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">TAP_VERSION</span><span class="o">=</span>1.1.0
</span></span></code></pre></td></tr></table>
</div>
</div><p>TANZU NET 및 GCR docker login 후 GCR에 이미지들을 다운로드</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">docker login registry.tanzu.vmware.com
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">docker login -u _json_key --password-stdin https://gcr.io &lt; <span class="o">{</span>gcr key<span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">imgpkg copy -b registry.tanzu.vmware.com/tanzu-application-platform/tap-packages:<span class="si">${</span><span class="nv">TAP_VERSION</span><span class="si">}</span> --to-repo <span class="si">${</span><span class="nv">INSTALL_REGISTRY_HOSTNAME</span><span class="si">}</span>/<span class="o">{</span>gcr project<span class="o">}</span>/tap-packages
</span></span></code></pre></td></tr></table>
</div>
</div><p>namespace 및 secret 생성 후 tanzu package Repository 생성</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">tanzu secret registry add tap-registry --server gcr.io --username _json_key --password <span class="s2">&#34;</span><span class="k">$(</span>cat <span class="o">{</span>gcr key<span class="o">}</span><span class="k">)</span><span class="s2">&#34;</span> --export-to-all-namespaces --yes -n tap-install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">tanzu secret registry add registry-credentials --server gcr.io --username _json_key --password <span class="s2">&#34;</span><span class="k">$(</span>cat <span class="o">{</span>gcr key<span class="o">}</span><span class="k">)</span><span class="s2">&#34;</span> --export-to-all-namespaces --yes -n tap-install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">tanzu package repository add tanzu-tap-repository <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --url <span class="si">${</span><span class="nv">INSTALL_REGISTRY_HOSTNAME</span><span class="si">}</span>/main-tokenizer-343509/tap-packages:<span class="nv">$TAP_VERSION</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --namespace tap-install 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Repository가 생성이 되었으면 설치 가능한 packages를 확인</span>
</span></span><span class="line"><span class="cl">tanzu package available list tap.tanzu.vmware.com --namespace tap-install
</span></span></code></pre></td></tr></table>
</div>
</div><p>권한 설정</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl annotate secret tap-registry -n tap-install secretgen.carvel.dev/image-pull-secret<span class="o">=</span><span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">kubectl patch sa default -n tap-install --type <span class="s1">&#39;json&#39;</span> -p <span class="s1">&#39;[{&#34;op&#34;:&#34;add&#34;,&#34;path&#34;:&#34;/secrets&#34;,&#34;value&#34;:[&#34;name&#34;:&#34;registry-credentials&#34;,&#34;name&#34;:&#34;tap-registry&#34;]}]&#39;</span>
</span></span><span class="line"><span class="cl">kubectl patch sa default -n tap-install --type <span class="s1">&#39;json&#39;</span> -p <span class="s1">&#39;[{&#34;op&#34;:&#34;add&#34;,&#34;path&#34;:&#34;/imagePullSecrets&#34;,&#34;value&#34;:[&#34;name&#34;:&#34;registry-credentials&#34;,&#34;name&#34;:&#34;tap-registry&#34;]}]&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">cat <span class="s">&lt;&lt;EOF | kubectl -n tap-install apply -f -
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: rbac.authorization.k8s.io/v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: RoleBinding
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: default-permit-deliverable
</span></span></span><span class="line"><span class="cl"><span class="s">roleRef:
</span></span></span><span class="line"><span class="cl"><span class="s">  apiGroup: rbac.authorization.k8s.io
</span></span></span><span class="line"><span class="cl"><span class="s">  kind: ClusterRole
</span></span></span><span class="line"><span class="cl"><span class="s">  name: deliverable
</span></span></span><span class="line"><span class="cl"><span class="s">subjects:
</span></span></span><span class="line"><span class="cl"><span class="s">  - kind: ServiceAccount
</span></span></span><span class="line"><span class="cl"><span class="s">    name: default
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: rbac.authorization.k8s.io/v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: RoleBinding
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: default-permit-workload
</span></span></span><span class="line"><span class="cl"><span class="s">roleRef:
</span></span></span><span class="line"><span class="cl"><span class="s">  apiGroup: rbac.authorization.k8s.io
</span></span></span><span class="line"><span class="cl"><span class="s">  kind: ClusterRole
</span></span></span><span class="line"><span class="cl"><span class="s">  name: workload
</span></span></span><span class="line"><span class="cl"><span class="s">subjects:
</span></span></span><span class="line"><span class="cl"><span class="s">  - kind: ServiceAccount
</span></span></span><span class="line"><span class="cl"><span class="s">    name: default
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: rbac.authorization.k8s.io/v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: RoleBinding
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: dev-permit-app-viewer
</span></span></span><span class="line"><span class="cl"><span class="s">roleRef:
</span></span></span><span class="line"><span class="cl"><span class="s">  apiGroup: rbac.authorization.k8s.io
</span></span></span><span class="line"><span class="cl"><span class="s">  kind: ClusterRole
</span></span></span><span class="line"><span class="cl"><span class="s">  name: app-viewer
</span></span></span><span class="line"><span class="cl"><span class="s">subjects:
</span></span></span><span class="line"><span class="cl"><span class="s">  - kind: Group
</span></span></span><span class="line"><span class="cl"><span class="s">    name: &#34;namespace-developers&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">    apiGroup: rbac.authorization.k8s.io
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: rbac.authorization.k8s.io/v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: ClusterRoleBinding
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: namespace-dev-permit-app-viewer
</span></span></span><span class="line"><span class="cl"><span class="s">roleRef:
</span></span></span><span class="line"><span class="cl"><span class="s">  apiGroup: rbac.authorization.k8s.io
</span></span></span><span class="line"><span class="cl"><span class="s">  kind: ClusterRole
</span></span></span><span class="line"><span class="cl"><span class="s">  name: app-viewer-cluster-access
</span></span></span><span class="line"><span class="cl"><span class="s">subjects:
</span></span></span><span class="line"><span class="cl"><span class="s">  - kind: Group
</span></span></span><span class="line"><span class="cl"><span class="s">    name: &#34;namespace-developers&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">    apiGroup: rbac.authorization.k8s.io
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>TAP 1.1.0 설치</p>
<p>GCR에서 키값을 json으로 다운로드 받은 후 service_account_key[변수] 저장</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">tanzu secret registry add registry-credentials --server gcr.io --username _json_key --password <span class="s2">&#34;</span><span class="k">$(</span>cat main-xxxx-xxx-xxxx.json<span class="k">)</span><span class="s2">&#34;</span> --namespace tap-install
</span></span><span class="line"><span class="cl"><span class="nv">service_account_key</span><span class="o">=</span><span class="s2">&#34;</span><span class="k">$(</span>cat main-xxxx-xxx-xxxx.json<span class="k">)</span><span class="s2">&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>실행 파일 설정</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">cat <span class="s">&lt;&lt;EOF &gt; gcr-tap-values.yaml
</span></span></span><span class="line"><span class="cl"><span class="s">profile: full
</span></span></span><span class="line"><span class="cl"><span class="s">ceip_policy_disclosed: true # The value must be true for installation to succeed
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">buildservice:
</span></span></span><span class="line"><span class="cl"><span class="s">  kp_default_repository: &#34;gcr.io/{Registry ID}/build-service&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  kp_default_repository_username: _json_key
</span></span></span><span class="line"><span class="cl"><span class="s">  kp_default_repository_password: &#39;$(echo $service_account_key)&#39;
</span></span></span><span class="line"><span class="cl"><span class="s">  tanzunet_username: &#34;&#34;                             ## Tanzu Network ID
</span></span></span><span class="line"><span class="cl"><span class="s">  tanzunet_password: &#34;&#34;                             ## Tanzu Network Password
</span></span></span><span class="line"><span class="cl"><span class="s">  descriptor_name: &#34;full&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  enable_automatic_dependency_updates: true
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">supply_chain: basic
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">cnrs:
</span></span></span><span class="line"><span class="cl"><span class="s">  domain_name: tkg.io
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">accelerator:
</span></span></span><span class="line"><span class="cl"><span class="s">  server:
</span></span></span><span class="line"><span class="cl"><span class="s">    service_type: &#34;ClusterIP&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">ootb_supply_chain_basic:
</span></span></span><span class="line"><span class="cl"><span class="s">  registry:
</span></span></span><span class="line"><span class="cl"><span class="s">    server: &#34;gcr.io&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">    repository: &#34;{Registry ID}/supply_chain&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  gitops:
</span></span></span><span class="line"><span class="cl"><span class="s">    #repository_prefix: git@github.com:vmware-tanzu/
</span></span></span><span class="line"><span class="cl"><span class="s">    #branch: main
</span></span></span><span class="line"><span class="cl"><span class="s">    #user_name: supplychain
</span></span></span><span class="line"><span class="cl"><span class="s">    #user_email: supplychain
</span></span></span><span class="line"><span class="cl"><span class="s">    #commit_message: supplychain@cluster.local
</span></span></span><span class="line"><span class="cl"><span class="s">    #ssh_secret: git-ssh  
</span></span></span><span class="line"><span class="cl"><span class="s">    ssh_secret: &#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  cluster_builder: default
</span></span></span><span class="line"><span class="cl"><span class="s">  service_account: default
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">learningcenter:
</span></span></span><span class="line"><span class="cl"><span class="s">  ingressDomain: &#34;tkg.io&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  ingressClass: contour
</span></span></span><span class="line"><span class="cl"><span class="s">  ingressSecret:
</span></span></span><span class="line"><span class="cl"><span class="s">    secretName: workshops.example.com-tls
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">contour:
</span></span></span><span class="line"><span class="cl"><span class="s">  envoy:
</span></span></span><span class="line"><span class="cl"><span class="s">    service:
</span></span></span><span class="line"><span class="cl"><span class="s">      type: LoadBalancer
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">tap_gui:
</span></span></span><span class="line"><span class="cl"><span class="s">  service_type: ClusterIP
</span></span></span><span class="line"><span class="cl"><span class="s">  ingressEnabled: &#34;true&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  ingressDomain: &#34;tkg.io&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  app_config:
</span></span></span><span class="line"><span class="cl"><span class="s">    app:
</span></span></span><span class="line"><span class="cl"><span class="s">      baseUrl: http://tap-gui.tkg.io
</span></span></span><span class="line"><span class="cl"><span class="s">      support:
</span></span></span><span class="line"><span class="cl"><span class="s">        url: https://tanzu.vmware.com/support
</span></span></span><span class="line"><span class="cl"><span class="s">        items:
</span></span></span><span class="line"><span class="cl"><span class="s">          - title: Contact Support
</span></span></span><span class="line"><span class="cl"><span class="s">            icon: email
</span></span></span><span class="line"><span class="cl"><span class="s">            links:
</span></span></span><span class="line"><span class="cl"><span class="s">              - url: https://tanzu.vmware.com/support
</span></span></span><span class="line"><span class="cl"><span class="s">                title: Tanzu Support Page
</span></span></span><span class="line"><span class="cl"><span class="s">          - title: Documentation
</span></span></span><span class="line"><span class="cl"><span class="s">            icon: docs
</span></span></span><span class="line"><span class="cl"><span class="s">            links:
</span></span></span><span class="line"><span class="cl"><span class="s">              - url: https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/index.html
</span></span></span><span class="line"><span class="cl"><span class="s">                title: Tanzu Application Platform Documentation
</span></span></span><span class="line"><span class="cl"><span class="s">    integrations:
</span></span></span><span class="line"><span class="cl"><span class="s">      github: # Other integrations available see NOTE below
</span></span></span><span class="line"><span class="cl"><span class="s">        - host: github.com
</span></span></span><span class="line"><span class="cl"><span class="s">          token: &#34;{GIT TOKEN}&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">    catalog:
</span></span></span><span class="line"><span class="cl"><span class="s">      locations:
</span></span></span><span class="line"><span class="cl"><span class="s">        - type: url
</span></span></span><span class="line"><span class="cl"><span class="s">          target: https://github.com/huntedhappy/tanzu-java-web-app/catalog-info.yaml
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">    backend:
</span></span></span><span class="line"><span class="cl"><span class="s">      baseUrl: http://tap-gui.tkg.io
</span></span></span><span class="line"><span class="cl"><span class="s">      cors:
</span></span></span><span class="line"><span class="cl"><span class="s">        origin: http://tap-gui.tkg.io
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">#    ##Existing values file above (OIDC)
</span></span></span><span class="line"><span class="cl"><span class="s">#    auth:
</span></span></span><span class="line"><span class="cl"><span class="s">#      allowGuestAccess: true
</span></span></span><span class="line"><span class="cl"><span class="s">#      environment: development
</span></span></span><span class="line"><span class="cl"><span class="s">#      loginPage:
</span></span></span><span class="line"><span class="cl"><span class="s">#        github:
</span></span></span><span class="line"><span class="cl"><span class="s">#          title: Github Login
</span></span></span><span class="line"><span class="cl"><span class="s">#          message: Enter with your GitHub account
</span></span></span><span class="line"><span class="cl"><span class="s">#      providers:
</span></span></span><span class="line"><span class="cl"><span class="s">#        github:
</span></span></span><span class="line"><span class="cl"><span class="s">#          development:
</span></span></span><span class="line"><span class="cl"><span class="s">#            clientId: 
</span></span></span><span class="line"><span class="cl"><span class="s">#            clientSecret: 
</span></span></span><span class="line"><span class="cl"><span class="s">#            ## uncomment if using GitHub Enterprise
</span></span></span><span class="line"><span class="cl"><span class="s">#            # enterpriseInstanceUrl:
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">metadata_store:
</span></span></span><span class="line"><span class="cl"><span class="s">  app_service_type: LoadBalancer # (optional) Defaults to LoadBalancer. Change to NodePort for distributions that don&#39;t support LoadBalancer
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">grype:
</span></span></span><span class="line"><span class="cl"><span class="s">  namespace: &#34;tap-install&#34; # (optional) Defaults to default namespace.
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>TANZU 설치</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">tanzu package install tap -p tap.tanzu.vmware.com -v <span class="nv">$TAP_VERSION</span> --values-file gcr-tap-values.yaml -n tap-install
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="31-multicluster">3.1. MultiCluster</h3>
<figure><figcaption>
            <h4>MultiCluster</h4>
        </figcaption>
</figure>

<p>3개의 클러스터를 생성한다. 여기서는 아래와 같이 구성 하였다.</p>
<ul>
<li>
<p>tkgm01-tkc-dev02 = build</p>
</li>
<li>
<p>tkgm02-tkc-dev03 = run</p>
</li>
<li>
<p>tkgm03-tkc-dev04 = view</p>
</li>
</ul>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>이미지를 Repository에 저장한다.<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">INSTALL_REGISTRY_HOSTNAME</span><span class="o">=</span>gcr.io
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">TAP_VERSION</span><span class="o">=</span>1.1.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Tanzu Network에 로그인을 한다.</span>
</span></span><span class="line"><span class="cl">docker login registry.tanzu.vmware.com -u <span class="o">{</span>ID<span class="o">}</span> --password-stdin &lt; ./password.txt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## GCR에 로그인을 한다.</span>
</span></span><span class="line"><span class="cl">docker login -u _json_key --password-stdin https://gcr.io &lt; <span class="o">{</span>togken<span class="o">}}</span>.json
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 이미지를 GCR에 복사 한다.</span>
</span></span><span class="line"><span class="cl">imgpkg copy -b registry.tanzu.vmware.com/tanzu-application-platform/tap-packages:<span class="si">${</span><span class="nv">TAP_VERSION</span><span class="si">}</span> --to-repo <span class="si">${</span><span class="nv">INSTALL_REGISTRY_HOSTNAME</span><span class="si">}</span>/main-tokenizer-343509/tap-packages
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>모든 이미지가 GCR에 저장이 완료 되면 Repository를 각각의 클러스터에 등록 해준다.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1">## Cluster 변경</span>
</span></span><span class="line"><span class="cl">kubectl use-context <span class="o">{</span>cluster context<span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">## NameSpace 생성</span>
</span></span><span class="line"><span class="cl">kubectl create ns tap-install
</span></span><span class="line"><span class="cl"><span class="c1">## GCR 접속 Secret 생성</span>
</span></span><span class="line"><span class="cl">tanzu secret registry add tap-registry --server gcr.io --username _json_key --password <span class="s2">&#34;</span><span class="k">$(</span>cat <span class="o">{</span>gcr-key<span class="o">}</span>.json<span class="k">)</span><span class="s2">&#34;</span>  --export-to-all-namespaces --yes -n tap-install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">tanzu secret registry add registry-credentials --server gcr.io --username _json_key --password <span class="s2">&#34;</span><span class="k">$(</span>cat <span class="o">{</span>gcr-key<span class="o">}</span>.json<span class="k">)</span><span class="s2">&#34;</span> --export-to-all-namespaces --yes -n tap-install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Tanzu Package Repository 추가</span>
</span></span><span class="line"><span class="cl">tanzu package repository add tanzu-tap-repository <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --url <span class="si">${</span><span class="nv">INSTALL_REGISTRY_HOSTNAME</span><span class="si">}</span>/main-tokenizer-343509/tap-packages:<span class="nv">$TAP_VERSION</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --namespace tap-install 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Tanzu Package Repository 확인</span>
</span></span><span class="line"><span class="cl">tanzu package repository list -n tap-install
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>각각의 클러스터의 맞는 tap을 설치 해준다.</li>
<li>build-tap-values.yaml</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">cat <span class="s">&lt;&lt; EOF | tee build-tap-values.yaml
</span></span></span><span class="line"><span class="cl"><span class="s">profile: build
</span></span></span><span class="line"><span class="cl"><span class="s">ceip_policy_disclosed: true
</span></span></span><span class="line"><span class="cl"><span class="s">buildservice:
</span></span></span><span class="line"><span class="cl"><span class="s">  kp_default_repository: &#34;gcr.io/{gcr project}/tap-packages&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  kp_default_repository_username: _json_key
</span></span></span><span class="line"><span class="cl"><span class="s">  kp_default_repository_password: {gcr key}
</span></span></span><span class="line"><span class="cl"><span class="s">  tanzunet_username: &#34;&#34;                             ## Tanzu Network ID
</span></span></span><span class="line"><span class="cl"><span class="s">  tanzunet_password: &#34;&#34;                                     ## Tanzu Network Password
</span></span></span><span class="line"><span class="cl"><span class="s">  descriptor_name: &#34;full&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  enable_automatic_dependency_updates: true
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">supply_chain: basic
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">ootb_supply_chain_basic:
</span></span></span><span class="line"><span class="cl"><span class="s">  registry:
</span></span></span><span class="line"><span class="cl"><span class="s">    server: &#34;gcr.io&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">    repository: &#34;{gcr project}/supply_chain&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  gitops:
</span></span></span><span class="line"><span class="cl"><span class="s">    ssh_secret: &#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  cluster_builder: default
</span></span></span><span class="line"><span class="cl"><span class="s">  service_account: default
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">grype:
</span></span></span><span class="line"><span class="cl"><span class="s">  namespace: &#34;tap-install&#34; # (optional) Defaults to default namespace.
</span></span></span><span class="line"><span class="cl"><span class="s">  targetImagePullSecret: tap-registry
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>run-tap-values.yaml</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">cat <span class="s">&lt;&lt; EOF | tee run-tap-values.yaml
</span></span></span><span class="line"><span class="cl"><span class="s">profile: run
</span></span></span><span class="line"><span class="cl"><span class="s">ceip_policy_disclosed: true # Installation fails if this is not set to true. Not a string.
</span></span></span><span class="line"><span class="cl"><span class="s">supply_chain: basic
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">cnrs:
</span></span></span><span class="line"><span class="cl"><span class="s">  domain_name: tkg.io
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">contour:
</span></span></span><span class="line"><span class="cl"><span class="s">  envoy:
</span></span></span><span class="line"><span class="cl"><span class="s">    service:
</span></span></span><span class="line"><span class="cl"><span class="s">      type: LoadBalancer #NodePort can be used if your Kubernetes cluster doesn&#39;t support LoadBalancing
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">appliveview_connector:
</span></span></span><span class="line"><span class="cl"><span class="s">  backend:
</span></span></span><span class="line"><span class="cl"><span class="s">    sslDisabled: &#34;true&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">    host: appliveview.tkg.io
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>클러스터를 변경 하면서 TAP을 설치 해준다.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl use-context <span class="o">{</span>TAP 클러스터<span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">tanzu package install tap -p tap.tanzu.vmware.com -v 1.1.0 -f build-tap-values.yaml -n tap-install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">tanzu package install tap -p tap.tanzu.vmware.com -v 1.1.0 -f run-tap-values.yaml -n tap-install
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>build 와 run 클러스터에 TAP 설치가 완료 되었다면 클러스터의 URL 과 TOKEN을 확인한다.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nv">CLUSTER_URL</span><span class="o">=</span><span class="k">$(</span>kubectl config view --minify -o <span class="nv">jsonpath</span><span class="o">=</span><span class="s1">&#39;{.clusters[0].cluster.server}&#39;</span><span class="k">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">CLUSTER_TOKEN</span><span class="o">=</span><span class="k">$(</span>kubectl -n tap-gui get secret <span class="k">$(</span>kubectl -n tap-gui get sa tap-gui-viewer -o<span class="o">=</span>json <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span><span class="p">|</span> jq -r <span class="s1">&#39;.secrets[0].name&#39;</span><span class="k">)</span> -o<span class="o">=</span>json <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span><span class="p">|</span> jq -r <span class="s1">&#39;.data[&#34;token&#34;]&#39;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span><span class="p">|</span> base64 --decode<span class="k">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> CLUSTER_URL: <span class="nv">$CLUSTER_URL</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> CLUSTER_TOKEN: <span class="nv">$CLUSTER_TOKEN</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>view-tap-values.yaml</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">cat <span class="s">&lt;&lt; EOF | tee view-tap-values.yaml
</span></span></span><span class="line"><span class="cl"><span class="s">profile: view
</span></span></span><span class="line"><span class="cl"><span class="s">ceip_policy_disclosed: true # Installation fails if this is not set to true. Not a string.
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">contour:
</span></span></span><span class="line"><span class="cl"><span class="s">  envoy:
</span></span></span><span class="line"><span class="cl"><span class="s">    service:
</span></span></span><span class="line"><span class="cl"><span class="s">      type: LoadBalancer #NodePort can be used if your Kubernetes cluster doesn&#39;t support LoadBalancing
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">learningcenter:
</span></span></span><span class="line"><span class="cl"><span class="s">  ingressDomain: &#34;tkg.io&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">tap_gui:
</span></span></span><span class="line"><span class="cl"><span class="s">  service_type: ClusterIP
</span></span></span><span class="line"><span class="cl"><span class="s">  ingressEnabled: &#34;true&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  ingressDomain: &#34;tkg.io&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  app_config:
</span></span></span><span class="line"><span class="cl"><span class="s">    app:
</span></span></span><span class="line"><span class="cl"><span class="s">      baseUrl: http://tap-gui.tkg.io
</span></span></span><span class="line"><span class="cl"><span class="s">    catalog:
</span></span></span><span class="line"><span class="cl"><span class="s">      locations:
</span></span></span><span class="line"><span class="cl"><span class="s">        - type: url
</span></span></span><span class="line"><span class="cl"><span class="s">          target: https://GIT-CATALOG-URL/catalog-info.yaml
</span></span></span><span class="line"><span class="cl"><span class="s">    backend:
</span></span></span><span class="line"><span class="cl"><span class="s">      baseUrl: http://tap-gui.tkg.io
</span></span></span><span class="line"><span class="cl"><span class="s">      cors:
</span></span></span><span class="line"><span class="cl"><span class="s">        origin: http://tap-gui.tkg.io
</span></span></span><span class="line"><span class="cl"><span class="s">    kubernetes:
</span></span></span><span class="line"><span class="cl"><span class="s">      serviceLocatorMethod:
</span></span></span><span class="line"><span class="cl"><span class="s">        type: &#39;multiTenant&#39;
</span></span></span><span class="line"><span class="cl"><span class="s">      clusterLocatorMethods:
</span></span></span><span class="line"><span class="cl"><span class="s">        - type: &#39;config&#39;
</span></span></span><span class="line"><span class="cl"><span class="s">          clusters:
</span></span></span><span class="line"><span class="cl"><span class="s">            - url: https://10.253.125.252:6443
</span></span></span><span class="line"><span class="cl"><span class="s">              name: tkgm01-tkc-dev02
</span></span></span><span class="line"><span class="cl"><span class="s">              authProvider: serviceAccount
</span></span></span><span class="line"><span class="cl"><span class="s">              skipTLSVerify: true
</span></span></span><span class="line"><span class="cl"><span class="s">              serviceAccountToken: eyJhbGciOiJSUzI1NiIsImtpZCI6InZ4S25KYi1SVW96UmJmdnVXc2lSODlza1NTV0RBRkd1aG1acHI5Qy0xdjAifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJ0YXAtZ3VpIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6InRhcC1ndWktdmlld2VyLXRva2VuLTk1c3EyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6InRhcC1ndWktdmlld2VyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNzJhOTY2ZGEtYzA2ZS00OTIyLTk5Y2YtM2ZjYTMwNmNkNWM5Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OnRhcC1ndWk6dGFwLWd1aS12aWV3ZXIifQ.Vit66qxirDMNcZlUHaDaNXJAWpU-J0o5wfBXK8U2kVnoP3RMcAGrSTodoZ3fnsNtTlPKSCMlw9I7m591Kcly1HL8CPLwkLH-P2Ew26eurQHvVb-NGQUFAIRSdrN6Ig6J5Xg09D5D8wGMJTk7egSud8cj5A1z1bT1ctLCX1N2WrqO3Hrcu0o8XHgSoiogTP_ELU8B2E93kHqdCPeh0xbY9pkTEvXRQun9PTeag6jepd7eNUgCXMab4jYxsEXDbJ3PPbDusuleY2LpcObYaWuuYMyRc5QSVG5EBlEKfaXnEvslTNxdohdEQwQOHwABKC4Au-KBYbzy2s_MI40g2K79iw
</span></span></span><span class="line"><span class="cl"><span class="s">            - url: https://10.253.125.253:6443
</span></span></span><span class="line"><span class="cl"><span class="s">              name: tkgm01-tkc-dev03
</span></span></span><span class="line"><span class="cl"><span class="s">              authProvider: serviceAccount
</span></span></span><span class="line"><span class="cl"><span class="s">              skipTLSVerify: true
</span></span></span><span class="line"><span class="cl"><span class="s">              serviceAccountToken: eyJhbGciOiJSUzI1NiIsImtpZCI6Ii0tYzNpVm9HbXdfTkxqREZhU1ZXeEY0RXJCY29Sc0lwWkl5WW9XdENsYzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJ0YXAtZ3VpIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6InRhcC1ndWktdmlld2VyLXRva2VuLWs0aHQ2Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6InRhcC1ndWktdmlld2VyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNTBiNjMxYjktYjRlOS00ZjhhLThmZDgtNDAwMDE3ZWZkOTJmIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OnRhcC1ndWk6dGFwLWd1aS12aWV3ZXIifQ.DL4nTskvqSvEXwi0HN2rNk61UD3DquvCnRxrFZZT2cM7L7WznTlqdXFxXsqlabE9zcS3nTLQ2NWDjx2qrJEdiAzqr6rOGXkFzYeyuE9kvzcTnVbHYYlagA8UMCjeQUAw0DtTGip3UFqPoXUGdwlZHYR7e1VQcaSmdnFc0UVTrDlpDdGQgJujDvyiU18-pa7BeizBkPJbKPVOgn0sP5M_zZh5Rtzb4-PKc1pYiAG7lg_05U7w_5rfMeoaLFN0H36BKUpGHb7inakGjnR3Z7_6iPe7x4FUR4zK-WZFCT4LbckfR0NKaDGHCaGoMSqQ-W2j6GFdK1wRVGhnortD8mC4ww
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">metadata_store:
</span></span></span><span class="line"><span class="cl"><span class="s">  app_service_type: LoadBalancer # (optional) Defaults to LoadBalancer. Change to NodePort for distributions that don&#39;t support LoadBalancer
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">appliveview:
</span></span></span><span class="line"><span class="cl"><span class="s">  ingressEnabled: &#34;true&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  ingressDomain: tkg.io
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>view 클러스터에 TAP 설치</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">tanzu package install tap -p tap.tanzu.vmware.com -v 1.1.0 -f view-tap-values.yaml -n tap-install
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>설치 완료 후 build 와 run cluster에 권한 부여</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl apply -f - <span class="s">&lt;&lt; EOF
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: Namespace
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: tap-gui
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: ServiceAccount
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  namespace: tap-gui
</span></span></span><span class="line"><span class="cl"><span class="s">  name: tap-gui-viewer
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: rbac.authorization.k8s.io/v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: ClusterRoleBinding
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: tap-gui-read-k8s
</span></span></span><span class="line"><span class="cl"><span class="s">subjects:
</span></span></span><span class="line"><span class="cl"><span class="s">- kind: ServiceAccount
</span></span></span><span class="line"><span class="cl"><span class="s">  namespace: tap-gui
</span></span></span><span class="line"><span class="cl"><span class="s">  name: tap-gui-viewer
</span></span></span><span class="line"><span class="cl"><span class="s">roleRef:
</span></span></span><span class="line"><span class="cl"><span class="s">  kind: ClusterRole
</span></span></span><span class="line"><span class="cl"><span class="s">  name: k8s-reader
</span></span></span><span class="line"><span class="cl"><span class="s">  apiGroup: rbac.authorization.k8s.io
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: rbac.authorization.k8s.io/v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: ClusterRole
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: k8s-reader
</span></span></span><span class="line"><span class="cl"><span class="s">rules:
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [&#39;&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [&#39;pods&#39;, &#39;services&#39;, &#39;configmaps&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;get&#39;, &#39;watch&#39;, &#39;list&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [&#39;apps&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [&#39;deployments&#39;, &#39;replicasets&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;get&#39;, &#39;watch&#39;, &#39;list&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [&#39;autoscaling&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [&#39;horizontalpodautoscalers&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;get&#39;, &#39;watch&#39;, &#39;list&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [&#39;networking.k8s.io&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [&#39;ingresses&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;get&#39;, &#39;watch&#39;, &#39;list&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [&#39;networking.internal.knative.dev&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [&#39;serverlessservices&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;get&#39;, &#39;watch&#39;, &#39;list&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [ &#39;autoscaling.internal.knative.dev&#39; ]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources: [ &#39;podautoscalers&#39; ]
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [ &#39;get&#39;, &#39;watch&#39;, &#39;list&#39; ]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [&#39;serving.knative.dev&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources:
</span></span></span><span class="line"><span class="cl"><span class="s">  - configurations
</span></span></span><span class="line"><span class="cl"><span class="s">  - revisions
</span></span></span><span class="line"><span class="cl"><span class="s">  - routes
</span></span></span><span class="line"><span class="cl"><span class="s">  - services
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;get&#39;, &#39;watch&#39;, &#39;list&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [&#39;carto.run&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources:
</span></span></span><span class="line"><span class="cl"><span class="s">  - clusterconfigtemplates
</span></span></span><span class="line"><span class="cl"><span class="s">  - clusterdeliveries
</span></span></span><span class="line"><span class="cl"><span class="s">  - clusterdeploymenttemplates
</span></span></span><span class="line"><span class="cl"><span class="s">  - clusterimagetemplates
</span></span></span><span class="line"><span class="cl"><span class="s">  - clusterruntemplates
</span></span></span><span class="line"><span class="cl"><span class="s">  - clustersourcetemplates
</span></span></span><span class="line"><span class="cl"><span class="s">  - clustersupplychains
</span></span></span><span class="line"><span class="cl"><span class="s">  - clustertemplates
</span></span></span><span class="line"><span class="cl"><span class="s">  - deliverables
</span></span></span><span class="line"><span class="cl"><span class="s">  - runnables
</span></span></span><span class="line"><span class="cl"><span class="s">  - workloads
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;get&#39;, &#39;watch&#39;, &#39;list&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [&#39;source.toolkit.fluxcd.io&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources:
</span></span></span><span class="line"><span class="cl"><span class="s">  - gitrepositories
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;get&#39;, &#39;watch&#39;, &#39;list&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [&#39;source.apps.tanzu.vmware.com&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources:
</span></span></span><span class="line"><span class="cl"><span class="s">  - imagerepositories
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;get&#39;, &#39;watch&#39;, &#39;list&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [&#39;conventions.apps.tanzu.vmware.com&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources:
</span></span></span><span class="line"><span class="cl"><span class="s">  - podintents
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;get&#39;, &#39;watch&#39;, &#39;list&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [&#39;kpack.io&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources:
</span></span></span><span class="line"><span class="cl"><span class="s">  - images
</span></span></span><span class="line"><span class="cl"><span class="s">  - builds
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;get&#39;, &#39;watch&#39;, &#39;list&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [&#39;scanning.apps.tanzu.vmware.com&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources:
</span></span></span><span class="line"><span class="cl"><span class="s">  - sourcescans
</span></span></span><span class="line"><span class="cl"><span class="s">  - imagescans
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;get&#39;, &#39;watch&#39;, &#39;list&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [&#39;tekton.dev&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources:
</span></span></span><span class="line"><span class="cl"><span class="s">  - taskruns
</span></span></span><span class="line"><span class="cl"><span class="s">  - pipelineruns
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;get&#39;, &#39;watch&#39;, &#39;list&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">- apiGroups: [&#39;kappctrl.k14s.io&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">  resources:
</span></span></span><span class="line"><span class="cl"><span class="s">  - apps
</span></span></span><span class="line"><span class="cl"><span class="s">  verbs: [&#39;get&#39;, &#39;watch&#39;, &#39;list&#39;]
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>모든 클러스터에 개발자의 대한 권한을 부여</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl annotate secret tap-registry -n tap-install secretgen.carvel.dev/image-pull-secret<span class="o">=</span><span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">kubectl patch sa default -n tap-install --type <span class="s1">&#39;json&#39;</span> -p <span class="s1">&#39;[{&#34;op&#34;:&#34;add&#34;,&#34;path&#34;:&#34;/secrets&#34;,&#34;value&#34;:[&#34;name&#34;:&#34;registry-credentials&#34;,&#34;name&#34;:&#34;tap-registry&#34;]}]&#39;</span>
</span></span><span class="line"><span class="cl">kubectl patch sa default -n tap-install --type <span class="s1">&#39;json&#39;</span> -p <span class="s1">&#39;[{&#34;op&#34;:&#34;add&#34;,&#34;path&#34;:&#34;/imagePullSecrets&#34;,&#34;value&#34;:[&#34;name&#34;:&#34;registry-credentials&#34;,&#34;name&#34;:&#34;tap-registry&#34;]}]&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">kubectl apply -f - -n tap-install <span class="s">&lt;&lt; EOF
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: rbac.authorization.k8s.io/v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: RoleBinding
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: default-permit-deliverable
</span></span></span><span class="line"><span class="cl"><span class="s">roleRef:
</span></span></span><span class="line"><span class="cl"><span class="s">  apiGroup: rbac.authorization.k8s.io
</span></span></span><span class="line"><span class="cl"><span class="s">  kind: ClusterRole
</span></span></span><span class="line"><span class="cl"><span class="s">  name: deliverable
</span></span></span><span class="line"><span class="cl"><span class="s">subjects:
</span></span></span><span class="line"><span class="cl"><span class="s">  - kind: ServiceAccount
</span></span></span><span class="line"><span class="cl"><span class="s">    name: default
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: rbac.authorization.k8s.io/v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: RoleBinding
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: default-permit-workload
</span></span></span><span class="line"><span class="cl"><span class="s">roleRef:
</span></span></span><span class="line"><span class="cl"><span class="s">  apiGroup: rbac.authorization.k8s.io
</span></span></span><span class="line"><span class="cl"><span class="s">  kind: ClusterRole
</span></span></span><span class="line"><span class="cl"><span class="s">  name: workload
</span></span></span><span class="line"><span class="cl"><span class="s">subjects:
</span></span></span><span class="line"><span class="cl"><span class="s">  - kind: ServiceAccount
</span></span></span><span class="line"><span class="cl"><span class="s">    name: default
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: rbac.authorization.k8s.io/v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: RoleBinding
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: dev-permit-app-viewer
</span></span></span><span class="line"><span class="cl"><span class="s">roleRef:
</span></span></span><span class="line"><span class="cl"><span class="s">  apiGroup: rbac.authorization.k8s.io
</span></span></span><span class="line"><span class="cl"><span class="s">  kind: ClusterRole
</span></span></span><span class="line"><span class="cl"><span class="s">  name: app-viewer
</span></span></span><span class="line"><span class="cl"><span class="s">subjects:
</span></span></span><span class="line"><span class="cl"><span class="s">  - kind: Group
</span></span></span><span class="line"><span class="cl"><span class="s">    name: &#34;namespace-developers&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">    apiGroup: rbac.authorization.k8s.io
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: rbac.authorization.k8s.io/v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: ClusterRoleBinding
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: namespace-dev-permit-app-viewer
</span></span></span><span class="line"><span class="cl"><span class="s">roleRef:
</span></span></span><span class="line"><span class="cl"><span class="s">  apiGroup: rbac.authorization.k8s.io
</span></span></span><span class="line"><span class="cl"><span class="s">  kind: ClusterRole
</span></span></span><span class="line"><span class="cl"><span class="s">  name: app-viewer-cluster-access
</span></span></span><span class="line"><span class="cl"><span class="s">subjects:
</span></span></span><span class="line"><span class="cl"><span class="s">  - kind: Group
</span></span></span><span class="line"><span class="cl"><span class="s">    name: &#34;namespace-developers&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">    apiGroup: rbac.authorization.k8s.io
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Build Cluster로 컨텍스트 변경 후 App을 배포한다.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">DEVELOPER_NAMESPACE</span><span class="o">=</span>tap-install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">tanzu apps workload create tanzu-java-web-app <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span> --git-repo https://github.com/huntedhappy/tanzu-java-web-app <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span> --git-branch main <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span> --type web <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span> --label app.kubernetes.io/part-of<span class="o">=</span>tanzu-java-web-app <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span> --yes <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span> -n <span class="si">${</span><span class="nv">DEVELOPER_NAMESPACE</span><span class="si">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<figure><figcaption>
            <h4>app workload 상태 확인</h4>
        </figcaption>
</figure>

<ul>
<li>진행 상태 확인</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">tanzu apps workload tail tanzu-java-web-app --since 10m --timestamp -n <span class="si">${</span><span class="nv">DEVELOPER_NAMESPACE</span><span class="si">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>app workload 진행 상태 확인</h4>
        </figcaption>
</figure>

<ul>
<li>
<p>생성이 완료 되면 GUI에서 확인
<figure><figcaption>
            <h4>supply chain 확인</h4>
        </figcaption>
</figure>
</p>
</li>
<li>
<p>deliverable이 되었는지 확인 한다. build 클러스터에서는 false로 나오는 것을 우선 확인 할 수 있다.</p>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl get deliverable -n <span class="si">${</span><span class="nv">DEVELOPER_NAMESPACE</span><span class="si">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>deliverable 실패 확인</h4>
        </figcaption>
</figure>

<ul>
<li>deliverable를 yaml파일로 저장한다.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl get deliverable tanzu-java-web-app -n <span class="si">${</span><span class="nv">DEVELOPER_NAMESPACE</span><span class="si">}</span> -oyaml &gt; deliverable.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>저장된 파일에서 ownerReferences와 status 부분을 삭제 한다. 그럼 아래와 비슷할 것이다.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">apiVersion: carto.run/v1alpha1
</span></span><span class="line"><span class="cl">kind: Deliverable
</span></span><span class="line"><span class="cl">metadata:
</span></span><span class="line"><span class="cl">  creationTimestamp: <span class="s2">&#34;2022-04-19T07:56:37Z&#34;</span>
</span></span><span class="line"><span class="cl">  generation: <span class="m">1</span>
</span></span><span class="line"><span class="cl">  labels:
</span></span><span class="line"><span class="cl">    app.kubernetes.io/component: deliverable
</span></span><span class="line"><span class="cl">    app.kubernetes.io/part-of: tanzu-java-web-app
</span></span><span class="line"><span class="cl">    app.tanzu.vmware.com/deliverable-type: web
</span></span><span class="line"><span class="cl">    apps.tanzu.vmware.com/workload-type: web
</span></span><span class="line"><span class="cl">    carto.run/cluster-template-name: deliverable-template
</span></span><span class="line"><span class="cl">    carto.run/resource-name: deliverable
</span></span><span class="line"><span class="cl">    carto.run/supply-chain-name: source-to-url
</span></span><span class="line"><span class="cl">    carto.run/template-kind: ClusterTemplate
</span></span><span class="line"><span class="cl">    carto.run/workload-name: tanzu-java-web-app
</span></span><span class="line"><span class="cl">    carto.run/workload-namespace: tap-install
</span></span><span class="line"><span class="cl">  name: tanzu-java-web-app
</span></span><span class="line"><span class="cl">  namespace: tap-install
</span></span><span class="line"><span class="cl">  resourceVersion: <span class="s2">&#34;1451190&#34;</span>
</span></span><span class="line"><span class="cl">  uid: 23c2d202-0186-4c62-b497-baaa961e3698
</span></span><span class="line"><span class="cl">spec:
</span></span><span class="line"><span class="cl">  source:
</span></span><span class="line"><span class="cl">    image: <span class="o">{</span>image<span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>run cluster로 변경 후 저장한 deliverable파일을 실행 해준다.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1">## RUN Cluster로 변경</span>
</span></span><span class="line"><span class="cl">kubectl config use-context <span class="o">{</span>run cluster<span class="o">}</span>
</span></span><span class="line"><span class="cl">kubectl apply -f deliverable.yaml -n <span class="si">${</span><span class="nv">DEVELOPER_NAMESPACE</span><span class="si">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>확인을 하면 성공한 것을 확인 할 수 있다.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl get deliverables -n <span class="si">${</span><span class="nv">DEVELOPER_NAMESPACE</span><span class="si">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><figcaption>
            <h4>deliverable 상태 확인</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>deliverable gui 상태 확인</h4>
        </figcaption>
</figure>
</p>
<h2 id="4-visual-studio">4. Visual Studio</h2>
<p>IDE를 Visual Studio를 사용하여 동작, 현재는 Visual studio만 지원 하고 있음</p>
<h3 id="41-extenstion-설정">4.1. Extenstion 설정</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">apt search openjdk
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">apt install openjdk-11-jdk -y
</span></span><span class="line"><span class="cl">java --version
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;allow_k8s_contexts(&#39;</span><span class="k">$(</span>kubectl config current-context<span class="k">)</span><span class="s2">&#39;)&#34;</span> &gt;&gt; /var/tmp/tap/tanzu-java-web-app/Tiltfile
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 맨아래 해당 context가 들어가 있는 것을 확인 할 수 있다.</span>
</span></span><span class="line"><span class="cl">cat /var/tmp/tap/tanzu-java-web-app/Tiltfile
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">ctrl + <span class="nb">shift</span> + p
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><figcaption>
            <h4>VS 설정</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>VS 설정</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>VS 설정</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>VS 설정</h4>
        </figcaption>
</figure>
</p>
<h3 id="42-live-update-start">4.2. Live Update Start</h3>
<p>해당 부분을 수정 하면 자동으로 GIT에 업데이트가 되면서 바뀌는것을 볼수 있다.
<figure><figcaption>
            <h4>수정#1</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>수정#2</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>수정#3</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>수정#4</h4>
        </figcaption>
</figure>
</p>
]]></description>
</item><item>
    <title>The Documentation NSXT and Ansible</title>
    <link>https://huntedhappy.github.io/ko/nsxt/</link>
    <pubDate>Wed, 19 Jan 2022 09:27:33 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://huntedhappy.github.io/ko/nsxt/</guid>
    <description><![CDATA[<h2 id="1-ansible을-통한-nsxt-구성">1. Ansible을 통한 NSXT 구성</h2>
<p>NSXT를 Ansible로 구성.</p>
<p>Ansible의 대한 보충 설명을 할 수 있으면 추후에 진행 하기로 하고 우선 설정의 대해서 설명을 먼저 하겠다.</p>
<p>먼저.. 이 부분을 블로그로 쓰는게 맞을까라는 고민을 좀 했다.</p>
<p>이유는 우선 Ansible로 구성이 되어 있기 때문에 코드가 들어가 있다. 그래서 NSXT Ansible Module을 다운로드 받고 나서 추가 된 부분을 Git Hub에 올려 두었다.</p>
<h2 id="2-설치">2. 설치</h2>
<h3 id="21-파이썬-설치">2.1. 파이썬 설치</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">yum update -y
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">yum install epel-release yum-utils python3-pip -y
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">pip3 install --upgrade pip setuptools ansible pyvmomi pyvim requests ruamel.yaml
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">dnf install libnsl -y
</span></span></code></pre></td></tr></table>
</div>
</div><p>파이썬을 설치 후 버전을 변경 하고 싶으면 아래 처럼 구성</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo rm /usr/bin/python
</span></span><span class="line"><span class="cl">sudo update-alternatives --install /usr/bin/python python /usr/bin/python<span class="o">(</span>TAB<span class="o">)</span> <span class="c1">## 설치되어 있는 버전을 확인 할 수 있다.</span>
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>파이썬 버전 확인</h4>
        </figcaption>
</figure>

<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">sudo update-alternatives --install /usr/bin/python python /usr/bin/python2.7 <span class="m">1</span>
</span></span><span class="line"><span class="cl">sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.8 <span class="m">2</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sudo update-alternatives --config python
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>파이썬 버전 선택</h4>
        </figcaption>
</figure>

<h3 id="22-ovf-tool">2.2. OVF Tool</h3>
<p>OVF Tool 다운로드</p>
<p><a href="https://developer.vmware.com/web/tool/4.4.0/ovf" target="_blank" rel="noopener noreffer"><i class="fas fa-link"></i> OVF Tool 다운로드 링크</a></p>
<figure><figcaption>
            <h4>원하는 버전으로 다운로드 받는다.</h4>
        </figcaption>
</figure>

<h3 id="23-nsxt-ansible-download">2.3. NSXT Ansible Download</h3>
<p>제공한 버전은 3.1 기준으로 구성을 하였다.</p>
<figure><figcaption>
            <h4>원하는 버전으로 다운로드 받는다.</h4>
        </figcaption>
</figure>

<h3 id="24-ansible-실행">2.4. Ansible 실행</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">ovftool -v 에러가 나오면 dnf install libnsl 설치
</span></span><span class="line"><span class="cl">ansible-playbook 01_deploy_first_node.yml -vvv
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>에러 발생시 dnf install libnsl 설치.</h4>
        </figcaption>
</figure>

<h3 id="25-github">2.5. Github</h3>
<p>다운로드 NSXT Ansible Module을 압축을 해제 하면 되는대, 그 부분을 별도로 github에 올려두었다.</p>
<p>추가적으로 vars라는 폴더와, 00 ~ 10 번 , answerfile,yml이 추가 된 것을 확인 할 수 있다.</p>
<p>코드를 하나 하나 설명을 하기에는.. 좀 벅찬 느낌이 든다.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">git clone https://github.com/huntedhappy/nsxt3.1
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>The Documentation NAP</title>
    <link>https://huntedhappy.github.io/ko/nap/</link>
    <pubDate>Thu, 13 Jan 2022 18:10:20 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://huntedhappy.github.io/ko/nap/</guid>
    <description><![CDATA[<h2 id="1-nap">1. NAP?</h2>
<p>NAP(NGINX App Protect)은 WAF and DoS Protection을 제공 한다. NGINX Plus에서 제공을 하며 컨테이너 환경에서 App을 보호 하기 위한 솔루션이다. 대부분 컨테이너 환경에서 Ingress를 NGINX로 많이 사용 할 것이다. NGINX PLUS 라이센스를 구매 하면 NAP을 사용 할 수 있다.</p>
<h2 id="2-사전-구성">2. 사전 구성</h2>
<ul>
<li>Docker v18.09+</li>
<li>GNU Make</li>
<li>git</li>
<li>Helm3</li>
<li>OpenSSL</li>
<li><a href="https://github.com/OpenVPN/easy-rsa.git" target="_blank" rel="noopener noreffer">https://github.com/OpenVPN/easy-rsa.git</a></li>
<li>apt install git \  make \ make-guile</li>
</ul>
<h2 id="3-설치">3. 설치</h2>
<p>Namespace 생성 후 easy-rsa git clone</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl create ns ingress-nginx
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">git clone https://github.com/OpenVPN/easy-rsa.git
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>easy rsa</h4>
        </figcaption>
</figure>

<p>인증서 생성 (인증서 생성은 반드시 이렇게 하지 않아도 된다.)</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">cd</span> easy-rsa/easyrsa3/
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">./easyrsa init-pki
</span></span><span class="line"><span class="cl">./easyrsa build-ca
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>easy rsa 구성#1</h4>
        </figcaption>
</figure>

<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">./easyrsa gen-req wildcard
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">./easyrsa sign-req server wildcard
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>easy rsa 구성#2</h4>
        </figcaption>
</figure>

<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">openssl rsa -in /var/tmp/easy-rsa/easyrsa3/pki/private/wildcard.key -out /var/tmp/easy-rsa/easyrsa3/pki/private/wildcard-unencrypted.key
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 인증서 Secret 생성</span>
</span></span><span class="line"><span class="cl">kubectl create -n ingress-nginx secret tls wildcard-tls --key /var/tmp/easy-rsa/easyrsa3/pki/private/wildcard-unencrypted.key --cert /var/tmp/easy-rsa/easyrsa3/pki/issued/wildcard.crt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 안지워도된다.</span>
</span></span><span class="line"><span class="cl">rm /var/tmp/easy-rsa/easyrsa3/pki/private/wildcard-unencrypted.key
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>ssl 인증서 secret 생성</h4>
        </figcaption>
</figure>

<p>secret 인증서 확인</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl get secret -n ingress-nginx
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>secret 확인</h4>
        </figcaption>
</figure>

<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">cd</span> /var/tmp
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## nap을 위한 yaml파일 다운로드</span>
</span></span><span class="line"><span class="cl">git clone https://github.com/nginxinc/kubernetes-ingress/
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## nap을 위한 helm repo 주소 추가</span>
</span></span><span class="line"><span class="cl">helm repo add nginx-stable https://helm.nginx.com/stable
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>git clone</h4>
        </figcaption>
</figure>

<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">cd</span> /var/tmp/kubernetes-ingress/deployments/helm-chart
</span></span><span class="line"><span class="cl">git checkout v1.11.3
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>git checkout</h4>
        </figcaption>
</figure>

<p>라이센스 발급 30일 trial을 받을 수 있다. 가입 필요
<a href="https://www.nginx.com/free-trial-request-nginx-ingress-controller/" target="_blank" rel="noopener noreffer"><i class="far fa-file-archive fa-fw"></i>&nbsp;NAP 발급 링크</a></p>
<p>미리 Harbor에 ingress-nginx project 생성이 되어 있어야함</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nv">REGISTRY</span><span class="o">=</span>&lt;registry IP or FQDN&gt;
</span></span><span class="line"><span class="cl"><span class="nv">NS</span><span class="o">=</span>&lt;your namespace&gt;
</span></span><span class="line"><span class="cl"><span class="nv">REGISTRY</span><span class="o">=</span>10.253.110.4
</span></span><span class="line"><span class="cl"><span class="nv">NS</span><span class="o">=</span>ingress-nginx
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>Harbor 확인</h4>
        </figcaption>
</figure>

<p>발급 받은 라이센스를 복사</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">mkdir -p /var/tmp/kubernetes-ingress
</span></span><span class="line"><span class="cl">cp nginx-repo.key nginx-repo.crt  /var/tmp/kubernetes-ingress
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>라이센스 복사</h4>
        </figcaption>
</figure>

<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">cd</span> /var/tmp/kubernetes-ingress
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">make debian-image-nap-plus <span class="nv">PREFIX</span><span class="o">=</span><span class="nv">$REGISTRY</span>/<span class="nv">$NS</span>/nginx-plus-ingress <span class="nv">TARGET</span><span class="o">=</span>container
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>Docker Pull</h4>
        </figcaption>
</figure>

<p>docker image 확인</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">docker images
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>Docker Image 확인</h4>
        </figcaption>
</figure>

<p>Harbor에 Push</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">docker image tag 18a49497920c <span class="nv">$REGISTRY</span>/<span class="nv">$NS</span>/nginx-plus-ingress:1.11.3
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">docker login &lt;harbor IP&gt;
</span></span><span class="line"><span class="cl">make push <span class="nv">PREFIX</span><span class="o">=</span><span class="nv">$REGISTRY</span>/<span class="nv">$NS</span>/nginx-plus-ingress
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><figcaption>
            <h4>Harbor push#1</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Harbor push#2</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Harbor push#3</h4>
        </figcaption>
</figure>
</p>
<p>Helm Value 복사 (원본을 건드리지 않게 하기 위해 별도로 복사를 한다.)</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">cd</span> deployments/helm-chart
</span></span><span class="line"><span class="cl">cp values-plus.yaml values-plus.yaml.orig
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>Helm Value 복사</h4>
        </figcaption>
</figure>

<p>복사한 파일을 열어 보면 아래와 같이 되어 있는대 수정해줘야 하는 부분을 수정 해준다.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1">## vi 편집</span>
</span></span><span class="line"><span class="cl">vi values-plus.yaml 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 내용 (imagePullSecretName의 경우 Harbor에 Public으로 만들었으면 상관 없음)</span>
</span></span><span class="line"><span class="cl">controller:
</span></span><span class="line"><span class="cl">  replicaCount: <span class="m">1</span>
</span></span><span class="line"><span class="cl">  nginxplus: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">  image:
</span></span><span class="line"><span class="cl">    repository: 10.253.106.46/ingress-nginx/nginx-plus-ingress
</span></span><span class="line"><span class="cl">    tag: <span class="s2">&#34;1.11.3&#34;</span>
</span></span><span class="line"><span class="cl">  service:
</span></span><span class="line"><span class="cl">    externalTrafficPolicy: Cluster
</span></span><span class="line"><span class="cl">  appprotect:
</span></span><span class="line"><span class="cl">    <span class="c1">## Enable the App Protect module in the Ingress Controller.</span>
</span></span><span class="line"><span class="cl">    enable: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">  wildcardTLS:
</span></span><span class="line"><span class="cl">    <span class="c1">## The base64-encoded TLS certificate for every Ingress host that has TLS enabled but no secret specified.</span>
</span></span><span class="line"><span class="cl">    <span class="c1">## If the parameter is not set, for such Ingress hosts NGINX will break any attempt to establish a TLS connection.</span>
</span></span><span class="line"><span class="cl">    cert: <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">## The base64-encoded TLS key for every Ingress host that has TLS enabled but no secret specified.</span>
</span></span><span class="line"><span class="cl">    <span class="c1">## If the parameter is not set, for such Ingress hosts NGINX will break any attempt to establish a TLS connection.</span>
</span></span><span class="line"><span class="cl">    key: <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">## The secret with a TLS certificate and key for every Ingress host that has TLS enabled but no secret specified.</span>
</span></span><span class="line"><span class="cl">    <span class="c1">## The value must follow the following format: `&lt;namespace&gt;/&lt;name&gt;`.</span>
</span></span><span class="line"><span class="cl">    <span class="c1">## Used as an alternative to specifying a certificate and key using `controller.wildcardTLS.cert` and `controller.wildcardTLS.key` parameters.</span>
</span></span><span class="line"><span class="cl">    <span class="c1">## Format: &lt;namespace&gt;/&lt;secret_name&gt;</span>
</span></span><span class="line"><span class="cl">    secret: ingress-nginx/wildcard-tls
</span></span><span class="line"><span class="cl">  serviceAccount:
</span></span><span class="line"><span class="cl">    <span class="c1">## The name of the service account of the Ingress controller pods. Used for RBAC.</span>
</span></span><span class="line"><span class="cl">    <span class="c1">## Autogenerated if not set or set to &#34;&#34;.</span>
</span></span><span class="line"><span class="cl">    name: ingress-nginx
</span></span><span class="line"><span class="cl">    <span class="c1">## The name of the secret containing docker registry credentials.</span>
</span></span><span class="line"><span class="cl">    <span class="c1">## Secret must exist in the same namespace as the helm release.</span>
</span></span><span class="line"><span class="cl">    imagePullSecretName: <span class="s2">&#34;regcred&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>PSP를 혀용하기 위해 해당 파일을 실행 해준다.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl apply -f https://raw.githubusercontent.com/f5devcentral/f5-bd-tanzu-tkg-nginxplus/main/nginx-psp.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>psp 허용</h4>
        </figcaption>
</figure>

<p>HELM 실행</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl create secret generic regcred --from-file<span class="o">=</span>.dockerconfigjson<span class="o">=</span><span class="nv">$HOME</span>/.docker/config.json --type<span class="o">=</span>kubernetes.io/dockerconfigjson -n ingress-nginx
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">helm install nap nginx-stable/nginx-ingress -f values-plus.yaml -n ingress-nginx
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>helm으로 nap 설치</h4>
        </figcaption>
</figure>

<p>설치 확인</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">watch -n <span class="m">1</span> kubectl -n ingress-nginx get all
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><figcaption>
            <h4>설치 확인</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>L4 확인</h4>
        </figcaption>
</figure>
</p>
<h2 id="4-waf">4. WAF</h2>
<p>WAF TEST를 위해 웹 구성</p>
<h3 id="41-test-web-구성">4.1. TEST WEB 구성</h3>
<p>TEST를 하기 위해 제공하는 Manifest를 다운로드 한다.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">wget https://raw.githubusercontent.com/f5devcentral/f5-bd-tanzu-tkg-nginxplus/main/cafe-rbac.yaml
</span></span><span class="line"><span class="cl">wget https://raw.githubusercontent.com/f5devcentral/f5-bd-tanzu-tkg-nginxplus/main/cafe.yaml
</span></span><span class="line"><span class="cl">wget https://raw.githubusercontent.com/f5devcentral/f5-bd-tanzu-tkg-nginxplus/main/cafe-ingress.yaml
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">kubectl apply -f cafe-rbac.yaml -n <span class="nb">test</span>
</span></span><span class="line"><span class="cl">kubectl apply -f cafe.yaml -n <span class="nb">test</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">vi cafe-ingress.yaml <span class="o">(</span>인증서 만들었던 Domain으로 변경<span class="o">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>Domain을 변경 한다.</h4>
        </figcaption>
</figure>

<p>Domain 변경 후 실행</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl apply -f cafe-ingress.yaml -n <span class="nb">test</span>
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>Ingress 확인.</h4>
        </figcaption>
</figure>

<p>POSTMAN으로 접속이 되는지 확인
<figure><figcaption>
            <h4>POSTMAN 확인.</h4>
        </figcaption>
</figure>
</p>
<h3 id="42-waf-구성">4.2. WAF 구성</h3>
<p>ELK를 구성 하기 위해 syslog pod를 구성한다.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">wget https://raw.githubusercontent.com/f5devcentral/f5-bd-tanzu-tkg-nginxplus/main/syslog-rbac.yaml
</span></span><span class="line"><span class="cl">wget https://raw.githubusercontent.com/f5devcentral/f5-bd-tanzu-tkg-nginxplus/main/syslog.yaml
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">kubectl apply -f syslog-rbac.yaml -n ingress-nginx
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl apply -f syslog.yaml -n ingress-nginx
</span></span><span class="line"><span class="cl">wget https://raw.githubusercontent.com/f5devcentral/f5-bd-tanzu-tkg-nginxplus/main/ap-apple-uds.yaml
</span></span><span class="line"><span class="cl">wget https://raw.githubusercontent.com/f5devcentral/f5-bd-tanzu-tkg-nginxplus/main/ap-dataguard-alarm-policy.yaml
</span></span><span class="line"><span class="cl">wget https://raw.githubusercontent.com/f5devcentral/f5-bd-tanzu-tkg-nginxplus/main/ap-logconf.yaml
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">kubectl apply -f  ap-apple-uds.yaml -n <span class="nb">test</span>
</span></span><span class="line"><span class="cl">kubeclt apply -f  ap-dataguard-alarm-policy.yaml -n <span class="nb">test</span>
</span></span><span class="line"><span class="cl">kubectl apply -f  ap-logconf.yaml -n <span class="nb">test</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>ingress에 annotation을 설정</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">wget https://raw.githubusercontent.com/f5devcentral/f5-bd-tanzu-tkg-nginxplus/main/cafe-ingress-ap.yaml
</span></span><span class="line"><span class="cl">kubectl get pod -n ingress-nginx -o wide
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## vi 편집 실행</span>
</span></span><span class="line"><span class="cl">vi cafe-ingress-ap.yaml
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">apiVersion: networking.k8s.io/v1beta1
</span></span><span class="line"><span class="cl">kind: Ingress
</span></span><span class="line"><span class="cl">metadata:
</span></span><span class="line"><span class="cl">  name: cafe-ingress
</span></span><span class="line"><span class="cl">  annotations:
</span></span><span class="line"><span class="cl">    appprotect.f5.com/app-protect-policy: <span class="s2">&#34;test/dataguard-alarm&#34;</span>
</span></span><span class="line"><span class="cl">    appprotect.f5.com/app-protect-enable: <span class="s2">&#34;True&#34;</span>
</span></span><span class="line"><span class="cl">    appprotect.f5.com/app-protect-security-log-enable: <span class="s2">&#34;True&#34;</span>
</span></span><span class="line"><span class="cl">    appprotect.f5.com/app-protect-security-log: <span class="s2">&#34;test/logconf&#34;</span>
</span></span><span class="line"><span class="cl">    appprotect.f5.com/app-protect-security-log-destination: <span class="s2">&#34;syslog:server=SYSLOG:514&#34;</span>
</span></span><span class="line"><span class="cl">spec:
</span></span><span class="line"><span class="cl">  ingressClassName: nginx <span class="c1"># use only with k8s version &gt;= 1.18.0</span>
</span></span><span class="line"><span class="cl">  tls:  - hosts:
</span></span><span class="line"><span class="cl">    - cafe.vcf.local  <span class="c1">## 인증서와 동일한 도메인으로 변경</span>
</span></span><span class="line"><span class="cl">  rules:
</span></span><span class="line"><span class="cl">  - host: cafe.vcf.local <span class="c1">## 인증서와 동일한 도메인으로 변경</span>
</span></span><span class="line"><span class="cl">    http:
</span></span><span class="line"><span class="cl">      paths:
</span></span><span class="line"><span class="cl">      - path: /tea
</span></span><span class="line"><span class="cl">        backend:
</span></span><span class="line"><span class="cl">          serviceName: tea-svc
</span></span><span class="line"><span class="cl">          servicePort: <span class="m">80</span>
</span></span><span class="line"><span class="cl">      - path: /coffee
</span></span><span class="line"><span class="cl">        backend:
</span></span><span class="line"><span class="cl">          serviceName: coffee-svc
</span></span><span class="line"><span class="cl">          servicePort: <span class="m">80</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1">## syslog service ip</span>
</span></span><span class="line"><span class="cl"><span class="nv">SYSLOG_IP</span><span class="o">=</span>10.101.182.155
</span></span><span class="line"><span class="cl">vi cafe-ingress-ap.yaml
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">sed -e <span class="s2">&#34;s/SYSLOG/</span><span class="nv">$SYSLOG_IP</span><span class="s2">/&#34;</span> cafe-ingress-ap.yaml &gt; cafe-ingress-ap-syslog.yaml
</span></span><span class="line"><span class="cl">kubectl apply -n <span class="nb">test</span> -f cafe-ingress-ap-syslog.yaml
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">kubectl get ingress -n <span class="nb">test</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 아래 명령어로 annotation을 확인 할 수 있다.</span>
</span></span><span class="line"><span class="cl">kubrectl get ingress cafe-ingress -n <span class="nb">test</span> -o yaml
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>Annotation 확인.</h4>
        </figcaption>
</figure>

<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">kubectl get pod -n ingress-nginx
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">LOG 확인
</span></span><span class="line"><span class="cl">kubectl -n ingress-nginx <span class="nb">exec</span> -it syslog-65d847447d-ghbvq -- tail -f /var/log/messages
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><figcaption>
            <h4>syslog pod 확인.</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>PostMan 요청 후 REJECT확인.</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Pod 로그 확인시 Attack 확인.</h4>
        </figcaption>
</figure>
</p>
<h2 id="5-elk">5. ELK</h2>
<p>LOG를 좀 가시적이게 표현하기 위해 ELK를 구성</p>
<h3 id="51-elastic-연동">5.1. Elastic 연동</h3>
<p>logstach를 5144로 구성한 이유는 Logstach 구성시 514가 well-known 포트라 5144로 변경
logstash yaml 파일, <a href="/ko/nap/logstash_test.yaml" rel=""><i class="far fa-file-archive fa-fw"></i>&nbsp;logstash_test.yaml</a>.</p>
<figure><figcaption>
            <h4>logstach 확인.</h4>
        </figcaption>
</figure>

<p>ingress 설정에서 syslog server 를 logstash cluster IP로 설정
<figure><figcaption>
            <h4>annotation에서 logstach로 syslog IP 변경 .</h4>
        </figcaption>
</figure>
</p>
<p>해당 파일을 다운로드 받는다.</p>
<p><a href="https://github.com/f5devcentral/f5-waf-elk-dashboards" target="_blank" rel="noopener noreffer"><i class="fas fa-link"></i> Dashboard 링크 </a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">mkdir /var/tmp/kibana
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> /var/tmp/kibana
</span></span><span class="line"><span class="cl">cp false-positives-dashboards.ndjson overview-dashboard.ndjson /var/tmp/kibana
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>파일 다운로드</h4>
        </figcaption>
</figure>

<p>대쉬보드 업로드</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">cd</span> /var/tmp
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">KIBANA_URL</span><span class="o">=</span> <span class="o">{</span>FQDN or IP<span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">KIBANA_URL</span><span class="o">=</span>http://kibana.vcf.local:5601
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">jq -s . kibana/overview-dashboard.ndjson <span class="p">|</span> jq <span class="s1">&#39;{&#34;objects&#34;: . }&#39;</span> <span class="p">|</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>curl -k --location --request POST <span class="s2">&#34;</span><span class="nv">$KIBANA_URL</span><span class="s2">/api/kibana/dashboards/import&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>--header <span class="s1">&#39;kbn-xsrf: true&#39;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>--header <span class="s1">&#39;Content-Type: text/plain&#39;</span> -d @- <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span><span class="p">|</span> jq
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">jq -s . kibana/false-positives-dashboards.ndjson <span class="p">|</span> jq <span class="s1">&#39;{&#34;objects&#34;: . }&#39;</span> <span class="p">|</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>curl -k --location --request POST <span class="s2">&#34;</span><span class="nv">$KIBANA_URL</span><span class="s2">/api/kibana/dashboards/import&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>--header <span class="s1">&#39;kbn-xsrf: true&#39;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>--header <span class="s1">&#39;Content-Type: text/plain&#39;</span> -d @- <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span><span class="p">|</span> jq
</span></span></code></pre></td></tr></table>
</div>
</div><p>kibana접속 후 index patterns에 waf-logs-* 확인
<figure><figcaption>
            <h4>kibana 확인</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>kibana 대시보드 확인</h4>
        </figcaption>
</figure>
</p>
<p><a href="https://devcentral.f5.com/s/articles/Deploying-NGINXplus-with-AppProtect-in-Tanzu-Kubernetes-Grid" target="_blank" rel="noopener noreffer"><i class="fas fa-link"></i> 참고문헌 </a></p>
]]></description>
</item><item>
    <title>The Documentation Openshift</title>
    <link>https://huntedhappy.github.io/ko/openshift/</link>
    <pubDate>Thu, 13 Jan 2022 15:48:11 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://huntedhappy.github.io/ko/openshift/</guid>
    <description><![CDATA[<h2 id="1-openshift">1. Openshift</h2>
<p><code>오픈시프트 오리진(OpenShift Origin)</code>은 오픈시프트 온라인, 오픈시프트 데디케이티드, 오픈시프트 컨테이너 플랫폼에 사용되는 업스트림 커뮤니티 프로젝트이다. 도커 컨테이너 패키징 코어와 쿠버네티스 컨테이너 클러스터 관리 기능을 기반에 두고 개발된 오리진은 애플리케이션 수명 관리 기능과 데브옵스 도구를 통해 증강된다. 오리진은 오픈 소스 애플리케이션 컨테이너 플랫폼을 제공한다. 오리진 프로젝트의 모든 소스 코드는 깃허브에서 아파치 라이선스 (버전 2.0)을 통해 이용이 가능하다.[4]</p>
<p><code>오픈시프트 온라인(OpenShift Online)</code>은 레드햇의 퍼블릭 클라우드 애플리케이션 개발 및 호스팅 서비스이다. 온라인은 오리진 프로젝트 소스 코드의 버전 2를 제공하였으며, 아파치 라이선스 버전 2.0 하에서 이용이 가능하다.[5] 온라인은 리소스 할당 기어(gear) 하에서 구동되는 미리 빌드된 카트리지를 통해 다양한 언어, 프레임워크 데이터베이스를 지원한다. 개발자들은 오픈시프트 카트리지 API를 통해 다른 언어, 데이터베이스, 구성 요소를 추가할 수 있다.[6] 오픈시프트 3의 선호로 사용이 권장되지 않는다(deprecated).</p>
<p><code>오픈시프트 데디케이티드(OpenShift Dedicated)</code>는 레드햇의 매니지드 프라이빗 클러스터 기능으로, 도커가 제공하는 애플리케이션 컨테이너의 코어를 기반으로 빌드되며 레드햇 엔터프라이즈 리눅스의 토대 위에 쿠버네티스가 제공하는 오케스트레이션 및 관리가 포함되어 있다. 아마존 웹 서비스(AWS)와 구글 클라우드 플랫폼(GCP) 마켓플레이스를 통해 이용이 가능하다.</p>
<p><code>오픈시프트 컨테이너 플랫폼(OpenShift Container Platform)</code>은 레드햇의 사내(on-premises) 프라이빗 PaaS 제품으로, 도커가 제공하는 애플리케이션 컨테이너의 코어를 기반으로 빌드되며 레드햇 엔터프라이즈 리눅스의 토대 위에 쿠버네티스가 제공하는 오케스트레이션 및 관리가 포함되어 있다.</p>
<p>참고문헌  <a href="https://ko.wikipedia.org/wiki/%EC%98%A4%ED%94%88%EC%8B%9C%ED%94%84%ED%8A%B8" target="_blank" rel="noopener noreffer"><i class="fas fa-link"></i> Openshift </a></p>
<h2 id="2-사전구성">2. 사전구성</h2>
<h3 id="21-dns-구성">2.1. DNS 구성</h3>
<table>
<thead>
<tr>
<th>Common</th>
<th>Component Name</th>
<th>Cluster Name</th>
<th>BaseDomain</th>
<th>A Record</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>api</td>
<td>openshift</td>
<td>vcf.local</td>
<td>10.253.107.254</td>
</tr>
<tr>
<td></td>
<td>api-int</td>
<td>openshift</td>
<td>vcf.local</td>
<td>10.253.107.254</td>
</tr>
<tr>
<td>*</td>
<td>apps</td>
<td>openshift</td>
<td>vcf.local</td>
<td>10.253.107.10</td>
</tr>
<tr>
<td>console-openshift-console</td>
<td>apps</td>
<td>openshift</td>
<td>vcf.local</td>
<td>10.253.107.10</td>
</tr>
<tr>
<td>*</td>
<td>apps</td>
<td>openshift</td>
<td>vcf.local</td>
<td>10.253.107.10</td>
</tr>
<tr>
<td></td>
<td>bootstrap</td>
<td>openshift</td>
<td>vcf.local</td>
<td>10.253.107.10</td>
</tr>
<tr>
<td></td>
<td>master0</td>
<td>openshift</td>
<td>vcf.local</td>
<td>10.253.107.11</td>
</tr>
<tr>
<td></td>
<td>master1</td>
<td>openshift</td>
<td>vcf.local</td>
<td>10.253.107.12</td>
</tr>
<tr>
<td></td>
<td>master2</td>
<td>openshift</td>
<td>vcf.local</td>
<td>10.253.107.13</td>
</tr>
<tr>
<td></td>
<td>worker1</td>
<td>openshift</td>
<td>vcf.local</td>
<td>10.253.107.14</td>
</tr>
<tr>
<td></td>
<td>worker2</td>
<td>openshift</td>
<td>vcf.local</td>
<td>10.253.107.15</td>
</tr>
<tr>
<td></td>
<td>worker3</td>
<td>openshift</td>
<td>vcf.local</td>
<td>10.253.107.16</td>
</tr>
</tbody>
</table>
<figure><figcaption>
            <h4>DNS 구성</h4>
        </figcaption>
</figure>

<h3 id="22-dhcp-구성">2.2. DHCP 구성</h3>
<p>DHCP 구성 - NSXT로 구성을 하였다.</p>
<p><figure><figcaption>
            <h4>DHCP 구성#1</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>DHCP 구성#2</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>DHCP 구성#3</h4>
        </figcaption>
</figure>
</p>
<h2 id="3-파일-다운로드">3. 파일 다운로드</h2>
<p>OC를 다운로드 하기 위해 redhat에 가입 하고 Login 필요</p>
<p>OC 다운로드 링크  <a href="https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/auth?client_id=cloud-services&amp;redirect_uri=https%3A%2F%2Fconsole.redhat.com%2Fopenshift%2Finstall&amp;state=3c149436-35f6-4385-9739-68ad3e7cfb3e&amp;response_mode=fragment&amp;response_type=code&amp;scope=openid&amp;nonce=50b0191c-64a2-4655-81da-8ee6e7665375" target="_blank" rel="noopener noreffer"><i class="fas fa-link"></i> OC 다운로드 링크 </a></p>
<p><figure><figcaption>
            <h4>OC 다운로드#1</h4>
        </figcaption>
</figure>

PullSecret을 저장해 둔다. <figure><figcaption>
            <h4>OC 다운로드#2</h4>
        </figcaption>
</figure>
</p>
<p>압축을 해제 하고 환경변수를 별도로 구성하지 않게 /usr/local/bin 에다가 copy를 한다.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">tar -xzvf openshift-client-linux.tar.gz
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">tar -xzvf openshift-install-linux.tar.gz
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">mv oc kubectl openshift-install /usr/local/bin
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">oc version
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">openshift-install version
</span></span></code></pre></td></tr></table>
</div>
</div><p>sshkeygen을 생성 한다.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">ssh-keygen -t ed25519 -N <span class="s1">&#39;&#39;</span> -f ~/.ssh/id_rsa
</span></span><span class="line"><span class="cl">	
</span></span><span class="line"><span class="cl"><span class="nb">eval</span> <span class="s2">&#34;</span><span class="k">$(</span>ssh-agent -s<span class="k">)</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">ssh-add ~/.ssh/id_rsa
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="4-vcenter-ssh-thumbprint-얻기">4. vCenter SSH thumbprint 얻기</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">openssl s_client -servername vcsa01.vcf.local -connect vcsa01.vcf.local:443 <span class="p">|</span> openssl x509 <span class="p">|</span> tee ca.crt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">cp ca.crt /usr/local/share/ca-certificates/
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">update-ca-certificates
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="5-temp-image">5. Temp Image</h2>
<p><a href="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/" target="_blank" rel="noopener noreffer"><i class="far fa-file-archive fa-fw"></i>&nbsp;RHCOS Download Link</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">wget https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/rhcos-vmware.x86_64.ova
</span></span></code></pre></td></tr></table>
</div>
</div><p>또는 아래와 같이 GUI에서 다운로드 받을 수 있다.</p>
<p><figure><figcaption>
            <h4>RHCOS OVA GUI 다운로드#2</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>RHCOS OVA GUI 다운로드#2</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>RHCOS OVA GUI 다운로드#3</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>RHCOS OVA GUI 다운로드#4</h4>
        </figcaption>
</figure>
</p>
<h3 id="51-temp-구성">5.1. Temp 구성</h3>
<p><figure><figcaption>
            <h4>vSphere Temp Upload#1</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>vSphere Temp Upload#2</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>vSphere Temp Upload#3</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>vSphere Temp Upload#4</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>vSphere Temp Upload#5</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>vSphere Temp Upload#6</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>vSphere Temp Upload#7</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>vSphere Temp Upload#8</h4>
        </figcaption>
</figure>
</p>
<h2 id="6-oc-install">6. OC Install</h2>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>SSL 구성<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>install-config.yaml 참조</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">apiVersion: v1
</span></span><span class="line"><span class="cl">baseDomain: vcf.local
</span></span><span class="line"><span class="cl">compute:
</span></span><span class="line"><span class="cl">- architecture: amd64
</span></span><span class="line"><span class="cl">  hyperthreading: Enabled
</span></span><span class="line"><span class="cl">  name: worker
</span></span><span class="line"><span class="cl">  platform: <span class="o">{}</span>
</span></span><span class="line"><span class="cl">  replicas: <span class="m">3</span>
</span></span><span class="line"><span class="cl">controlPlane:
</span></span><span class="line"><span class="cl">  architecture: amd64
</span></span><span class="line"><span class="cl">  hyperthreading: Enabled
</span></span><span class="line"><span class="cl">  name: master
</span></span><span class="line"><span class="cl">  platform: <span class="o">{}</span>
</span></span><span class="line"><span class="cl">  replicas: <span class="m">3</span>
</span></span><span class="line"><span class="cl">metadata:
</span></span><span class="line"><span class="cl">  creationTimestamp: null
</span></span><span class="line"><span class="cl">  name: ocp
</span></span><span class="line"><span class="cl">networking:
</span></span><span class="line"><span class="cl">  clusterNetwork:
</span></span><span class="line"><span class="cl">  - cidr: 10.128.0.0/14
</span></span><span class="line"><span class="cl">    hostPrefix: <span class="m">23</span>
</span></span><span class="line"><span class="cl">  machineNetwork:
</span></span><span class="line"><span class="cl">  - cidr: 10.0.0.0/16
</span></span><span class="line"><span class="cl">  networkType: OpenShiftSDN
</span></span><span class="line"><span class="cl">  serviceNetwork:
</span></span><span class="line"><span class="cl">  - 172.30.0.0/16
</span></span><span class="line"><span class="cl">platform:
</span></span><span class="line"><span class="cl">  vsphere:
</span></span><span class="line"><span class="cl">    apiVIP: 10.253.107.254
</span></span><span class="line"><span class="cl">    cluster: OBCLUSTER
</span></span><span class="line"><span class="cl">    datacenter: OBDC
</span></span><span class="line"><span class="cl">    defaultDatastore: vsanDatastore
</span></span><span class="line"><span class="cl">    ingressVIP: 10.253.107.253
</span></span><span class="line"><span class="cl">    network: LS-MGMT-10.253.107.x
</span></span><span class="line"><span class="cl">    password: Openbase!234
</span></span><span class="line"><span class="cl">    username: administrator@vsphere.local
</span></span><span class="line"><span class="cl">    vCenter: vcsa01.vcf.local
</span></span><span class="line"><span class="cl">  fips: <span class="nb">false</span>
</span></span><span class="line"><span class="cl">publish: External
</span></span><span class="line"><span class="cl">pullSecret: <span class="s1">&#39;full secret 넣어줘야함&#39;</span>
</span></span><span class="line"><span class="cl">sshKey: <span class="p">|</span>
</span></span><span class="line"><span class="cl">  ssh-ed25519 AAAAC
</span></span></code></pre></td></tr></table>
</div>
</div><p>ocp 실행</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">mkdir ocp
</span></span><span class="line"><span class="cl">cp install-config.yaml ocp
</span></span><span class="line"><span class="cl">openshift-install create install-config --dir<span class="o">=</span>ocp
</span></span></code></pre></td></tr></table>
</div>
</div><p>Manifest 변경</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">openshift-install create manifests --dir ocp
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> ~/ocp/openshift
</span></span><span class="line"><span class="cl">rm -rf 99_openshift-cluster-api_master-*
</span></span><span class="line"><span class="cl">rm -rf 99_openshift-cluster-api_worker-machineset-0.yaml
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> ~/ocp/manifests/
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">vi cluster-scheduler-02-config.yml
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">apiVersion: config.openshift.io/v1
</span></span><span class="line"><span class="cl">kind: Scheduler
</span></span><span class="line"><span class="cl">metadata:
</span></span><span class="line"><span class="cl">  creationTimestamp: null
</span></span><span class="line"><span class="cl">  name: cluster
</span></span><span class="line"><span class="cl">spec:
</span></span><span class="line"><span class="cl">  mastersSchedulable: <span class="nb">false</span>    <span class="c1">### true &gt; false change</span>
</span></span><span class="line"><span class="cl">  policy:
</span></span><span class="line"><span class="cl">    name: <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">status: <span class="o">{}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>ignition 실행</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">openshift-install create ignition-configs --dir ocp
</span></span></code></pre></td></tr></table>
</div>
</div><p>L4 VIP로 설정 필요</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">cat <span class="s">&lt;&lt; EOF | tee append-bootstrap.ign
</span></span></span><span class="line"><span class="cl"><span class="s">{
</span></span></span><span class="line"><span class="cl"><span class="s">  &#34;ignition&#34;: {
</span></span></span><span class="line"><span class="cl"><span class="s">    &#34;config&#34;: {
</span></span></span><span class="line"><span class="cl"><span class="s">      &#34;merge&#34;: [
</span></span></span><span class="line"><span class="cl"><span class="s">        {
</span></span></span><span class="line"><span class="cl"><span class="s">          &#34;source&#34;: &#34;http://10.253.107.254:8080/bootstrap.ign&#34; ## L4 VIP로 변경
</span></span></span><span class="line"><span class="cl"><span class="s">        }
</span></span></span><span class="line"><span class="cl"><span class="s">      ] 
</span></span></span><span class="line"><span class="cl"><span class="s">    },
</span></span></span><span class="line"><span class="cl"><span class="s">    &#34;version&#34;: &#34;3.1.0&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  }
</span></span></span><span class="line"><span class="cl"><span class="s">}
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>BASE64 실행</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">base64 -w0 append-bootstrap.ign &gt; append-bootstrap.64
</span></span><span class="line"><span class="cl">base64 -w0 master.ign &gt; master.64
</span></span><span class="line"><span class="cl">base64 -w0 worker.ign &gt; worker.64
</span></span></code></pre></td></tr></table>
</div>
</div><p>웹 구성에서 파일을 다운로드 할 수 있게 file 폴더 구성 후 ign을 복사 한다.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">mkdir -p /usr/share/nginx/html/files
</span></span><span class="line"><span class="cl">cp *.ign /usr/share/nginx/html/files/
</span></span><span class="line"><span class="cl">chmod <span class="m">644</span> /usr/share/nginx/html/files/*.ign
</span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<h2 id="7-nginx">7. NGINX</h2>
<p>NGINX 설치</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">apt update <span class="o">&amp;&amp;</span> apt upgrade -y
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">make로 설치
</span></span><span class="line"><span class="cl">apt install gcc libpcre3 libpcre3-dev libssl-dev make -y
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">mkdir -p /var/tmp/src <span class="o">&amp;&amp;</span> <span class="nb">cd</span> /var/tmp/src
</span></span><span class="line"><span class="cl">wget http://nginx.org/download/nginx-1.20.2.tar.gz
</span></span><span class="line"><span class="cl">tar -xzf nginx-1.20.2.tar.gz
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> nginx-1.20.2
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">./configure --prefix<span class="o">=</span>/var/www/html --sbin-path<span class="o">=</span>/usr/sbin/nginx --conf-path<span class="o">=</span>/etc/nginx/nginx.conf --http-log-path<span class="o">=</span>/var/log/nginx/access.log --error-log-path<span class="o">=</span>/var/log/nginx/error.log --with-pcre  --lock-path<span class="o">=</span>/var/lock/nginx.lock --pid-path<span class="o">=</span>/var/run/nginx.pid --with-http_ssl_module --with-http_image_filter_module<span class="o">=</span>dynamic --modules-path<span class="o">=</span>/etc/nginx/modules --with-http_v2_module --with-stream<span class="o">=</span>dynamic --with-http_addition_module --with-http_mp4_module --with-stream
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">make
</span></span><span class="line"><span class="cl">make install
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">vi /lib/systemd/system/nginx.service
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>Unit<span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="nv">Description</span><span class="o">=</span>The NGINX HTTP and reverse proxy server
</span></span><span class="line"><span class="cl"><span class="nv">After</span><span class="o">=</span>syslog.target network-online.target remote-fs.target nss-lookup.target
</span></span><span class="line"><span class="cl"><span class="nv">Wants</span><span class="o">=</span>network-online.target
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl"><span class="o">[</span>Service<span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="nv">Type</span><span class="o">=</span>forking
</span></span><span class="line"><span class="cl"><span class="nv">PIDFile</span><span class="o">=</span>/var/run/nginx.pid
</span></span><span class="line"><span class="cl"><span class="nv">ExecStartPre</span><span class="o">=</span>/usr/sbin/nginx -t
</span></span><span class="line"><span class="cl"><span class="nv">ExecStart</span><span class="o">=</span>/usr/sbin/nginx
</span></span><span class="line"><span class="cl"><span class="nv">ExecReload</span><span class="o">=</span>/usr/sbin/nginx -s reload
</span></span><span class="line"><span class="cl"><span class="nv">ExecStop</span><span class="o">=</span>/bin/kill -s QUIT <span class="nv">$MAINPID</span>
</span></span><span class="line"><span class="cl"><span class="nv">PrivateTmp</span><span class="o">=</span><span class="nb">true</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl"><span class="o">[</span>Install<span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="nv">WantedBy</span><span class="o">=</span>multi-user.target
</span></span></code></pre></td></tr></table>
</div>
</div><p>nginx.conf 설정</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1">## 아래 내용 추가</span>
</span></span><span class="line"><span class="cl">vi etc/nginx/nginx.conf 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">worker_processes auto<span class="p">;</span>                    <span class="c1">## 추가  </span>
</span></span><span class="line"><span class="cl">error_log /var/log/nginx/error.log<span class="p">;</span>       <span class="c1">## 추가</span>
</span></span><span class="line"><span class="cl">pid /run/nginx.pid<span class="p">;</span>                       <span class="c1">## 추가</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">include /etc/nginx/stream.conf.d/*.conf<span class="p">;</span>  <span class="c1">## 추가</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">http <span class="o">{</span>
</span></span><span class="line"><span class="cl">    include       mime.types<span class="p">;</span>
</span></span><span class="line"><span class="cl">    default_type  application/octet-stream<span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    log_format  main  <span class="s1">&#39;$remote_addr - $remote_user [$time_local] &#34;$request&#34; &#39;</span>
</span></span><span class="line"><span class="cl">                      <span class="s1">&#39;$status $body_bytes_sent &#34;$http_referer&#34; &#39;</span>
</span></span><span class="line"><span class="cl">                      <span class="s1">&#39;&#34;$http_user_agent&#34; &#34;$http_x_forwarded_for&#34;&#39;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    access_log  logs/access.log  main<span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    sendfile        on<span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#tcp_nopush     on;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">#keepalive_timeout  0;</span>
</span></span><span class="line"><span class="cl">    keepalive_timeout  65<span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">#gzip  on;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    server <span class="o">{</span>
</span></span><span class="line"><span class="cl">        listen       8081<span class="p">;</span>
</span></span><span class="line"><span class="cl">        server_name  localhost<span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        location / <span class="o">{</span>
</span></span><span class="line"><span class="cl">            root   html<span class="p">;</span>
</span></span><span class="line"><span class="cl">            index  index.html index.htm<span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        error_page   <span class="m">500</span> <span class="m">502</span> <span class="m">503</span> <span class="m">504</span>  /50x.html<span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">location</span> <span class="o">=</span> /50x.html <span class="o">{</span>
</span></span><span class="line"><span class="cl">            root   html<span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">    include /etc/nginx/conf.d/*.conf<span class="p">;</span>   <span class="c1">## 추가</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>웹 구성</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">cat <span class="s">&lt;&lt; EOF | tee /etc/nginx/conf.d/openshift.conf
</span></span></span><span class="line"><span class="cl"><span class="s">server {
</span></span></span><span class="line"><span class="cl"><span class="s">    listen       8080;
</span></span></span><span class="line"><span class="cl"><span class="s">    server_name  localhost;
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">    location / {
</span></span></span><span class="line"><span class="cl"><span class="s">        root   /usr/share/nginx/html/files;
</span></span></span><span class="line"><span class="cl"><span class="s">        autoindex on;
</span></span></span><span class="line"><span class="cl"><span class="s">    }
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">    error_page   500 502 503 504  /50x.html;
</span></span></span><span class="line"><span class="cl"><span class="s">    location = /50x.html {
</span></span></span><span class="line"><span class="cl"><span class="s">        root   /usr/share/nginx/html;
</span></span></span><span class="line"><span class="cl"><span class="s">    }
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">}
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>nginx 테스트 및 실행</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">nginx -t
</span></span><span class="line"><span class="cl">systemctl restart nginx
</span></span><span class="line"><span class="cl">systemctl <span class="nb">enable</span> nginx
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>NGINX 확인</h4>
        </figcaption>
</figure>

<h2 id="8-temp-이미지로-vm-구성">8. Temp 이미지로 VM 구성</h2>
<p><code>Temp를 활용하여 bootstrap , master 3개 , worker 3개를 배포한다.</code></p>
<p><figure><figcaption>
            <h4>Image 구성#1</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Image 구성#2</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>Image 구성#3</h4>
        </figcaption>
</figure>

base64로 변경한 값을 여기서 넣어 준다.
bootstrap : cat append-bootstrap.64 , 마스터 : cat master.64 , Worker : cat worker.64 의 값을 넣어 주면 됨
<figure><figcaption>
            <h4>Image 구성#4</h4>
        </figcaption>
</figure>
</p>
<h2 id="9-l4-구성">9. L4 구성</h2>
<p><code>L4장비가 없을 경우 / L4장비가 있을 경우를 생각해서 NGINX도 포함 시킴</code></p>
<h3 id="91-nsxt-l4-구성">9.1. NSXT L4 구성</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1">## 설명</span>
</span></span><span class="line"><span class="cl">ocp_8080 : jumphost <span class="o">(</span>nginx에서 파일을 땡기기 위해 구성<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 배포 완료 후 bootstrap은 삭제 해도 됨</span>
</span></span><span class="line"><span class="cl">ocp-master-and-boot-machine-22623 : bootstrap 및 master
</span></span><span class="line"><span class="cl">ocp_master-and-boot-api-6443: bootstrap 및 master
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## Openshift는 Route를사용 하기 때문에 설정</span>
</span></span><span class="line"><span class="cl">ocp_443, ocp_80 : master 및 worker
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><figcaption>
            <h4>L4 구성#1</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>L4 구성#2</h4>
        </figcaption>
</figure>
</p>
<h3 id="92-nginx-l4-구성">9.2. NGINX L4 구성</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## LB 설정</span>
</span></span><span class="line"><span class="cl">cat <span class="s">&lt;&lt; EOF | tee /etc/nginx/stream.conf.d/lb.conf
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">stream{
</span></span></span><span class="line"><span class="cl"><span class="s">    upstream ocp_k8s_api {
</span></span></span><span class="line"><span class="cl"><span class="s">        #round-robin;
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.10:6443; #bootstrap
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.11:6443; #master1
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.12:6443; #master2
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.13:6443; #master3
</span></span></span><span class="line"><span class="cl"><span class="s">    }
</span></span></span><span class="line"><span class="cl"><span class="s">    server {
</span></span></span><span class="line"><span class="cl"><span class="s">        listen 6443;
</span></span></span><span class="line"><span class="cl"><span class="s">        proxy_pass ocp_k8s_api;
</span></span></span><span class="line"><span class="cl"><span class="s">    }
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">    upstream ocp_m_config {
</span></span></span><span class="line"><span class="cl"><span class="s">        #round-robin;
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.10:22623; #bootstrap
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.11:22623; #master1
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.12:22623; #master2
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.13:22623; #master3
</span></span></span><span class="line"><span class="cl"><span class="s">    }
</span></span></span><span class="line"><span class="cl"><span class="s">    server {
</span></span></span><span class="line"><span class="cl"><span class="s">        listen 22623;
</span></span></span><span class="line"><span class="cl"><span class="s">        proxy_pass ocp_m_config;
</span></span></span><span class="line"><span class="cl"><span class="s">    }
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">    upstream ocp_http {
</span></span></span><span class="line"><span class="cl"><span class="s">        #round-robin;
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.11:80; #master1
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.12:80; #master2
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.13:80; #master3
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.14:80; #worker1
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.15:80; #worker2
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.16:80; #worker3
</span></span></span><span class="line"><span class="cl"><span class="s">    }
</span></span></span><span class="line"><span class="cl"><span class="s">    server{
</span></span></span><span class="line"><span class="cl"><span class="s">        listen 80;
</span></span></span><span class="line"><span class="cl"><span class="s">        proxy_pass ocp_http;
</span></span></span><span class="line"><span class="cl"><span class="s">    }
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">    upstream ocp_https {
</span></span></span><span class="line"><span class="cl"><span class="s">        #round-robin;
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.11:443; #master1
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.12:443; #master2
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.13:443; #master3
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.14:443; #worker1
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.15:443; #worker2
</span></span></span><span class="line"><span class="cl"><span class="s">        server 10.253.107.16:443; #worker3   
</span></span></span><span class="line"><span class="cl"><span class="s">    }
</span></span></span><span class="line"><span class="cl"><span class="s">    server{
</span></span></span><span class="line"><span class="cl"><span class="s">        listen 443;
</span></span></span><span class="line"><span class="cl"><span class="s">        proxy_pass ocp_https;
</span></span></span><span class="line"><span class="cl"><span class="s">    }
</span></span></span><span class="line"><span class="cl"><span class="s">}
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## nginx restart</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">nginx -t
</span></span><span class="line"><span class="cl">systemctl restart nginx
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="10-완료-후-확인">10. 완료 후 확인</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">KUBECONFIG</span><span class="o">=</span>&lt;installation_directory&gt;/auth/kubeconfig
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">예시
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">KUBECONFIG</span><span class="o">=</span>~/ocp/auth/kubeconfig
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">oc whoami
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">oc get clusterversion
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>완료#1</h4>
        </figcaption>
</figure>

<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">oc get clusteroperators
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">oc describe clusterversion
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">oc get clusterversion -o jsonpath=&#39;{.items[0].spec}{&#34;\n&#34;}&#39;
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><figcaption>
            <h4>완료#2</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>완료#3</h4>
        </figcaption>
</figure>
</p>
<h2 id="11-new-worker-node-add">11. New Worker Node Add</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1">## PENDING 확인</span>
</span></span><span class="line"><span class="cl">kubectl get csr
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## PENDING 확인 후 적용</span>
</span></span><span class="line"><span class="cl">oc adm certificate approve csr-bghmp csr-hd9x8 csr-hlngb
</span></span><span class="line"><span class="cl">oc adm certificate approve csr-gpgv9 csr-n6lqm csr-zfws6 
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>worker Node 추가</h4>
        </figcaption>
</figure>

<h2 id="12-계정">12. 계정</h2>
<p>Local 또는 AD을 통해 계정을 관리 할 수 있다.</p>
<h3 id="121-local-계정-생성">12.1. Local 계정 생성</h3>
<p>아래는 htpasswd를 사용 하는 방법의 대해서 구성 한다.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1">## 우분투</span>
</span></span><span class="line"><span class="cl">apt install apache2-utils -y
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 유저 정보</span>
</span></span><span class="line"><span class="cl"><span class="c1"># htpasswd -Bbc htpasswd {username} &#39;{password}&#39;</span>
</span></span><span class="line"><span class="cl">$ htpasswd -Bbc htpasswd my1208 <span class="s1">&#39;Passw0rd&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">cat htpasswd
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">oc --user<span class="o">=</span>admin create secret generic htpasswd <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    --from-file<span class="o">=</span>htpasswd -n openshift-config
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">oc get secret -n openshift-config
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><figcaption>
            <h4>유저 추가</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>secret 확인</h4>
        </figcaption>
</figure>
</p>
<p>secret 추가</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">cat <span class="s">&lt;&lt; EOF | tee oauth-config.yaml
</span></span></span><span class="line"><span class="cl"><span class="s"># oauth-config.yaml
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: config.openshift.io/v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: OAuth
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: cluster
</span></span></span><span class="line"><span class="cl"><span class="s">spec:
</span></span></span><span class="line"><span class="cl"><span class="s">  identityProviders:
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: Local Password
</span></span></span><span class="line"><span class="cl"><span class="s">    mappingMethod: claim
</span></span></span><span class="line"><span class="cl"><span class="s">    type: HTPasswd
</span></span></span><span class="line"><span class="cl"><span class="s">    htpasswd:
</span></span></span><span class="line"><span class="cl"><span class="s">      fileData:
</span></span></span><span class="line"><span class="cl"><span class="s">        name: htpasswd
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">oc replace -f oauth-config.yaml
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## shows current user</span>
</span></span><span class="line"><span class="cl">oc whoami
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## shows cluster web console URL</span>
</span></span><span class="line"><span class="cl">oc whoami --show-console
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## shows cluster API URL</span>
</span></span><span class="line"><span class="cl">oc whoami --show-server
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## shows current OAuth token</span>
</span></span><span class="line"><span class="cl">oc whoami --show-token
</span></span></code></pre></td></tr></table>
</div>
</div><p><figure><figcaption>
            <h4>GUI 접속#1</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>GUI 접속#2</h4>
        </figcaption>
</figure>
</p>
<h3 id="122-ad-연동">12.2. AD 연동</h3>
<p>LDPAS를 구성하기 위한 configmap 생성</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">oc create configmap ca-config-map --from-file=ca.crt=/path/to/ca -n openshift-config
</span></span></code></pre></td></tr></table>
</div>
</div><p>만약 LDAPS로 구성을 하지 않았으면 insecure: true, ca 항목을 삭제, url을 ldap으로 변경을 해주면 된다.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">oc apply -n openshift-config -f - <span class="s">&lt;&lt; EOF
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: config.openshift.io/v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: OAuth
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: cluster
</span></span></span><span class="line"><span class="cl"><span class="s">spec:
</span></span></span><span class="line"><span class="cl"><span class="s">  identityProviders:
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: ldapidp
</span></span></span><span class="line"><span class="cl"><span class="s">    mappingMethod: claim
</span></span></span><span class="line"><span class="cl"><span class="s">    type: LDAP
</span></span></span><span class="line"><span class="cl"><span class="s">    ldap:
</span></span></span><span class="line"><span class="cl"><span class="s">      attributes:
</span></span></span><span class="line"><span class="cl"><span class="s">        id:
</span></span></span><span class="line"><span class="cl"><span class="s">        - dn
</span></span></span><span class="line"><span class="cl"><span class="s">        email:
</span></span></span><span class="line"><span class="cl"><span class="s">        - mail
</span></span></span><span class="line"><span class="cl"><span class="s">        name:
</span></span></span><span class="line"><span class="cl"><span class="s">        - sAMAccountName
</span></span></span><span class="line"><span class="cl"><span class="s">        preferredUsername:
</span></span></span><span class="line"><span class="cl"><span class="s">        - sAMAccountName
</span></span></span><span class="line"><span class="cl"><span class="s">      bindDN: cn=administrator,cn=users,dc=tkg,dc=io
</span></span></span><span class="line"><span class="cl"><span class="s">      bindPassword:
</span></span></span><span class="line"><span class="cl"><span class="s">        name: ldap-secret
</span></span></span><span class="line"><span class="cl"><span class="s">      ca:
</span></span></span><span class="line"><span class="cl"><span class="s">        name: ca-config-map
</span></span></span><span class="line"><span class="cl"><span class="s">      insecure: false
</span></span></span><span class="line"><span class="cl"><span class="s">      url: &#34;ldaps://tanzu-dns.tkg.io/ou=tanzu,dc=tkg,dc=io?sAMAccountName&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>GUI 접속</h4>
        </figcaption>
</figure>

<h3 id="123-수동-group-sync">12.3. 수동 GROUP-SYNC</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">vi ldapsync.yaml
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># LDAP is case insensitive, but OpenShift is not, so all LDAP parameters have been converted to lower case as per https://access.redhat.com/solutions/3232051 (under &#34;Case Sensitivity&#34;)</span>
</span></span><span class="line"><span class="cl">kind: LDAPSyncConfig
</span></span><span class="line"><span class="cl">apiVersion: v1
</span></span><span class="line"><span class="cl">url: ldaps://tanzu-dns.tkg.io:636
</span></span><span class="line"><span class="cl">insecure: <span class="nb">false</span>
</span></span><span class="line"><span class="cl">ca: <span class="s2">&#34;/data/cert/ldapserver.pem&#34;</span>                       <span class="c1">### ldaps 인증서의 실제 위치 / 파일</span>
</span></span><span class="line"><span class="cl">bindDN: <span class="nv">cn</span><span class="o">=</span>administrator,cn<span class="o">=</span>users,dc<span class="o">=</span>tkg,dc<span class="o">=</span>io
</span></span><span class="line"><span class="cl">bindPassword: <span class="s2">&#34;Password&#34;</span>
</span></span><span class="line"><span class="cl">rfc2307:
</span></span><span class="line"><span class="cl">   groupsQuery:
</span></span><span class="line"><span class="cl">       baseDN: <span class="s2">&#34;ou=tanzu,dc=tkg,dc=io&#34;</span>
</span></span><span class="line"><span class="cl">       scope: sub
</span></span><span class="line"><span class="cl">       filter: <span class="o">(</span><span class="nv">objectClass</span><span class="o">=</span>group<span class="o">)</span>
</span></span><span class="line"><span class="cl">       derefAliases: never
</span></span><span class="line"><span class="cl">       timeout: <span class="m">0</span>
</span></span><span class="line"><span class="cl">       pageSize: <span class="m">0</span>
</span></span><span class="line"><span class="cl">   groupUIDAttribute: dn
</span></span><span class="line"><span class="cl">   groupNameAttributes: <span class="o">[</span> cn <span class="o">]</span>
</span></span><span class="line"><span class="cl">   groupMembershipAttributes: <span class="o">[</span> member <span class="o">]</span>
</span></span><span class="line"><span class="cl">   usersQuery:
</span></span><span class="line"><span class="cl">       basedn: <span class="s2">&#34;ou=tanzu,dc=tkg,dc=io&#34;</span>
</span></span><span class="line"><span class="cl">       scope: sub
</span></span><span class="line"><span class="cl">       derefAliases: never
</span></span><span class="line"><span class="cl">       pageSize: <span class="m">0</span>
</span></span><span class="line"><span class="cl">   userUIDAttribute: dn
</span></span><span class="line"><span class="cl">   userNameAttributes: <span class="o">[</span> cn <span class="o">]</span>
</span></span><span class="line"><span class="cl">   tolerateMemberNotFoundErrors: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">   tolerateMemberOutOfScopeErrors: <span class="nb">true</span>
</span></span><span class="line"><span class="cl">   
</span></span><span class="line"><span class="cl"><span class="c1">## 적용전 제대로 받아오는지 확인을 한다.</span>
</span></span><span class="line"><span class="cl">oc adm groups sync --sync-config<span class="o">=</span>ldapsync.yaml
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 확인이 끝나면 적용한다.</span>
</span></span><span class="line"><span class="cl">oc adm groups sync --sync-config<span class="o">=</span>ldapsync.yaml --confirm
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 권한 설정</span>
</span></span><span class="line"><span class="cl">oc adm policy add-cluster-role-to-group cluster-admin tkg
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 권한 삭제</span>
</span></span><span class="line"><span class="cl">oc adm policy remove-cluster-role-from-group cluster-admin tkg
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>GROUP 확인 및 적용</h4>
        </figcaption>
</figure>

<h3 id="124-cronjob-group-sync">12.4 CronJob Group-Sync</h3>
<p>위에서 LDAP을 연동 하였다면 cm , secret 이 생성 된 것을 확인 할 수 있다.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1">## password 이름 확인</span>
</span></span><span class="line"><span class="cl"><span class="nv">password</span><span class="o">=</span><span class="sb">`</span>oc get secret -n openshift-authentication <span class="p">|</span> grep v4-0-config-user-idp-0 <span class="p">|</span> awk <span class="s1">&#39;{print $1}&#39;</span><span class="sb">`</span>
</span></span><span class="line"><span class="cl">oc get secret -n openshift-authentication <span class="nv">$password</span>  -o <span class="nv">jsonpath</span><span class="o">={</span>.data<span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 인증서 이름 확인</span>
</span></span><span class="line"><span class="cl"><span class="nv">ca</span><span class="o">=</span><span class="sb">`</span>oc get cm -n openshift-authentication <span class="p">|</span> grep v4-0-config-user <span class="p">|</span> awk <span class="s1">&#39;{print $1}&#39;</span><span class="sb">`</span>
</span></span><span class="line"><span class="cl">oc get cm -n openshift-authentication <span class="nv">$ca</span> -o <span class="nv">jsonpath</span><span class="o">={</span>.items<span class="o">[</span>0<span class="o">]</span>.data<span class="o">}</span> <span class="p">|</span> awk <span class="s1">&#39;{print $1}&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>그리고 계정 및 권한 설정을 해준다.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">cat <span class="s">&lt;&lt; EOF | tee ldap-sync-sa-clusterrole.yaml
</span></span></span><span class="line"><span class="cl"><span class="s">kind: ServiceAccount
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: v1
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: ldap-group-syncer
</span></span></span><span class="line"><span class="cl"><span class="s">  namespace: openshift-authentication
</span></span></span><span class="line"><span class="cl"><span class="s">  labels:
</span></span></span><span class="line"><span class="cl"><span class="s">    app: cronjob-ldap-group-sync
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">kind: ServiceAccount
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: v1
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: ldap-group-syncer
</span></span></span><span class="line"><span class="cl"><span class="s">  namespace: openshift-authentication
</span></span></span><span class="line"><span class="cl"><span class="s">  labels:
</span></span></span><span class="line"><span class="cl"><span class="s">    app: cronjob-ldap-group-sync
</span></span></span><span class="line"><span class="cl"><span class="s">root@ubuntu:/var/tmp/oc/ldaps#
</span></span></span><span class="line"><span class="cl"><span class="s">root@ubuntu:/var/tmp/oc/ldaps# cat clusterrole.yaml
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: rbac.authorization.k8s.io/v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: ClusterRole
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: ldap-group-syncer
</span></span></span><span class="line"><span class="cl"><span class="s">  labels:
</span></span></span><span class="line"><span class="cl"><span class="s">    app: cronjob-ldap-group-sync
</span></span></span><span class="line"><span class="cl"><span class="s">rules:
</span></span></span><span class="line"><span class="cl"><span class="s">  - apiGroups:
</span></span></span><span class="line"><span class="cl"><span class="s">      - &#39;&#39;
</span></span></span><span class="line"><span class="cl"><span class="s">      - user.openshift.io
</span></span></span><span class="line"><span class="cl"><span class="s">    resources:
</span></span></span><span class="line"><span class="cl"><span class="s">      - groups
</span></span></span><span class="line"><span class="cl"><span class="s">    verbs:
</span></span></span><span class="line"><span class="cl"><span class="s">      - get
</span></span></span><span class="line"><span class="cl"><span class="s">      - list
</span></span></span><span class="line"><span class="cl"><span class="s">      - create
</span></span></span><span class="line"><span class="cl"><span class="s">      - update
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">kind: ClusterRoleBinding
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: rbac.authorization.k8s.io/v1
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: ldap-group-syncer
</span></span></span><span class="line"><span class="cl"><span class="s">  labels:
</span></span></span><span class="line"><span class="cl"><span class="s">    app: cronjob-ldap-group-sync
</span></span></span><span class="line"><span class="cl"><span class="s">subjects:
</span></span></span><span class="line"><span class="cl"><span class="s">  - kind: ServiceAccount
</span></span></span><span class="line"><span class="cl"><span class="s">    name: ldap-group-syncer
</span></span></span><span class="line"><span class="cl"><span class="s">    namespace: openshift-authentication
</span></span></span><span class="line"><span class="cl"><span class="s">roleRef:
</span></span></span><span class="line"><span class="cl"><span class="s">  apiGroup: rbac.authorization.k8s.io
</span></span></span><span class="line"><span class="cl"><span class="s">  kind: ClusterRole
</span></span></span><span class="line"><span class="cl"><span class="s">  name: ldap-group-syncer
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>LDAP의 자동 Sync를 구성하기 위해 config-map 및 job 설정
witelist / balcklist의 경우 ldapsearch에서 distinguishedName: CN=test test,OU=tanzu,DC=tkg,DC=io 이부분의 이름으로 넣어야함. , 만약 별도로 witelist / blacklist가 필요 없으면 제거 해도 된다.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">cat <span class="s">&lt;&lt; EOF | tee ldap-sync-cm-cron.yaml
</span></span></span><span class="line"><span class="cl"><span class="s">kind: ConfigMap
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: v1
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: ldap-group-syncer
</span></span></span><span class="line"><span class="cl"><span class="s">  namespace: openshift-authentication
</span></span></span><span class="line"><span class="cl"><span class="s">  labels:
</span></span></span><span class="line"><span class="cl"><span class="s">    app: cronjob-ldap-group-sync
</span></span></span><span class="line"><span class="cl"><span class="s">data:
</span></span></span><span class="line"><span class="cl"><span class="s">  ldap-group-sync.yaml: |
</span></span></span><span class="line"><span class="cl"><span class="s">    kind: LDAPSyncConfig
</span></span></span><span class="line"><span class="cl"><span class="s">    apiVersion: v1
</span></span></span><span class="line"><span class="cl"><span class="s">    url: ldaps://tanzu-dns.tkg.io
</span></span></span><span class="line"><span class="cl"><span class="s">    bindDN: cn=administrator,cn=users,dc=tkg,dc=io
</span></span></span><span class="line"><span class="cl"><span class="s">    bindPassword:
</span></span></span><span class="line"><span class="cl"><span class="s">      file: &#34;/etc/secrets/bindPassword&#34;                   ## 위에서 설명한 secret, cronjob에서 voluemount 후 적용
</span></span></span><span class="line"><span class="cl"><span class="s">    insecure: false
</span></span></span><span class="line"><span class="cl"><span class="s">    ca: &#34;/ldap-sync/ca/ca.crt&#34;                            ## 위에서 설명한 configmap, cronjob에서 voluemount 후 적용
</span></span></span><span class="line"><span class="cl"><span class="s">    rfc2307:
</span></span></span><span class="line"><span class="cl"><span class="s">        groupsQuery:
</span></span></span><span class="line"><span class="cl"><span class="s">            baseDN: &#34;ou=tanzu,dc=tkg,dc=io&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">            scope: sub
</span></span></span><span class="line"><span class="cl"><span class="s">            derefAliases: never
</span></span></span><span class="line"><span class="cl"><span class="s">            filter: (objectclass=group)
</span></span></span><span class="line"><span class="cl"><span class="s">        groupUIDAttribute: dn
</span></span></span><span class="line"><span class="cl"><span class="s">        groupNameAttributes: [ cn ]
</span></span></span><span class="line"><span class="cl"><span class="s">        groupMembershipAttributes: [ member ]
</span></span></span><span class="line"><span class="cl"><span class="s">        usersQuery:
</span></span></span><span class="line"><span class="cl"><span class="s">            baseDN: &#34;ou=tanzu,dc=tkg,dc=io&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">            scope: sub
</span></span></span><span class="line"><span class="cl"><span class="s">            derefAliases: never
</span></span></span><span class="line"><span class="cl"><span class="s">            pageSize: 0
</span></span></span><span class="line"><span class="cl"><span class="s">        userUIDAttribute: dn
</span></span></span><span class="line"><span class="cl"><span class="s">        userNameAttributes: [ sAMAccountName ]
</span></span></span><span class="line"><span class="cl"><span class="s">        tolerateMemberNotFoundErrors: true
</span></span></span><span class="line"><span class="cl"><span class="s">        tolerateMemberOutOfScopeErrors: true
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">kind: ConfigMap
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: v1
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: ldap-group-syncer-whitelist
</span></span></span><span class="line"><span class="cl"><span class="s">  namespace: openshift-authentication
</span></span></span><span class="line"><span class="cl"><span class="s">  labels:
</span></span></span><span class="line"><span class="cl"><span class="s">    app: cronjob-ldap-group-sync
</span></span></span><span class="line"><span class="cl"><span class="s">data:
</span></span></span><span class="line"><span class="cl"><span class="s">  whitelist.txt: |
</span></span></span><span class="line"><span class="cl"><span class="s">    CN=kim dokyung,OU=tanzu,DC=tkg,DC=io
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">kind: ConfigMap
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: v1
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: ldap-group-syncer-blacklist
</span></span></span><span class="line"><span class="cl"><span class="s">  namespace: openshift-authentication
</span></span></span><span class="line"><span class="cl"><span class="s">  labels:
</span></span></span><span class="line"><span class="cl"><span class="s">    app: cronjob-ldap-group-sync
</span></span></span><span class="line"><span class="cl"><span class="s">data:
</span></span></span><span class="line"><span class="cl"><span class="s">  blacklist.txt: |
</span></span></span><span class="line"><span class="cl"><span class="s">    CN=tkg,OU=tanzu,DC=tkg,DC=io
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">kind: CronJob
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: batch/v1beta1
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: ldap-group-syncer
</span></span></span><span class="line"><span class="cl"><span class="s">  namespace: openshift-authentication
</span></span></span><span class="line"><span class="cl"><span class="s">  labels:
</span></span></span><span class="line"><span class="cl"><span class="s">    app: cronjob-ldap-group-sync
</span></span></span><span class="line"><span class="cl"><span class="s">spec:
</span></span></span><span class="line"><span class="cl"><span class="s">  schedule: &#34;*/1 * * * *&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  concurrencyPolicy: Forbid
</span></span></span><span class="line"><span class="cl"><span class="s">  successfulJobsHistoryLimit: 5
</span></span></span><span class="line"><span class="cl"><span class="s">  failedJobsHistoryLimit: 5
</span></span></span><span class="line"><span class="cl"><span class="s">  jobTemplate:
</span></span></span><span class="line"><span class="cl"><span class="s">    metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">      labels:
</span></span></span><span class="line"><span class="cl"><span class="s">        app: cronjob-ldap-group-sync
</span></span></span><span class="line"><span class="cl"><span class="s">    spec:
</span></span></span><span class="line"><span class="cl"><span class="s">      backoffLimit: 0
</span></span></span><span class="line"><span class="cl"><span class="s">      template:
</span></span></span><span class="line"><span class="cl"><span class="s">        metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">          labels:
</span></span></span><span class="line"><span class="cl"><span class="s">            app: cronjob-ldap-group-sync
</span></span></span><span class="line"><span class="cl"><span class="s">        spec:
</span></span></span><span class="line"><span class="cl"><span class="s">          containers:
</span></span></span><span class="line"><span class="cl"><span class="s">            - name: ldap-group-sync
</span></span></span><span class="line"><span class="cl"><span class="s">              image: &#34;registry.redhat.io/openshift4/ose-cli:v4.7&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">              command:
</span></span></span><span class="line"><span class="cl"><span class="s">                - &#34;/bin/bash&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">                - &#34;-c&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">                - oc adm groups sync --whitelist=/etc/whitelist/whitelist.txt --blacklist=/etc/blacklist/blacklist.txt --sync-config=/etc/config/ldap-group-sync.yaml --confirm
</span></span></span><span class="line"><span class="cl"><span class="s">              volumeMounts:
</span></span></span><span class="line"><span class="cl"><span class="s">                - mountPath: &#34;/etc/blacklist&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">                  name: &#34;ldap-sync-volume-blacklist&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">                - mountPath: &#34;/etc/whitelist&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">                  name: &#34;ldap-sync-volume-whitelist&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">                - mountPath: &#34;/etc/config&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">                  name: &#34;ldap-sync-volume&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">                - mountPath: &#34;/etc/secrets&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">                  name: &#34;ldap-bind-password&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">                - mountPath: &#34;/ldap-sync/ca&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">                  name: &#34;ldap-sync-ca&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">          volumes:
</span></span></span><span class="line"><span class="cl"><span class="s">            - name: &#34;ldap-sync-volume-blacklist&#34;                  ## volumes을 모두 연결하여 assign
</span></span></span><span class="line"><span class="cl"><span class="s">              configMap:
</span></span></span><span class="line"><span class="cl"><span class="s">                name: &#34;ldap-group-syncer-blacklist&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">            - name: &#34;ldap-sync-volume-whitelist&#34;                  ## volumes을 모두 연결하여 assign
</span></span></span><span class="line"><span class="cl"><span class="s">              configMap:
</span></span></span><span class="line"><span class="cl"><span class="s">                name: &#34;ldap-group-syncer-whitelist&#34;           
</span></span></span><span class="line"><span class="cl"><span class="s">            - name: &#34;ldap-sync-volume&#34;                            ## volumes을 모두 연결하여 assign
</span></span></span><span class="line"><span class="cl"><span class="s">              configMap:
</span></span></span><span class="line"><span class="cl"><span class="s">                name: &#34;ldap-group-syncer&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">            - name: &#34;ldap-sync-ca&#34;                                ## volumes을 모두 연결하여 assign
</span></span></span><span class="line"><span class="cl"><span class="s">              configMap:
</span></span></span><span class="line"><span class="cl"><span class="s">                name: &#34;v4-0-config-user-idp-0-ca&#34; 
</span></span></span><span class="line"><span class="cl"><span class="s">            - name: &#34;ldap-bind-password&#34;                          ## volumes을 모두 연결하여 assign
</span></span></span><span class="line"><span class="cl"><span class="s">              secret:
</span></span></span><span class="line"><span class="cl"><span class="s">                secretName: &#34;v4-0-config-user-idp-0-bind-password&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">          restartPolicy: &#34;Never&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">          terminationGracePeriodSeconds: 30
</span></span></span><span class="line"><span class="cl"><span class="s">          activeDeadlineSeconds: 500
</span></span></span><span class="line"><span class="cl"><span class="s">          dnsPolicy: &#34;ClusterFirst&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">          serviceAccountName: &#34;ldap-group-syncer&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">          serviceAccount: &#34;ldap-group-syncer&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>이후에 자동으로 싱크가 되는 것을 알수 있다. 만약에 그룹을 추가 했는대 그 그룹만 막고 싶으면 blacklist, 또는 기존에 있는 것만 하고 자동 싱크 하고 싶으면 witelist를 적용 하면된다. 
흠 생각에는 그냥 witelist 방식으로만 적용하면 될 것으로 보인다. 만약에 필요 하다면 필요 없이 모든 그룹을 자동 싱크 하겠따면 witelist / blaklist는 필요 없다.</p>
<p>자동 싱크가 되었으면 해당하는 그룹에 권한을 준다.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1">## 권한 설정</span>
</span></span><span class="line"><span class="cl">oc adm policy add-cluster-role-to-group cluster-admin tkg
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">## 권한 삭제</span>
</span></span><span class="line"><span class="cl">oc adm policy remove-cluster-role-from-group cluster-admin tkg
</span></span></code></pre></td></tr></table>
</div>
</div><figure><figcaption>
            <h4>자동 sync 구성 완료</h4>
        </figcaption>
</figure>

]]></description>
</item><item>
    <title>The Documentation CICD</title>
    <link>https://huntedhappy.github.io/ko/cicd/</link>
    <pubDate>Tue, 11 Jan 2022 23:46:01 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://huntedhappy.github.io/ko/cicd/</guid>
    <description><![CDATA[<p>간단하게 CICD의 대해 구성 하는 것을 기술 할 예정
사용자가 VS를 사용하여 Docker 내용을 수정 후 Git에 Push를 하면 Jenkins에서 5분에 한번씩 Polling을 하여 Git에 변화가 있으면 Pipeline이 동작 하면서 자동으로 Docker Build를 수행 후 Harbor에 이미지를 Push 후 새로운 이미지의 대한 Version을 Manifest의 변경 하여 다시 Git에 Push, 이후 3분에 한번씩 Argo가 Git의 내용의 변화가 있는지 확인 후 변화가 있으면 K8S의 환경의 Manifest를 적용</p>
]]></description>
</item><item>
    <title>The Documentation K8s</title>
    <link>https://huntedhappy.github.io/ko/k8s/</link>
    <pubDate>Sat, 08 Jan 2022 14:32:33 &#43;0900</pubDate>
    <author>Author</author>
    <guid>https://huntedhappy.github.io/ko/k8s/</guid>
    <description><![CDATA[<p>아래 내용을 작성 하는 이유
같이 일했던 동료가 다른 곳으로 회사를 이직 하고 나서 컨테이너를 해야 되는거 같았다. 같이 일을 했기 때문에 L4 / L7을 잘 했던 친구 였다. 그런대 뜬금없이 L4를 연동 하면 어떻게 컨테이너로 트래픽을 전달하냐라고 물어본적이 있었다. 
그래서 혹시 모르는 사람을 위해서 간략하게 적어 내려 간다.</p>
<h2 id="1-service-type">1. Service Type</h2>
<p>컨테이너를 하기 위해서는 우선 Deploy , STS등으로 Pod를 생성한다. 그럼 일반적으로 테스트를 하기 위해서 아래와 같이 명령어를 칠 것이다.</p>
<ul>
<li>kubectl create deploy nginx &ndash;image=nginx -n nginx</li>
</ul>
<p>그러면 deploy를 통해 pod가 생성 된 것을 확인 할 수 있다. 그리고 나서 서비스를 연동 할 것이다. 그럼 아래와 같은 명령어를 칠 것이다.</p>
<ul>
<li>kubectl expose deploy nginx &ndash;port=80 &ndash;target-port=80 &ndash;type=ClusterIP -n nginx</li>
</ul>
<p>ClusterIP는 그럼 아래와 같은 정보를 보게 될 것이다.</p>
<figure><figcaption>
            <h4>svc ClusterIP상태</h4>
        </figcaption>
</figure>

<p>NodePort는 아래처럼 정보를 보게 된다.</p>
<ul>
<li>kubectl expose deploy nginx &ndash;port=80 &ndash;target-port=80 &ndash;type=NodePort -n nginx</li>
</ul>
<figure><figcaption>
            <h4>svc NodePort상태</h4>
        </figcaption>
</figure>

<p>그럼 보는바와 같이 차이가 좀 있는 것을 알 수 있다.
NodePort를 하게 될 경우 아래와 같이 30000대의 Port를 확인 할 수 있을 것이다.</p>
<h2 id="l4연동-후-nodeport">L4연동 후 NodePort</h2>
<p>그럼 만약에 L4장비와 연결을 하게 되면 어떻게 보이게 될까? 아래 그림으로 한번 확인을 해보자</p>
<ul>
<li>kubectl expose deploy nginx &ndash;port=80 &ndash;target-port=80 &ndash;type=LoadBalancer -n nginx</li>
</ul>
<figure><figcaption>
            <h4>svc LoadBalancer상태#1</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>svc LoadBalancer상태#2</h4>
        </figcaption>
</figure>

<p>위에 AVI에 설정된 서버가 실제적인 K8S의 Node인것을 확인 할 수 있다.</p>
<figure><figcaption>
            <h4>svc LoadBalancer상태#3</h4>
        </figcaption>
</figure>

<p>보는 것과 같이 실제 노드IP에 32676번 (30000번대의 포트를 할당 받음) 포트가 연동 되어 있는것을 확인 할 수 있다.</p>
<p>그럼 실제적으로 클라이언트가 접속을 하게 되면 Node:Port(32767)의 연결된 노드로 트래픽이 가게 되고 노드는 트래픽이 들어오면 해당하는 EndPoint로 접속 하게 되는 것이다.</p>
<ul>
<li>Source &gt; L4 &gt; Node:Port &gt; Container</li>
</ul>
<p>그럼 아래와 같이 SVC와 그의 대한 Endpoint가 어떻게 연결되어 있는지 알 수 있다.
<figure><figcaption>
            <h4>svc LoadBalancer상태#4</h4>
        </figcaption>
</figure>
</p>
<p>아래와 같이 접속이 되는 것을 확인 할 수 있다.
<figure><figcaption>
            <h4>svc LoadBalancer상태#5</h4>
        </figcaption>
</figure>
</p>
<h2 id="l4연동-후-clusterip">L4연동 후 ClusterIP</h2>
<p>그런대 여기서 의문점이 들 것이다. 그럼 ClusterIP는 지원이 안되는건가? 그건 연동하는 L4에서 지원을 하면 가능 하다. 그럼 어떻게 나오는지 한번 확인 해보자.</p>
<p>특별하게 설정 할 것은 없고, AVI를 NodePort를 지원하는 것에서 ClusterIP로 변경 후 상태를 확인 해보면 실제 Pod의 IP로 맵핑이 된 것을 확인 할 수 있다.
<figure><figcaption>
            <h4>svc LoadBalancer상태#6</h4>
        </figcaption>
</figure>
</p>
<h2 id="결과">결과</h2>
<p>위에서 보듯이 NodePort와 ClusterIP의 차이점을 확인해 볼 수 있을 거 같다.</p>
]]></description>
</item></channel>
</rss>
