<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>tekton - Tag - Dokyung&#39;s DevOoOps</title>
        <link>https://huntedhappy.github.io/tags/tekton/</link>
        <description>tekton - Tag - Dokyung&#39;s DevOoOps</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>huntedhappy@gmail.com (Dokyung)</managingEditor>
            <webMaster>huntedhappy@gmail.com (Dokyung)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 25 Jun 2023 11:12:22 &#43;0900</lastBuildDate><atom:link href="https://huntedhappy.github.io/tags/tekton/" rel="self" type="application/rss+xml" /><item>
    <title>The Documentation TAP &amp; JENKINS</title>
    <link>https://huntedhappy.github.io/tap-jenkins/</link>
    <pubDate>Sun, 25 Jun 2023 11:12:22 &#43;0900</pubDate>
    <author>Dokyung</author>
    <guid>https://huntedhappy.github.io/tap-jenkins/</guid>
    <description><![CDATA[<h2 id="out-of-the-box-supply-chain-with-testing-on-jenkins-for-supply-chain-choreographer">Out of the Box Supply Chain with testing on Jenkins for Supply Chain Choreographer</h2>
<p>기본적으로 TAP에서는 TEKTON을 사용하여 Source Testing을 제공 하고 있다. 하지만 별도로 Jenkins를 연동 해서 Source Testing을 진행 해보고 싶어 할 수 도 있을 거 같다.</p>
<p>그래서 TAP에서는 Jenkins와 연동을 제공 하고 있다.</p>
<p><a href="https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/1.5/tap/scc-ootb-supply-chain-testing-with-jenkins.html" target="_blank" rel="noopener noreffer "><i class="fas fa-link"></i> with jenkins</a></p>
<p>사전구성으로 Build Cluster에 Out of the Box Supply Chain With Testing or Out of the Box Supply Chain With Testing and Scanning로 supply_chain 구성이 필요 하다.</p>
<p>사전에 Jenkins의 정보를 넣기 위해 Secret을 생성 해 준다.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">cat <span class="s">&lt;&lt; EOF | kubectl apply -f - -n tap-install
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: v1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: Secret
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: MY-SECRET # secret name that will be referenced by the workload
</span></span></span><span class="line"><span class="cl"><span class="s">type: Opaque
</span></span></span><span class="line"><span class="cl"><span class="s">stringData:
</span></span></span><span class="line"><span class="cl"><span class="s">  url: JENKINS-URL # target jenkins instance url
</span></span></span><span class="line"><span class="cl"><span class="s">  username: USERNAME # jenkins username
</span></span></span><span class="line"><span class="cl"><span class="s">  password: PASSWORD # jenkins password
</span></span></span><span class="line"><span class="cl"><span class="s">  ca-cert: (Optional) PEM-CA-CERT # PEM encoded certificate
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>그리고 Out of the Box Jenkins를 사용하기 위해 Jenkin pipeline을 설정이 필요 합니다.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">cat <span class="s">&lt;&lt;EOF | kubectl apply -f -
</span></span></span><span class="line"><span class="cl"><span class="s">---
</span></span></span><span class="line"><span class="cl"><span class="s">apiVersion: tekton.dev/v1beta1
</span></span></span><span class="line"><span class="cl"><span class="s">kind: Pipeline
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  name: developer-defined-jenkins-tekton-pipeline
</span></span></span><span class="line"><span class="cl"><span class="s">  namespace: developer-namespace
</span></span></span><span class="line"><span class="cl"><span class="s">  labels:
</span></span></span><span class="line"><span class="cl"><span class="s">    #! This label should be provided to the Workload so that
</span></span></span><span class="line"><span class="cl"><span class="s">    #! the supply chain can find this pipeline
</span></span></span><span class="line"><span class="cl"><span class="s">    apps.tanzu.vmware.com/pipeline: jenkins-pipeline
</span></span></span><span class="line"><span class="cl"><span class="s">spec:
</span></span></span><span class="line"><span class="cl"><span class="s">  results:
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: jenkins-job-url   #! To show the job URL on the
</span></span></span><span class="line"><span class="cl"><span class="s">    #! Tanzu Application Platform GUI
</span></span></span><span class="line"><span class="cl"><span class="s">    value: $(tasks.jenkins-task.results.jenkins-job-url)
</span></span></span><span class="line"><span class="cl"><span class="s">  params:
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: source-url        #! Required
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: source-revision   #! Required
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: secret-name       #! Required
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: job-name          #! Required
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: job-params        #! Required
</span></span></span><span class="line"><span class="cl"><span class="s">  tasks:
</span></span></span><span class="line"><span class="cl"><span class="s">  #! Required: Include the built-in task that triggers the
</span></span></span><span class="line"><span class="cl"><span class="s">  #! given job in Jenkins
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: jenkins-task
</span></span></span><span class="line"><span class="cl"><span class="s">    taskRef:
</span></span></span><span class="line"><span class="cl"><span class="s">      name: jenkins-task
</span></span></span><span class="line"><span class="cl"><span class="s">      kind: ClusterTask
</span></span></span><span class="line"><span class="cl"><span class="s">    params:
</span></span></span><span class="line"><span class="cl"><span class="s">      - name: source-url
</span></span></span><span class="line"><span class="cl"><span class="s">        value: $(params.source-url)
</span></span></span><span class="line"><span class="cl"><span class="s">      - name: source-revision
</span></span></span><span class="line"><span class="cl"><span class="s">        value: $(params.source-revision)
</span></span></span><span class="line"><span class="cl"><span class="s">      - name: secret-name
</span></span></span><span class="line"><span class="cl"><span class="s">        value: $(params.secret-name)
</span></span></span><span class="line"><span class="cl"><span class="s">      - name: job-name
</span></span></span><span class="line"><span class="cl"><span class="s">        value: $(params.job-name)
</span></span></span><span class="line"><span class="cl"><span class="s">      - name: job-params
</span></span></span><span class="line"><span class="cl"><span class="s">        value: $(params.job-params)
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span> 
</span></span></code></pre></td></tr></table>
</div>
</div><p>Tekton pipeline은 아래와 같이 이루어 져 있다.</p>
<p>개발자는 아래와 같이 매개변수를 사용하여 Tekton pipeline을 생성 해야 합니다.</p>
<ul>
<li>source-url, required: 테스트 중인 모든 소스 코드가 포함된 소스 형상관리의 주소를 작성</li>
<li>source-revision, required: Branch명을 넣어 주면 된다.</li>
<li>secret-name, required: Jenkins의 사용자 이름, 암호, 인증서(선택사항)가 포함된 Secret Name</li>
<li>job-name, required: Jenkins에 설정한 Pipeline의 이름과 일치</li>
<li>job-params, required: Workload에 작성 한 JSON 문자열로 인코딩된 키-값 쌍 목록
** 여기에 작성 한 값이 JENKINS에 전달해야 되는거 같은대 안되는 거 같다. 개인적인 생각. 이렇게 동작하라고 사용 하는거 같은대.. 실제로 동작하지 않아 보임.
Tasks:</li>
<li>jenkins-task, required: 설정된 ClusterTask중 Jenkins작업을 트리거 하기 위해 실행, kubeclt get clustertask로 이름을 확인 할 수 있다.</li>
</ul>
<p>그리고 아래와 같이 Jenkinsfile을 생성 해준다.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">cat <span class="s">&lt;&lt;EOF | kubectl apply -f -
</span></span></span><span class="line"><span class="cl"><span class="s">#!/bin/env groovy
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">pipeline {
</span></span></span><span class="line"><span class="cl"><span class="s">  agent {
</span></span></span><span class="line"><span class="cl"><span class="s">    // Use an agent that is appropriate 
</span></span></span><span class="line"><span class="cl"><span class="s">    // for your Jenkins installation. 
</span></span></span><span class="line"><span class="cl"><span class="s">    // This is only an example
</span></span></span><span class="line"><span class="cl"><span class="s">    kubernetes { 
</span></span></span><span class="line"><span class="cl"><span class="s">      label &#39;maven&#39;
</span></span></span><span class="line"><span class="cl"><span class="s">    }
</span></span></span><span class="line"><span class="cl"><span class="s">  }
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">  stages {
</span></span></span><span class="line"><span class="cl"><span class="s">    stage(&#39;Checkout code&#39;) {
</span></span></span><span class="line"><span class="cl"><span class="s">      steps {
</span></span></span><span class="line"><span class="cl"><span class="s">        script {
</span></span></span><span class="line"><span class="cl"><span class="s">          sourceUrl = params.SOURCE_REVISION
</span></span></span><span class="line"><span class="cl"><span class="s">          indexSlash = sourceUrl.indexOf(&#34;/&#34;)
</span></span></span><span class="line"><span class="cl"><span class="s">          revision = sourceUrl.substring(indexSlash + 1)
</span></span></span><span class="line"><span class="cl"><span class="s">        }
</span></span></span><span class="line"><span class="cl"><span class="s">        sh &#34;git clone ${params.GIT_URL} target&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">        dir(&#34;target&#34;) {
</span></span></span><span class="line"><span class="cl"><span class="s">          sh &#34;git checkout ${revision}&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">        }
</span></span></span><span class="line"><span class="cl"><span class="s">      }
</span></span></span><span class="line"><span class="cl"><span class="s">    }
</span></span></span><span class="line"><span class="cl"><span class="s">
</span></span></span><span class="line"><span class="cl"><span class="s">    stage(&#39;Maven test&#39;) {
</span></span></span><span class="line"><span class="cl"><span class="s">      steps {
</span></span></span><span class="line"><span class="cl"><span class="s">        container(&#39;maven&#39;) {
</span></span></span><span class="line"><span class="cl"><span class="s">          dir(&#34;target&#34;) {
</span></span></span><span class="line"><span class="cl"><span class="s">            // Example tests with maven
</span></span></span><span class="line"><span class="cl"><span class="s">            sh &#34;mvn clean test --no-transfer-progress&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">          }
</span></span></span><span class="line"><span class="cl"><span class="s">        }
</span></span></span><span class="line"><span class="cl"><span class="s">      }
</span></span></span><span class="line"><span class="cl"><span class="s">    }
</span></span></span><span class="line"><span class="cl"><span class="s">  }
</span></span></span><span class="line"><span class="cl"><span class="s">}
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span> 
</span></span></code></pre></td></tr></table>
</div>
</div><p>다음 필드는 Jenkins 작업 정의에도 필요합니다.</p>
<ul>
<li>SOURCE_REVISION string</li>
<li>GIT_URL string</li>
</ul>
<p>Jenkins에 파라미터를 제공하기 위해 GIT_URL을 작성 해준다.</p>
<p>** 현재 1.5.2 까지 GIT_URL 및 GIT_REVISION이 JENKINS로 전달 되지 않는 것으로 보인다. 하여 Jenkins파일에 파라미터를 추가를 해주어야 한다.</p>
<p>이렇게 설정 한 후에 Workload를 실행을 하게 되면 실제적으로 Jenkins를 통해 소스테스트가 이루어지는 것을 확인 할 수 있다.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">cat <span class="s">&lt;&lt; &#39;EOF&#39; | kubectl -n tap-install apply -f - --context $b
</span></span></span><span class="line"><span class="cl"><span class="s">kind: Workload
</span></span></span><span class="line"><span class="cl"><span class="s">metadata:
</span></span></span><span class="line"><span class="cl"><span class="s">  labels:
</span></span></span><span class="line"><span class="cl"><span class="s">    app.kubernetes.io/part-of: jenkins-tanzu-java-web-app
</span></span></span><span class="line"><span class="cl"><span class="s">    apps.tanzu.vmware.com/has-tests: &#34;true&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">    apps.tanzu.vmware.com/workload-type: web
</span></span></span><span class="line"><span class="cl"><span class="s">    tanzu.app.live.view: &#34;true&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">    tanzu.app.live.view.application.name: jenkins-tanzu-java-web-app
</span></span></span><span class="line"><span class="cl"><span class="s">  name: jenkins-tanzu-java-web-app
</span></span></span><span class="line"><span class="cl"><span class="s">spec:
</span></span></span><span class="line"><span class="cl"><span class="s">  build:
</span></span></span><span class="line"><span class="cl"><span class="s">    env:
</span></span></span><span class="line"><span class="cl"><span class="s">    - name: BP_JVM_VERSION
</span></span></span><span class="line"><span class="cl"><span class="s">      value: 17.*
</span></span></span><span class="line"><span class="cl"><span class="s">  env:
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: JAVA_TOOL_OPTIONS
</span></span></span><span class="line"><span class="cl"><span class="s">    value: &gt;-
</span></span></span><span class="line"><span class="cl"><span class="s">      -Dserver.port=8080
</span></span></span><span class="line"><span class="cl"><span class="s">      -XX:MaxMetaspaceSize=589794K
</span></span></span><span class="line"><span class="cl"><span class="s">      -XX:MaxDirectMemorySize=400M
</span></span></span><span class="line"><span class="cl"><span class="s">      -XX:ReservedCodeCacheSize=240M
</span></span></span><span class="line"><span class="cl"><span class="s">      -Dmanagement.endpoints.web.exposure.include=*
</span></span></span><span class="line"><span class="cl"><span class="s">      -Dmanagement.endpoint.health.show-details=always
</span></span></span><span class="line"><span class="cl"><span class="s">  params:
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: testing_pipeline_matching_labels
</span></span></span><span class="line"><span class="cl"><span class="s">    value:
</span></span></span><span class="line"><span class="cl"><span class="s">      apps.tanzu.vmware.com/pipeline: jenkins-pipeline
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: testing_pipeline_params
</span></span></span><span class="line"><span class="cl"><span class="s">    value:
</span></span></span><span class="line"><span class="cl"><span class="s">      job-name: tap-jenkins
</span></span></span><span class="line"><span class="cl"><span class="s">#      job-params: &#34;[{\&#34;name\&#34;:\&#34;GIT_URL\&#34;, \&#34;value\&#34;:\&#34;https://gitlab.huntedhappy.kro.kr/tanzu/jenkins-tanzu-java-web-app/\&#34;}, {\&#34;name\&#34;:\&#34;GIT_BRANCH\&#34;, \&#34;value\&#34;:\&#34;main\&#34;}]&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">      job-params:
</span></span></span><span class="line"><span class="cl"><span class="s">      - name: GIT_URL
</span></span></span><span class="line"><span class="cl"><span class="s">        value: https://gitlab.huntedhappy.kro.kr/tanzu/jenkins-tanzu-java-web-app
</span></span></span><span class="line"><span class="cl"><span class="s">        name: GIT_BRANCH
</span></span></span><span class="line"><span class="cl"><span class="s">        value: main
</span></span></span><span class="line"><span class="cl"><span class="s">      secret-name: jenkins
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: scanning_source_policy
</span></span></span><span class="line"><span class="cl"><span class="s">    value: sample-scan-policy
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: scanning_image_policy
</span></span></span><span class="line"><span class="cl"><span class="s">    value: sample-scan-policy
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: gitops_server_address
</span></span></span><span class="line"><span class="cl"><span class="s">    value: https://gitlab.huntedhappy.kro.kr
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: gitops_repository_name
</span></span></span><span class="line"><span class="cl"><span class="s">    value: jenkins-tanzu-java-web-app-gitops
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: gitops_repository_owner
</span></span></span><span class="line"><span class="cl"><span class="s">    value: tanzu
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: gitops_branch
</span></span></span><span class="line"><span class="cl"><span class="s">    value: main
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: gitops_user_name
</span></span></span><span class="line"><span class="cl"><span class="s">    value: tanzu
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: gitops_user_email
</span></span></span><span class="line"><span class="cl"><span class="s">    value: my1208@openbase.co.kr
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: gitops_commit_message
</span></span></span><span class="line"><span class="cl"><span class="s">    value: test_giops
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: gitops_ssh_secret
</span></span></span><span class="line"><span class="cl"><span class="s">    value: git-https
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: gitops_server_kind
</span></span></span><span class="line"><span class="cl"><span class="s">    value: gitlab
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: gitops_commit_branch
</span></span></span><span class="line"><span class="cl"><span class="s">    value: &#34;staging&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: gitops_pull_request_title
</span></span></span><span class="line"><span class="cl"><span class="s">    value: &#34;ready for review&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: gitops_pull_request_body
</span></span></span><span class="line"><span class="cl"><span class="s">    value: &#34;generated by supply chain&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  - name: debug
</span></span></span><span class="line"><span class="cl"><span class="s">    value: &#34;true&#34;
</span></span></span><span class="line"><span class="cl"><span class="s">  resources:
</span></span></span><span class="line"><span class="cl"><span class="s">    requests:
</span></span></span><span class="line"><span class="cl"><span class="s">      cpu: 300m
</span></span></span><span class="line"><span class="cl"><span class="s">      memory: 500Mi
</span></span></span><span class="line"><span class="cl"><span class="s">  source:
</span></span></span><span class="line"><span class="cl"><span class="s">    git:
</span></span></span><span class="line"><span class="cl"><span class="s">      ref:
</span></span></span><span class="line"><span class="cl"><span class="s">       branch: main
</span></span></span><span class="line"><span class="cl"><span class="s">      url: https://gitlab.huntedhappy.kro.kr/tanzu/jenkins-tanzu-java-web-app
</span></span></span><span class="line"><span class="cl"><span class="s">EOF</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="result">RESULT</h2>
<p><figure><figcaption>
            <h4>Jenkins에서 확인</h4>
        </figcaption>
</figure>

<figure><figcaption>
            <h4>TAP에서 Jenkins를 통해 배포 확인</h4>
        </figcaption>
</figure>
</p>
]]></description>
</item>
</channel>
</rss>
